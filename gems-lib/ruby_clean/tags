!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABORT_DELAY	config/RubyConfig.h	76;"	d
ABSTRACTREPLACEMENTPOLICY_H	system/AbstractReplacementPolicy.h	3;"	d
ABSTRACT_BLOOM_FILTER_H	system/AbstractBloomFilter.h	66;"	d
ABSTRACT_CHIP_H	slicc_interface/AbstractChip.h	65;"	d
ABSTRACT_MEM_OR_CACHE_H	system/AbstractMemOrCache.h	11;"	d
ACCESSTRACEFORADDRESS_H	profiler/AccessTraceForAddress.h	65;"	d
ACTIVATE_PER_TFAW	system/MemoryControl.h	87;"	d
ACTIVE_	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum VC_state_type {IDLE_, VC_AB_, ACTIVE_, NUM_VC_STATE_TYPE_};$/;"	e	enum:VC_state_type
ACTUAL_LOADING	network/orion_old/power_router_init.h	/^	ACTUAL_LOADING =1,$/;"	e	enum:__anon88
ADDRESSPROFILER_H	profiler/AddressProfiler.h	67;"	d
ADDRESS_H	common/Address.h	25;"	d
ADDRESS_WIDTH	common/Address.h	/^const int ADDRESS_WIDTH = 64; \/\/ address width in bytes$/;"	v
ADJUST_INTERVAL	network/simple/Throttle.C	/^const int ADJUST_INTERVAL = 50000;$/;"	v
ALL_OBJS	network/orion/Makefile	/^ALL_OBJS    = $(ALL_SRCS:.c=.o)$/;"	m
ALL_PASS	network/orion/SIM_permu.h	43;"	d
ALL_SRCS	network/orion/Makefile	/^ALL_SRCS    = $(SRCS) $(TEST_SRCS) $(MODULE_SRCS) $/;"	m
ALU_MAX_MODEL	network/orion/SIM_ALU_model.h	/^	ALU_MAX_MODEL$/;"	e	enum:__anon5
ALU_MODEL	network/orion/Makefile	/^ALU_MODEL    = SIM_ALU.c$/;"	m
AMP_MAX_MODEL	network/orion/SIM_array_model.h	/^	AMP_MAX_MODEL$/;"	e	enum:__anon25
AMP_MAX_MODEL	network/orion_old/power_array.h	/^	AMP_MAX_MODEL$/;"	e	enum:__anon61
AND	common/BigSet.C	/^Set Set::AND(const Set& andSet) const$/;"	f	class:Set
AND	common/NetDest.C	/^NetDest NetDest::AND(const NetDest& andNetDest) const$/;"	f	class:NetDest
AND	common/OptBigSet.C	/^Set Set::AND(const Set& andSet) const$/;"	f	class:Set
AND	common/Set.C	/^Set Set::AND(const Set& andSet) const$/;"	f	class:Set
APPEND_TRANSITION_COMMENT	generated/MI_example/Directory_Controller.C	17;"	d	file:
APPEND_TRANSITION_COMMENT	generated/MI_example/L1Cache_Controller.C	17;"	d	file:
ARBITER_MAX_MODEL	network/orion/SIM_router_model.h	/^	ARBITER_MAX_MODEL$/;"	e	enum:__anon52
ARBITER_MAX_MODEL	network/orion_old/power_arbiter.h	/^	ARBITER_MAX_MODEL$/;"	e	enum:__anon55
AREA_MODEL	network/orion/Makefile	/^AREA_MODEL   = SIM_router_area.c$/;"	m
ARRAY_MODEL	network/orion/Makefile	/^ARRAY_MODEL  = SIM_array_l.c SIM_array_m.c SIM_cam.c$/;"	m
ASCALE	network/orion/SIM_technology_v1.h	110;"	d
ASCALE	network/orion/SIM_technology_v1.h	50;"	d
ASCALE	network/orion/SIM_technology_v1.h	62;"	d
ASCALE	network/orion/SIM_technology_v1.h	74;"	d
ASCALE	network/orion/SIM_technology_v1.h	86;"	d
ASCALE	network/orion/SIM_technology_v1.h	98;"	d
ASCALE	network/orion_old/SIM_power.h	107;"	d
ASCALE	network/orion_old/SIM_power.h	119;"	d
ASCALE	network/orion_old/SIM_power.h	131;"	d
ASCALE	network/orion_old/SIM_power.h	143;"	d
ASCALE	network/orion_old/SIM_power.h	155;"	d
ASCALE	network/orion_old/SIM_power.h	167;"	d
ASCALE	network/orion_old/SIM_power.h	93;"	d
ASCALE	network/orion_old/parm_technology.h	103;"	d
ASCALE	network/orion_old/parm_technology.h	115;"	d
ASCALE	network/orion_old/parm_technology.h	127;"	d
ASCALE	network/orion_old/parm_technology.h	139;"	d
ASCALE	network/orion_old/parm_technology.h	151;"	d
ASCALE	network/orion_old/parm_technology.h	163;"	d
ASCALE	network/orion_old/parm_technology.h	89;"	d
ASSERT	common/Debug.h	155;"	d
ASSERT	common/Debug.h	156;"	d
ASSERT_FLAG	common/Debug.h	/^const bool ASSERT_FLAG = false;$/;"	v
ASSERT_FLAG	common/Debug.h	/^const bool ASSERT_FLAG = true;$/;"	v
AVG_ENERGY	network/orion/SIM_parameter.h	74;"	d
AVG_ENERGY	network/orion_old/SIM_power.h	63;"	d
AVG_ENERGY	network/orion_old/parm_technology.h	388;"	d
A_Replay	simics/depreceated/SimicsDriver.h	/^  A_Replay,          \/* Replay of Atomic instruction *\/$/;"	e	enum:__anon91
AbstractBloomFilter	system/AbstractBloomFilter.h	/^class AbstractBloomFilter {$/;"	c
AbstractCacheEntry	slicc_interface/AbstractCacheEntry.C	/^AbstractCacheEntry::AbstractCacheEntry() {$/;"	f	class:AbstractCacheEntry
AbstractCacheEntry	slicc_interface/AbstractCacheEntry.h	/^class AbstractCacheEntry {$/;"	c
AbstractCacheEntry_H	slicc_interface/AbstractCacheEntry.h	65;"	d
AbstractChip	slicc_interface/AbstractChip.C	/^AbstractChip::AbstractChip(NodeID id, Network* net_ptr) {$/;"	f	class:AbstractChip
AbstractChip	slicc_interface/AbstractChip.h	/^class AbstractChip {$/;"	c
AbstractMemOrCache	system/AbstractMemOrCache.h	/^class AbstractMemOrCache {$/;"	c
AbstractProtocol	slicc_interface/AbstractProtocol.h	/^  AbstractProtocol() {};$/;"	f	class:AbstractProtocol
AbstractProtocol	slicc_interface/AbstractProtocol.h	/^class AbstractProtocol {$/;"	c
AbstractProtocol_H	slicc_interface/AbstractProtocol.h	68;"	d
AbstractReplacementPolicy	system/AbstractReplacementPolicy.h	/^AbstractReplacementPolicy::AbstractReplacementPolicy(Index num_sets, Index assoc)$/;"	f	class:AbstractReplacementPolicy
AbstractReplacementPolicy	system/AbstractReplacementPolicy.h	/^class AbstractReplacementPolicy {$/;"	c
AccessModeType	generated/MI_example/AccessModeType.h	/^enum AccessModeType {$/;"	g
AccessModeType_FIRST	generated/MI_example/AccessModeType.h	/^  AccessModeType_FIRST,$/;"	e	enum:AccessModeType
AccessModeType_H	generated/MI_example/AccessModeType.h	6;"	d
AccessModeType_NUM	generated/MI_example/AccessModeType.h	/^  AccessModeType_NUM$/;"	e	enum:AccessModeType
AccessModeType_SupervisorMode	generated/MI_example/AccessModeType.h	/^  AccessModeType_SupervisorMode = AccessModeType_FIRST,  \/**< Supervisor mode *\/$/;"	e	enum:AccessModeType
AccessModeType_UserMode	generated/MI_example/AccessModeType.h	/^  AccessModeType_UserMode,  \/**< User mode *\/$/;"	e	enum:AccessModeType
AccessModeType_to_string	generated/MI_example/AccessModeType.C	/^string AccessModeType_to_string(const AccessModeType& obj)$/;"	f
AccessPermission	generated/MI_example/AccessPermission.h	/^enum AccessPermission {$/;"	g
AccessPermission_Busy	generated/MI_example/AccessPermission.h	/^  AccessPermission_Busy = AccessPermission_FIRST,  \/**< No Read or Write *\/$/;"	e	enum:AccessPermission
AccessPermission_FIRST	generated/MI_example/AccessPermission.h	/^  AccessPermission_FIRST,$/;"	e	enum:AccessPermission
AccessPermission_H	generated/MI_example/AccessPermission.h	6;"	d
AccessPermission_Invalid	generated/MI_example/AccessPermission.h	/^  AccessPermission_Invalid,  \/**< Invalid *\/$/;"	e	enum:AccessPermission
AccessPermission_NUM	generated/MI_example/AccessPermission.h	/^  AccessPermission_NUM$/;"	e	enum:AccessPermission
AccessPermission_NotPresent	generated/MI_example/AccessPermission.h	/^  AccessPermission_NotPresent,  \/**< NotPresent *\/$/;"	e	enum:AccessPermission
AccessPermission_OnHold	generated/MI_example/AccessPermission.h	/^  AccessPermission_OnHold,  \/**< Holding a place in dnuca cache *\/$/;"	e	enum:AccessPermission
AccessPermission_ReadUpgradingToWrite	generated/MI_example/AccessPermission.h	/^  AccessPermission_ReadUpgradingToWrite,  \/**< Read only, but trying to get Read\/Write *\/$/;"	e	enum:AccessPermission
AccessPermission_Read_Only	generated/MI_example/AccessPermission.h	/^  AccessPermission_Read_Only,  \/**< Read Only *\/$/;"	e	enum:AccessPermission
AccessPermission_Read_Write	generated/MI_example/AccessPermission.h	/^  AccessPermission_Read_Write,  \/**< Read\/Write *\/$/;"	e	enum:AccessPermission
AccessPermission_Stale	generated/MI_example/AccessPermission.h	/^  AccessPermission_Stale,  \/**< local L1 has a modified copy, assume L2 copy is stale data *\/$/;"	e	enum:AccessPermission
AccessPermission_to_string	generated/MI_example/AccessPermission.C	/^string AccessPermission_to_string(const AccessPermission& obj)$/;"	f
AccessTraceForAddress	profiler/AccessTraceForAddress.C	/^AccessTraceForAddress::AccessTraceForAddress()$/;"	f	class:AccessTraceForAddress
AccessTraceForAddress	profiler/AccessTraceForAddress.C	/^AccessTraceForAddress::AccessTraceForAddress(const Address& addr)$/;"	f	class:AccessTraceForAddress
AccessTraceForAddress	profiler/AccessTraceForAddress.h	/^class AccessTraceForAddress {$/;"	c
AccessType	generated/MI_example/AccessType.h	/^enum AccessType {$/;"	g
AccessType_FIRST	generated/MI_example/AccessType.h	/^  AccessType_FIRST,$/;"	e	enum:AccessType
AccessType_H	generated/MI_example/AccessType.h	6;"	d
AccessType_NUM	generated/MI_example/AccessType.h	/^  AccessType_NUM$/;"	e	enum:AccessType
AccessType_Read	generated/MI_example/AccessType.h	/^  AccessType_Read = AccessType_FIRST,  \/**< Reading from cache *\/$/;"	e	enum:AccessType
AccessType_Write	generated/MI_example/AccessType.h	/^  AccessType_Write,  \/**< Writing to cache *\/$/;"	e	enum:AccessType
AccessType_to_string	generated/MI_example/AccessType.C	/^string AccessType_to_string(const AccessType& obj)$/;"	f
AddArea	network/orion/NetworkPowerArea.C	/^void RouterPowerArea_d::AddArea(const RouterPowerArea_d ra)$/;"	f	class:RouterPowerArea_d
AddPower	network/orion/NetworkPowerArea.C	/^void RouterPowerArea_d::AddPower(const RouterPowerArea_d rp)$/;"	f	class:RouterPowerArea_d
Address	common/Address.C	/^Address::Address(const Address& obj)$/;"	f	class:Address
Address	common/Address.h	/^  Address() { m_address = 0; }$/;"	f	class:Address
Address	common/Address.h	/^  explicit Address(physical_address_t address) { m_address = address; }$/;"	f	class:Address
Address	common/Address.h	/^class Address {$/;"	c
AddressProfiler	profiler/AddressProfiler.C	/^AddressProfiler::AddressProfiler()$/;"	f	class:AddressProfiler
AddressProfiler	profiler/AddressProfiler.h	/^class AddressProfiler {$/;"	c
AddressesAreContiguous	simics/depreceated/ContiguousAddressTranslator.h	/^  bool AddressesAreContiguous() const { return m_b_contiguous; }$/;"	f	class:ContiguousAddressTranslator
AllocationStrategy	generated/MI_example/AllocationStrategy.h	/^enum AllocationStrategy {$/;"	g
AllocationStrategy_FIRST	generated/MI_example/AllocationStrategy.h	/^  AllocationStrategy_FIRST,$/;"	e	enum:AllocationStrategy
AllocationStrategy_FrequencyBank	generated/MI_example/AllocationStrategy.h	/^  AllocationStrategy_FrequencyBank,  \/**<  *\/$/;"	e	enum:AllocationStrategy
AllocationStrategy_FrequencyBlock	generated/MI_example/AllocationStrategy.h	/^  AllocationStrategy_FrequencyBlock,  \/**<  *\/$/;"	e	enum:AllocationStrategy
AllocationStrategy_H	generated/MI_example/AllocationStrategy.h	6;"	d
AllocationStrategy_InInvCorners	generated/MI_example/AllocationStrategy.h	/^  AllocationStrategy_InInvCorners,  \/**<  *\/$/;"	e	enum:AllocationStrategy
AllocationStrategy_InMiddle	generated/MI_example/AllocationStrategy.h	/^  AllocationStrategy_InMiddle = AllocationStrategy_FIRST,  \/**<  *\/$/;"	e	enum:AllocationStrategy
AllocationStrategy_InSharedSides	generated/MI_example/AllocationStrategy.h	/^  AllocationStrategy_InSharedSides,  \/**<  *\/$/;"	e	enum:AllocationStrategy
AllocationStrategy_LRUBlock	generated/MI_example/AllocationStrategy.h	/^  AllocationStrategy_LRUBlock,  \/**<  *\/$/;"	e	enum:AllocationStrategy
AllocationStrategy_NUM	generated/MI_example/AllocationStrategy.h	/^  AllocationStrategy_NUM$/;"	e	enum:AllocationStrategy
AllocationStrategy_RandomBank	generated/MI_example/AllocationStrategy.h	/^  AllocationStrategy_RandomBank,  \/**<  *\/$/;"	e	enum:AllocationStrategy
AllocationStrategy_StaticDist	generated/MI_example/AllocationStrategy.h	/^  AllocationStrategy_StaticDist,  \/**<  *\/$/;"	e	enum:AllocationStrategy
AllocationStrategy_to_string	generated/MI_example/AllocationStrategy.C	/^string AllocationStrategy_to_string(const AllocationStrategy& obj)$/;"	f
ArbiterEntry	system/PersistentArbiter.h	/^struct ArbiterEntry {$/;"	s
AreaAND	network/orion/SIM_technology_v1.h	332;"	d
AreaAND	network/orion/SIM_technology_v2.h	971;"	d
AreaAND	network/orion/SIM_technology_v2.h	980;"	d
AreaDFF	network/orion/SIM_technology_v1.h	333;"	d
AreaDFF	network/orion/SIM_technology_v2.h	972;"	d
AreaDFF	network/orion/SIM_technology_v2.h	979;"	d
AreaINV	network/orion/SIM_technology_v1.h	331;"	d
AreaINV	network/orion/SIM_technology_v2.h	970;"	d
AreaINV	network/orion/SIM_technology_v2.h	978;"	d
AreaMUX2	network/orion/SIM_technology_v1.h	334;"	d
AreaMUX2	network/orion/SIM_technology_v2.h	973;"	d
AreaMUX2	network/orion/SIM_technology_v2.h	981;"	d
AreaMUX3	network/orion/SIM_technology_v1.h	335;"	d
AreaMUX3	network/orion/SIM_technology_v2.h	974;"	d
AreaMUX3	network/orion/SIM_technology_v2.h	982;"	d
AreaMUX4	network/orion/SIM_technology_v1.h	336;"	d
AreaMUX4	network/orion/SIM_technology_v2.h	975;"	d
AreaMUX4	network/orion/SIM_technology_v2.h	983;"	d
AreaNOR	network/orion/SIM_technology_v1.h	330;"	d
AreaNOR	network/orion/SIM_technology_v2.h	969;"	d
AreaNOR	network/orion/SIM_technology_v2.h	977;"	d
BARRIERGENERATOR_H	tester/BarrierGenerator.h	65;"	d
BEGIN	generated/MI_example/attrlex.c	145;"	d	file:
BIGNONE	network/orion/SIM_parameter.h	62;"	d
BIGNONE	network/orion_old/SIM_power.h	75;"	d
BIGNONE	network/orion_old/parm_technology.h	401;"	d
BIGNUM	network/orion/SIM_parameter.h	60;"	d
BIGNUM	network/orion_old/SIM_power.h	73;"	d
BIGNUM	network/orion_old/parm_technology.h	399;"	d
BIGONE	network/orion/SIM_parameter.h	61;"	d
BIGONE	network/orion_old/SIM_power.h	74;"	d
BIGONE	network/orion_old/parm_technology.h	400;"	d
BIN_DIR	Makefile	/^BIN_DIR := $(HOST_TYPE)\/generated\/$(PROTOCOL)\/bin$/;"	m
BITLINE_MAX_MODEL	network/orion/SIM_array_model.h	/^	BITLINE_MAX_MODEL$/;"	e	enum:__anon27
BITLINE_MAX_MODEL	network/orion_old/power_array.h	/^	BITLINE_MAX_MODEL$/;"	e	enum:__anon63
BLOCK_BLOOM_FILTER_H	system/BlockBloomFilter.h	66;"	d
BODY_	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum flit_type {HEAD_, BODY_, TAIL_, HEAD_TAIL_, NUM_FLIT_TYPE_};$/;"	e	enum:flit_type
BREAK	common/Debug.h	184;"	d
BROADCAST_SCALING	network/simple/Throttle.C	/^const int BROADCAST_SCALING = 1;$/;"	v
BSUM	network/orion/SIM_util.c	64;"	d	file:
BSUM	network/orion_old/power_utils.C	84;"	d	file:
BUFFER_MAX_MODEL	network/orion/SIM_router_model.h	/^	BUFFER_MAX_MODEL$/;"	e	enum:__anon50
BULK_BLOOM_FILTER_H	system/BulkBloomFilter.h	66;"	d
BUSINV_ENC	network/orion/SIM_misc_model.h	/^	BUSINV_ENC,	\/* bus inversion encoding *\/$/;"	e	enum:__anon39
BUSINV_ENC	network/orion_old/power_bus.h	/^	BUSINV_ENC,	\/* bus inversion encoding *\/$/;"	e	enum:__anon82
BUS_MAX_ENC	network/orion/SIM_misc_model.h	/^	BUS_MAX_ENC$/;"	e	enum:__anon39
BUS_MAX_ENC	network/orion_old/power_bus.h	/^	BUS_MAX_ENC$/;"	e	enum:__anon82
BUS_MAX_MODEL	network/orion/SIM_misc_model.h	/^	BUS_MAX_MODEL$/;"	e	enum:__anon36
BUS_MAX_MODEL	network/orion_old/power_bus.h	/^	BUS_MAX_MODEL$/;"	e	enum:__anon81
BarrierGenerator	tester/BarrierGenerator.C	/^BarrierGenerator::BarrierGenerator(NodeID node, SyntheticDriver& driver) :$/;"	f	class:BarrierGenerator
BarrierGenerator	tester/BarrierGenerator.h	/^class BarrierGenerator : public Consumer {$/;"	c
BarrierGeneratorStatus	tester/BarrierGenerator.h	/^enum BarrierGeneratorStatus {$/;"	g
BarrierGeneratorStatus_Before_Swap	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_Before_Swap,$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_Done	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_Done,$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_FIRST	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_FIRST,$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_Holding	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_Holding,$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_LoadBarrierCounter_Pending	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_LoadBarrierCounter_Pending,$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_NUM	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_NUM$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_Release_Pending	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_Release_Pending,$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_Release_Waiting	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_Release_Waiting,$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_SpinFlag_Pending	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_SpinFlag_Pending,$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_SpinFlag_Ready	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_SpinFlag_Ready,$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_StoreBarrierCounter_Pending	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_StoreBarrierCounter_Pending,$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_StoreBarrierCounter_Waiting	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_StoreBarrierCounter_Waiting,$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_StoreFlag_Pending	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_StoreFlag_Pending,$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_StoreFlag_Waiting	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_StoreFlag_Waiting,$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_Swap_Pending	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_Swap_Pending,$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_Test_Pending	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_Test_Pending,$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_Test_Waiting	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_Test_Waiting,$/;"	e	enum:BarrierGeneratorStatus
BarrierGeneratorStatus_Thinking	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus_Thinking = BarrierGeneratorStatus_FIRST,$/;"	e	enum:BarrierGeneratorStatus
BitHeight	network/orion/SIM_technology_v1.h	272;"	d
BitHeight	network/orion/SIM_technology_v2.h	118;"	d
BitHeight	network/orion/SIM_technology_v2.h	448;"	d
BitHeight	network/orion_old/SIM_power.h	334;"	d
BitHeight	network/orion_old/parm_technology.h	351;"	d
BitWidth	network/orion/SIM_technology_v1.h	269;"	d
BitWidth	network/orion/SIM_technology_v2.h	115;"	d
BitWidth	network/orion/SIM_technology_v2.h	445;"	d
BitWidth	network/orion_old/SIM_power.h	331;"	d
BitWidth	network/orion_old/parm_technology.h	348;"	d
BitlineSpacing	network/orion/SIM_technology_v1.h	281;"	d
BitlineSpacing	network/orion/SIM_technology_v2.h	122;"	d
BitlineSpacing	network/orion/SIM_technology_v2.h	453;"	d
BitlineSpacing	network/orion_old/SIM_power.h	343;"	d
BitlineSpacing	network/orion_old/parm_technology.h	360;"	d
BlockBloomFilter	system/BlockBloomFilter.C	/^BlockBloomFilter::BlockBloomFilter(string str) $/;"	f	class:BlockBloomFilter
BlockBloomFilter	system/BlockBloomFilter.h	/^class BlockBloomFilter : public AbstractBloomFilter {$/;"	c
BufferDriveResistance	network/orion/SIM_technology_v1.h	322;"	d
BufferDriveResistance	network/orion/SIM_technology_v2.h	885;"	d
BufferDriveResistance	network/orion/SIM_technology_v2.h	905;"	d
BufferDriveResistance	network/orion/SIM_technology_v2.h	926;"	d
BufferDriveResistance	network/orion/SIM_technology_v2.h	946;"	d
BufferInputCapacitance	network/orion/SIM_technology_v1.h	323;"	d
BufferInputCapacitance	network/orion/SIM_technology_v2.h	888;"	d
BufferInputCapacitance	network/orion/SIM_technology_v2.h	893;"	d
BufferInputCapacitance	network/orion/SIM_technology_v2.h	898;"	d
BufferInputCapacitance	network/orion/SIM_technology_v2.h	910;"	d
BufferInputCapacitance	network/orion/SIM_technology_v2.h	915;"	d
BufferInputCapacitance	network/orion/SIM_technology_v2.h	920;"	d
BufferInputCapacitance	network/orion/SIM_technology_v2.h	929;"	d
BufferInputCapacitance	network/orion/SIM_technology_v2.h	934;"	d
BufferInputCapacitance	network/orion/SIM_technology_v2.h	939;"	d
BufferInputCapacitance	network/orion/SIM_technology_v2.h	951;"	d
BufferInputCapacitance	network/orion/SIM_technology_v2.h	956;"	d
BufferInputCapacitance	network/orion/SIM_technology_v2.h	961;"	d
BufferIntrinsicDelay	network/orion/SIM_technology_v1.h	324;"	d
BufferIntrinsicDelay	network/orion/SIM_technology_v2.h	886;"	d
BufferIntrinsicDelay	network/orion/SIM_technology_v2.h	906;"	d
BufferIntrinsicDelay	network/orion/SIM_technology_v2.h	927;"	d
BufferIntrinsicDelay	network/orion/SIM_technology_v2.h	947;"	d
BufferNMOSOffCurrent	network/orion/SIM_technology_v1.h	326;"	d
BufferNMOSOffCurrent	network/orion/SIM_technology_v2.h	890;"	d
BufferNMOSOffCurrent	network/orion/SIM_technology_v2.h	895;"	d
BufferNMOSOffCurrent	network/orion/SIM_technology_v2.h	900;"	d
BufferNMOSOffCurrent	network/orion/SIM_technology_v2.h	909;"	d
BufferNMOSOffCurrent	network/orion/SIM_technology_v2.h	914;"	d
BufferNMOSOffCurrent	network/orion/SIM_technology_v2.h	919;"	d
BufferNMOSOffCurrent	network/orion/SIM_technology_v2.h	931;"	d
BufferNMOSOffCurrent	network/orion/SIM_technology_v2.h	936;"	d
BufferNMOSOffCurrent	network/orion/SIM_technology_v2.h	941;"	d
BufferNMOSOffCurrent	network/orion/SIM_technology_v2.h	950;"	d
BufferNMOSOffCurrent	network/orion/SIM_technology_v2.h	955;"	d
BufferNMOSOffCurrent	network/orion/SIM_technology_v2.h	960;"	d
BufferPMOSOffCurrent	network/orion/SIM_technology_v1.h	325;"	d
BufferPMOSOffCurrent	network/orion/SIM_technology_v2.h	889;"	d
BufferPMOSOffCurrent	network/orion/SIM_technology_v2.h	894;"	d
BufferPMOSOffCurrent	network/orion/SIM_technology_v2.h	899;"	d
BufferPMOSOffCurrent	network/orion/SIM_technology_v2.h	908;"	d
BufferPMOSOffCurrent	network/orion/SIM_technology_v2.h	913;"	d
BufferPMOSOffCurrent	network/orion/SIM_technology_v2.h	918;"	d
BufferPMOSOffCurrent	network/orion/SIM_technology_v2.h	930;"	d
BufferPMOSOffCurrent	network/orion/SIM_technology_v2.h	935;"	d
BufferPMOSOffCurrent	network/orion/SIM_technology_v2.h	940;"	d
BufferPMOSOffCurrent	network/orion/SIM_technology_v2.h	949;"	d
BufferPMOSOffCurrent	network/orion/SIM_technology_v2.h	954;"	d
BufferPMOSOffCurrent	network/orion/SIM_technology_v2.h	959;"	d
BulkBloomFilter	system/BulkBloomFilter.C	/^BulkBloomFilter::BulkBloomFilter(string str) $/;"	f	class:BulkBloomFilter
BulkBloomFilter	system/BulkBloomFilter.h	/^class BulkBloomFilter : public AbstractBloomFilter {$/;"	c
CACHEMEMORY_H	system/CacheMemory.h	66;"	d
CACHEPROFILER_H	profiler/CacheProfiler.h	67;"	d
CACHERECORDER_H	recorder/CacheRecorder.h	66;"	d
CACHE_COMPONENT	network/orion_old/power_array.h	/^	CACHE_COMPONENT =1,$/;"	e	enum:__anon66
CACHE_OUTDRV	network/orion/SIM_array_model.h	/^	CACHE_OUTDRV = 1,$/;"	e	enum:__anon31
CACHE_OUTDRV	network/orion_old/power_array.h	/^	CACHE_OUTDRV =1,$/;"	e	enum:__anon67
CACHE_RW_WORDLINE	network/orion/SIM_array_model.h	/^	CACHE_RW_WORDLINE = 1,$/;"	e	enum:__anon26
CACHE_RW_WORDLINE	network/orion_old/power_array.h	/^	CACHE_RW_WORDLINE =1,$/;"	e	enum:__anon62
CACHE_TAG_COMP	network/orion/SIM_array_model.h	/^	CACHE_TAG_COMP = 1,$/;"	e	enum:__anon30
CACHE_WO_WORDLINE	network/orion/SIM_array_model.h	/^	CACHE_WO_WORDLINE,$/;"	e	enum:__anon26
CACHE_WO_WORDLINE	network/orion_old/power_array.h	/^	CACHE_WO_WORDLINE,$/;"	e	enum:__anon62
CALC_HOST	depreceated/module/Makefile	/^  CALC_HOST = $(SIMICS_BASE)\/..\/scripts\/calc_host.sh$/;"	m
CALC_HOST	depreceated/module/Makefile	/^  CALC_HOST = $(SRC_BASE)\/..\/..\/scripts\/calc_host.sh$/;"	m
CAM_ATTACH_MEM	network/orion/SIM_array_model.h	/^	CAM_ATTACH_MEM,$/;"	e	enum:__anon29
CAM_ATTACH_MEM	network/orion_old/power_array.h	/^	CAM_ATTACH_MEM,$/;"	e	enum:__anon65
CAM_COMP	network/orion_old/power_array.h	/^	CAM_COMP,$/;"	e	enum:__anon66
CAM_DATA_MEM	network/orion/SIM_array_model.h	/^	CAM_DATA_MEM,$/;"	e	enum:__anon29
CAM_DATA_MEM	network/orion_old/power_array.h	/^	CAM_DATA_MEM,$/;"	e	enum:__anon65
CAM_OUTDRV	network/orion/SIM_array_model.h	/^	CAM_OUTDRV,$/;"	e	enum:__anon31
CAM_OUTDRV	network/orion_old/power_array.h	/^	CAM_OUTDRV,$/;"	e	enum:__anon67
CAM_RW_WORDLINE	network/orion/SIM_array_model.h	/^	CAM_RW_WORDLINE,$/;"	e	enum:__anon26
CAM_RW_WORDLINE	network/orion_old/power_array.h	/^	CAM_RW_WORDLINE,$/;"	e	enum:__anon62
CAM_TAG_COMP	network/orion/SIM_array_model.h	/^	CAM_TAG_COMP,$/;"	e	enum:__anon30
CAM_TAG_RW_MEM	network/orion/SIM_array_model.h	/^	CAM_TAG_RW_MEM,$/;"	e	enum:__anon29
CAM_TAG_RW_MEM	network/orion_old/power_array.h	/^	CAM_TAG_RW_MEM,$/;"	e	enum:__anon65
CAM_TAG_WO_MEM	network/orion/SIM_array_model.h	/^	CAM_TAG_WO_MEM,$/;"	e	enum:__anon29
CAM_TAG_WO_MEM	network/orion_old/power_array.h	/^	CAM_TAG_WO_MEM,$/;"	e	enum:__anon65
CAM_WO_WORDLINE	network/orion/SIM_array_model.h	/^	CAM_WO_WORDLINE,$/;"	e	enum:__anon26
CAM_WO_WORDLINE	network/orion_old/power_array.h	/^	CAM_WO_WORDLINE,$/;"	e	enum:__anon62
CC2M2metal	network/orion/SIM_technology_v1.h	147;"	d
CC2M2metal	network/orion/SIM_technology_v2.h	141;"	d
CC2M2metal	network/orion/SIM_technology_v2.h	472;"	d
CC2M2metal	network/orion_old/SIM_power.h	200;"	d
CC2M2metal	network/orion_old/parm_technology.h	238;"	d
CC2M3metal	network/orion/SIM_technology_v1.h	148;"	d
CC2M3metal	network/orion/SIM_technology_v2.h	142;"	d
CC2M3metal	network/orion/SIM_technology_v2.h	473;"	d
CC2M3metal	network/orion_old/SIM_power.h	201;"	d
CC2M3metal	network/orion_old/parm_technology.h	239;"	d
CC2metal	network/orion/SIM_technology_v1.h	146;"	d
CC2metal	network/orion/SIM_technology_v2.h	140;"	d
CC2metal	network/orion/SIM_technology_v2.h	471;"	d
CC2metal	network/orion_old/SIM_power.h	199;"	d
CC2metal	network/orion_old/parm_technology.h	237;"	d
CC3M2metal	network/orion/SIM_technology_v1.h	151;"	d
CC3M2metal	network/orion/SIM_technology_v2.h	145;"	d
CC3M2metal	network/orion/SIM_technology_v2.h	476;"	d
CC3M2metal	network/orion_old/SIM_power.h	204;"	d
CC3M2metal	network/orion_old/parm_technology.h	242;"	d
CC3M3metal	network/orion/SIM_technology_v1.h	152;"	d
CC3M3metal	network/orion/SIM_technology_v2.h	146;"	d
CC3M3metal	network/orion/SIM_technology_v2.h	477;"	d
CC3M3metal	network/orion_old/SIM_power.h	205;"	d
CC3M3metal	network/orion_old/parm_technology.h	243;"	d
CC3metal	network/orion/SIM_technology_v1.h	150;"	d
CC3metal	network/orion/SIM_technology_v2.h	144;"	d
CC3metal	network/orion/SIM_technology_v2.h	475;"	d
CC3metal	network/orion_old/SIM_power.h	203;"	d
CC3metal	network/orion_old/parm_technology.h	241;"	d
CCM2metal	network/orion/SIM_technology_v1.h	143;"	d
CCM2metal	network/orion/SIM_technology_v2.h	137;"	d
CCM2metal	network/orion/SIM_technology_v2.h	468;"	d
CCM2metal	network/orion_old/SIM_power.h	196;"	d
CCM2metal	network/orion_old/parm_technology.h	234;"	d
CCM3metal	network/orion/SIM_technology_v1.h	144;"	d
CCM3metal	network/orion/SIM_technology_v2.h	138;"	d
CCM3metal	network/orion/SIM_technology_v2.h	469;"	d
CCM3metal	network/orion_old/SIM_power.h	197;"	d
CCM3metal	network/orion_old/parm_technology.h	235;"	d
CC_VERSION	depreceated/module/Makefile	/^CC_VERSION=3.4.4$/;"	m
CCmetal	network/orion/SIM_technology_v1.h	142;"	d
CCmetal	network/orion/SIM_technology_v2.h	136;"	d
CCmetal	network/orion/SIM_technology_v2.h	467;"	d
CCmetal	network/orion_old/SIM_power.h	195;"	d
CCmetal	network/orion_old/parm_technology.h	233;"	d
CFLAGS	network/orion/Makefile	/^CFLAGS = -I. $(DEFS) -g $/;"	m
CHECKTABLE_H	tester/CheckTable.h	65;"	d
CHECK_H	tester/Check.h	65;"	d
CHECK_NON_ZERO	config/RubyConfig.C	74;"	d	file:
CHECK_POWER_OF_2	config/RubyConfig.C	72;"	d	file:
CHECK_SIZE	tester/Check.h	/^const int CHECK_SIZE = (1<<CHECK_SIZE_BITS);$/;"	v
CHECK_SIZE_BITS	tester/Check.h	/^const int CHECK_SIZE_BITS = 2;$/;"	v
CHECK_ZERO	config/RubyConfig.C	73;"	d	file:
CHIP	simics/depreceated/SimicsHypervisor.C	74;"	d	file:
CHIP_H	generated/MI_example/Chip.h	6;"	d
CLEAR_TRANSITION_COMMENT	generated/MI_example/Directory_Transitions.C	15;"	d	file:
CLEAR_TRANSITION_COMMENT	generated/MI_example/L1Cache_Transitions.C	15;"	d	file:
CLOCK_MODEL	network/orion/Makefile	/^CLOCK_MODEL  = SIM_clock.c$/;"	m
CM2metal	network/orion/SIM_technology_v1.h	138;"	d
CM2metal	network/orion/SIM_technology_v2.h	132;"	d
CM2metal	network/orion/SIM_technology_v2.h	463;"	d
CM2metal	network/orion_old/SIM_power.h	191;"	d
CM2metal	network/orion_old/parm_technology.h	229;"	d
CM3metal	network/orion/SIM_technology_v1.h	139;"	d
CM3metal	network/orion/SIM_technology_v2.h	133;"	d
CM3metal	network/orion/SIM_technology_v2.h	464;"	d
CM3metal	network/orion_old/SIM_power.h	192;"	d
CM3metal	network/orion_old/parm_technology.h	230;"	d
COMMANDS_H	simics/depreceated/commands.h	81;"	d
COMPONENTMAPPINGFNS_H	slicc_interface/RubySlicc_ComponentMapping.h	62;"	d
COMP_MAX_MODEL	network/orion/SIM_array_model.h	/^	COMP_MAX_MODEL$/;"	e	enum:__anon30
COMP_MAX_MODEL	network/orion_old/power_array.h	/^	COMP_MAX_MODEL$/;"	e	enum:__anon66
CONFIG_VAR_FILENAME	config/RubyConfig.h	71;"	d
CONFLICT_IS_READER	simics/depreceated/SimicsHypervisor.h	79;"	d
CONFLICT_IS_WRITER	simics/depreceated/SimicsHypervisor.h	80;"	d
CONFLICT_WITH_SUMMARY_READ	simics/depreceated/SimicsHypervisor.h	81;"	d
CONFLICT_WITH_SUMMARY_WRITE	simics/depreceated/SimicsHypervisor.h	82;"	d
CONSUMER_H	common/Consumer.h	67;"	d
CONTIGUOUSADDRESSTRANSLATOR_H	simics/depreceated/ContiguousAddressTranslator.h	76;"	d
CONTROL_MESSAGE_SIZE	network/Network.h	/^  static int CONTROL_MESSAGE_SIZE;$/;"	m	class:Network
CONTROL_MESSAGE_SIZE	system/System.C	/^int Network::CONTROL_MESSAGE_SIZE = 8;$/;"	m	class:Network	file:
CREDIT_LINK_D_H	network/garnet-fixed-pipeline/CreditLink_d.h	8;"	d
CROSSBAR_MAX_MODEL	network/orion/SIM_router_model.h	/^	CROSSBAR_MAX_MODEL$/;"	e	enum:__anon51
CROSSBAR_MAX_MODEL	network/orion_old/power_crossbar.h	/^	CROSSBAR_MAX_MODEL$/;"	e	enum:__anon86
CSCALE	network/orion/SIM_technology_v1.h	107;"	d
CSCALE	network/orion/SIM_technology_v1.h	47;"	d
CSCALE	network/orion/SIM_technology_v1.h	59;"	d
CSCALE	network/orion/SIM_technology_v1.h	71;"	d
CSCALE	network/orion/SIM_technology_v1.h	83;"	d
CSCALE	network/orion/SIM_technology_v1.h	95;"	d
CSCALE	network/orion_old/SIM_power.h	104;"	d
CSCALE	network/orion_old/SIM_power.h	116;"	d
CSCALE	network/orion_old/SIM_power.h	128;"	d
CSCALE	network/orion_old/SIM_power.h	140;"	d
CSCALE	network/orion_old/SIM_power.h	152;"	d
CSCALE	network/orion_old/SIM_power.h	164;"	d
CSCALE	network/orion_old/SIM_power.h	89;"	d
CSCALE	network/orion_old/parm_technology.h	100;"	d
CSCALE	network/orion_old/parm_technology.h	112;"	d
CSCALE	network/orion_old/parm_technology.h	124;"	d
CSCALE	network/orion_old/parm_technology.h	136;"	d
CSCALE	network/orion_old/parm_technology.h	148;"	d
CSCALE	network/orion_old/parm_technology.h	160;"	d
CSCALE	network/orion_old/parm_technology.h	85;"	d
CURRENT_PROTOCOL	generated/MI_example/protocol_name.h	/^const char CURRENT_PROTOCOL[] = "MI_example";$/;"	v
CUT_THRU_CROSSBAR	network/orion/SIM_router_model.h	/^	CUT_THRU_CROSSBAR,$/;"	e	enum:__anon51
CUT_THRU_CROSSBAR	network/orion_old/power_crossbar.h	/^	CUT_THRU_CROSSBAR,$/;"	e	enum:__anon86
CYCL	network/orion/SIM_util.c	63;"	d	file:
CYCL	network/orion_old/power_utils.C	83;"	d	file:
CacheMemory	system/CacheMemory.h	/^CacheMemory<ENTRY>::CacheMemory(AbstractChip* chip_ptr, int numSetBits,$/;"	f	class:CacheMemory
CacheMemory	system/CacheMemory.h	/^class CacheMemory {$/;"	c
CacheMsg	generated/MI_example/CacheMsg.h	/^  CacheMsg() $/;"	f	class:CacheMsg
CacheMsg	generated/MI_example/CacheMsg.h	/^  CacheMsg(const Address& local_Address, const Address& local_PhysicalAddress, const CacheRequestType& local_Type, const Address& local_ProgramCounter, const AccessModeType& local_AccessMode, const int& local_Size, const PrefetchBit& local_Prefetch, const int& local_Version, const Address& local_LogicalAddress, const int& local_ThreadID, const uint64& local_Timestamp, const bool& local_ExposedAction, const MemorySpaceType& local_Space, const bool& local_profiled, const ruby_mem_access_byte_mask_t& local_AccessMask, const uint64& local_memfetch)$/;"	f	class:CacheMsg
CacheMsg	generated/MI_example/CacheMsg.h	/^class CacheMsg :  public Message {$/;"	c
CacheMsg_H	generated/MI_example/CacheMsg.h	7;"	d
CacheProfiler	profiler/CacheProfiler.C	/^CacheProfiler::CacheProfiler(string description)$/;"	f	class:CacheProfiler
CacheProfiler	profiler/CacheProfiler.h	/^class CacheProfiler {$/;"	c
CacheRecorder	recorder/CacheRecorder.C	/^CacheRecorder::CacheRecorder()$/;"	f	class:CacheRecorder
CacheRecorder	recorder/CacheRecorder.h	/^class CacheRecorder {$/;"	c
CacheRequest	simics/depreceated/SimicsProcessor.h	/^  struct CacheRequest {$/;"	s	class:SimicsProcessor
CacheRequestStatus	simics/depreceated/SimicsProcessor.h	/^  enum CacheRequestStatus {$/;"	g	class:SimicsProcessor
CacheRequestType	generated/MI_example/CacheRequestType.h	/^enum CacheRequestType {$/;"	g
CacheRequestType_ABORT_XACT	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_ABORT_XACT,  \/**< Abort Transaction *\/$/;"	e	enum:CacheRequestType
CacheRequestType_ATOMIC	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_ATOMIC,  \/**< Atomic Load\/Store *\/$/;"	e	enum:CacheRequestType
CacheRequestType_BEGIN_XACT	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_BEGIN_XACT,  \/**< Begin Transaction *\/$/;"	e	enum:CacheRequestType
CacheRequestType_COMMIT	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_COMMIT,  \/**< Commit version *\/$/;"	e	enum:CacheRequestType
CacheRequestType_COMMIT_XACT	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_COMMIT_XACT,  \/**< Commit Transaction *\/$/;"	e	enum:CacheRequestType
CacheRequestType_FIRST	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_FIRST,$/;"	e	enum:CacheRequestType
CacheRequestType_H	generated/MI_example/CacheRequestType.h	6;"	d
CacheRequestType_IDEAL_INV	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_IDEAL_INV,  \/**< Ideal Invalidation *\/$/;"	e	enum:CacheRequestType
CacheRequestType_IFETCH	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_IFETCH,  \/**< Instruction fetch *\/$/;"	e	enum:CacheRequestType
CacheRequestType_IO	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_IO,  \/**< I\/O *\/$/;"	e	enum:CacheRequestType
CacheRequestType_LD	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_LD = CacheRequestType_FIRST,  \/**< Load *\/$/;"	e	enum:CacheRequestType
CacheRequestType_LDX_XACT	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_LDX_XACT,  \/**< Transactional Load-Intend-To-Modify *\/$/;"	e	enum:CacheRequestType
CacheRequestType_LD_XACT	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_LD_XACT,  \/**< Transactional Load *\/$/;"	e	enum:CacheRequestType
CacheRequestType_MEM_FENCE	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_MEM_FENCE,  \/**< Memory fence *\/$/;"	e	enum:CacheRequestType
CacheRequestType_NULL	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_NULL,  \/**< Invalid request type *\/$/;"	e	enum:CacheRequestType
CacheRequestType_NUM	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_NUM$/;"	e	enum:CacheRequestType
CacheRequestType_REPLACEMENT	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_REPLACEMENT,  \/**< Replacement *\/$/;"	e	enum:CacheRequestType
CacheRequestType_ST	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_ST,  \/**< Store *\/$/;"	e	enum:CacheRequestType
CacheRequestType_ST_XACT	generated/MI_example/CacheRequestType.h	/^  CacheRequestType_ST_XACT,  \/**< Transactional Store *\/$/;"	e	enum:CacheRequestType
CacheRequestType_to_GenericRequestType	profiler/Profiler.C	/^GenericRequestType Profiler::CacheRequestType_to_GenericRequestType(const CacheRequestType& type) {$/;"	f	class:Profiler
CacheRequestType_to_string	generated/MI_example/CacheRequestType.C	/^string CacheRequestType_to_string(const CacheRequestType& obj)$/;"	f
CamCellHeight	network/orion/SIM_technology_v1.h	287;"	d
CamCellHeight	network/orion/SIM_technology_v2.h	421;"	d
CamCellHeight	network/orion/SIM_technology_v2.h	753;"	d
CamCellHeight	network/orion_old/SIM_power.h	349;"	d
CamCellHeight	network/orion_old/parm_technology.h	366;"	d
CamCellWidth	network/orion/SIM_technology_v1.h	288;"	d
CamCellWidth	network/orion/SIM_technology_v2.h	422;"	d
CamCellWidth	network/orion/SIM_technology_v2.h	754;"	d
CamCellWidth	network/orion_old/SIM_power.h	350;"	d
CamCellWidth	network/orion_old/parm_technology.h	367;"	d
Cbitmetal	network/orion/SIM_technology_v1.h	134;"	d
Cbitmetal	network/orion/SIM_technology_v2.h	129;"	d
Cbitmetal	network/orion/SIM_technology_v2.h	460;"	d
Cbitmetal	network/orion_old/SIM_power.h	187;"	d
Cbitmetal	network/orion_old/parm_technology.h	225;"	d
Check	tester/Check.C	/^Check::Check(const Address& address, const Address& pc)$/;"	f	class:Check
Check	tester/Check.h	/^class Check {$/;"	c
CheckTable	tester/CheckTable.C	/^CheckTable::CheckTable()$/;"	f	class:CheckTable
CheckTable	tester/CheckTable.h	/^class CheckTable {$/;"	c
Chip	generated/MI_example/Chip.C	/^Chip::Chip(NodeID id, Network* net_ptr):AbstractChip(id, net_ptr)$/;"	f	class:Chip
Chip	generated/MI_example/Chip.h	/^class Chip : public AbstractChip {$/;"	c
ClockCap	network/orion/SIM_technology_v1.h	327;"	d
ClockCap	network/orion/SIM_technology_v2.h	891;"	d
ClockCap	network/orion/SIM_technology_v2.h	896;"	d
ClockCap	network/orion/SIM_technology_v2.h	901;"	d
ClockCap	network/orion/SIM_technology_v2.h	911;"	d
ClockCap	network/orion/SIM_technology_v2.h	916;"	d
ClockCap	network/orion/SIM_technology_v2.h	921;"	d
ClockCap	network/orion/SIM_technology_v2.h	932;"	d
ClockCap	network/orion/SIM_technology_v2.h	937;"	d
ClockCap	network/orion/SIM_technology_v2.h	942;"	d
ClockCap	network/orion/SIM_technology_v2.h	952;"	d
ClockCap	network/orion/SIM_technology_v2.h	957;"	d
ClockCap	network/orion/SIM_technology_v2.h	962;"	d
Clockwire	network/orion/SIM_technology_v1.h	316;"	d
Clockwire	network/orion/SIM_technology_v2.h	149;"	d
Clockwire	network/orion/SIM_technology_v2.h	481;"	d
Cmetal	network/orion/SIM_technology_v1.h	137;"	d
Cmetal	network/orion/SIM_technology_v2.h	131;"	d
Cmetal	network/orion/SIM_technology_v2.h	462;"	d
Cmetal	network/orion_old/SIM_power.h	190;"	d
Cmetal	network/orion_old/parm_technology.h	228;"	d
CoherenceRequestType	generated/MI_example/CoherenceRequestType.h	/^enum CoherenceRequestType {$/;"	g
CoherenceRequestType_FIRST	generated/MI_example/CoherenceRequestType.h	/^  CoherenceRequestType_FIRST,$/;"	e	enum:CoherenceRequestType
CoherenceRequestType_FWD	generated/MI_example/CoherenceRequestType.h	/^  CoherenceRequestType_FWD,  \/**< Generic FWD *\/$/;"	e	enum:CoherenceRequestType
CoherenceRequestType_GETS	generated/MI_example/CoherenceRequestType.h	/^  CoherenceRequestType_GETS,  \/**< Get Shared *\/$/;"	e	enum:CoherenceRequestType
CoherenceRequestType_GETX	generated/MI_example/CoherenceRequestType.h	/^  CoherenceRequestType_GETX = CoherenceRequestType_FIRST,  \/**< Get eXclusive *\/$/;"	e	enum:CoherenceRequestType
CoherenceRequestType_H	generated/MI_example/CoherenceRequestType.h	6;"	d
CoherenceRequestType_INV	generated/MI_example/CoherenceRequestType.h	/^  CoherenceRequestType_INV,  \/**< Invalidation *\/$/;"	e	enum:CoherenceRequestType
CoherenceRequestType_NUM	generated/MI_example/CoherenceRequestType.h	/^  CoherenceRequestType_NUM$/;"	e	enum:CoherenceRequestType
CoherenceRequestType_PUTO	generated/MI_example/CoherenceRequestType.h	/^  CoherenceRequestType_PUTO,  \/**< Put Owned *\/$/;"	e	enum:CoherenceRequestType
CoherenceRequestType_PUTX	generated/MI_example/CoherenceRequestType.h	/^  CoherenceRequestType_PUTX,  \/**< Put eXclusive *\/$/;"	e	enum:CoherenceRequestType
CoherenceRequestType_WB_ACK	generated/MI_example/CoherenceRequestType.h	/^  CoherenceRequestType_WB_ACK,  \/**< Writeback ack *\/$/;"	e	enum:CoherenceRequestType
CoherenceRequestType_WB_NACK	generated/MI_example/CoherenceRequestType.h	/^  CoherenceRequestType_WB_NACK,  \/**< Writeback neg. ack *\/$/;"	e	enum:CoherenceRequestType
CoherenceRequestType_to_string	generated/MI_example/CoherenceRequestType.C	/^string CoherenceRequestType_to_string(const CoherenceRequestType& obj)$/;"	f
CoherenceResponseType	generated/MI_example/CoherenceResponseType.h	/^enum CoherenceResponseType {$/;"	g
CoherenceResponseType_ACK	generated/MI_example/CoherenceResponseType.h	/^  CoherenceResponseType_ACK = CoherenceResponseType_FIRST,  \/**< ACKnowledgment, responder doesn't have a copy *\/$/;"	e	enum:CoherenceResponseType
CoherenceResponseType_DATA	generated/MI_example/CoherenceResponseType.h	/^  CoherenceResponseType_DATA,  \/**< Data *\/$/;"	e	enum:CoherenceResponseType
CoherenceResponseType_DATA_EXCLUSIVE_CLEAN	generated/MI_example/CoherenceResponseType.h	/^  CoherenceResponseType_DATA_EXCLUSIVE_CLEAN,  \/**< Data, no other processor has a copy, data is clean *\/$/;"	e	enum:CoherenceResponseType
CoherenceResponseType_DATA_EXCLUSIVE_DIRTY	generated/MI_example/CoherenceResponseType.h	/^  CoherenceResponseType_DATA_EXCLUSIVE_DIRTY,  \/**< Data, no other processor has a copy, data is dirty *\/$/;"	e	enum:CoherenceResponseType
CoherenceResponseType_FIRST	generated/MI_example/CoherenceResponseType.h	/^  CoherenceResponseType_FIRST,$/;"	e	enum:CoherenceResponseType
CoherenceResponseType_H	generated/MI_example/CoherenceResponseType.h	6;"	d
CoherenceResponseType_NUM	generated/MI_example/CoherenceResponseType.h	/^  CoherenceResponseType_NUM$/;"	e	enum:CoherenceResponseType
CoherenceResponseType_UNBLOCK	generated/MI_example/CoherenceResponseType.h	/^  CoherenceResponseType_UNBLOCK,  \/**< Unblock *\/$/;"	e	enum:CoherenceResponseType
CoherenceResponseType_UNBLOCK_EXCLUSIVE	generated/MI_example/CoherenceResponseType.h	/^  CoherenceResponseType_UNBLOCK_EXCLUSIVE,  \/**< Unblock, we're in E\/M *\/$/;"	e	enum:CoherenceResponseType
CoherenceResponseType_WRITEBACK	generated/MI_example/CoherenceResponseType.h	/^  CoherenceResponseType_WRITEBACK,  \/**< Generic writeback (contains data) *\/$/;"	e	enum:CoherenceResponseType
CoherenceResponseType_WRITEBACK_CLEAN	generated/MI_example/CoherenceResponseType.h	/^  CoherenceResponseType_WRITEBACK_CLEAN,  \/**< Clean writeback (no data) *\/$/;"	e	enum:CoherenceResponseType
CoherenceResponseType_WRITEBACK_DIRTY	generated/MI_example/CoherenceResponseType.h	/^  CoherenceResponseType_WRITEBACK_DIRTY,  \/**< Dirty writeback (contains data) *\/$/;"	e	enum:CoherenceResponseType
CoherenceResponseType_to_string	generated/MI_example/CoherenceResponseType.C	/^string CoherenceResponseType_to_string(const CoherenceResponseType& obj)$/;"	f
Conflict_Retry	simics/depreceated/SimicsDriver.h	/^  Conflict_Retry,    \/* Retry *\/$/;"	e	enum:__anon91
Consumer	common/Consumer.h	/^  Consumer() { m_last_scheduled_wakeup = 0; m_last_wakeup = 0; m_out_link_vec.setSize(0); }$/;"	f	class:Consumer
Consumer	common/Consumer.h	/^class Consumer {$/;"	c
ContiguousAddressTranslator	simics/depreceated/ContiguousAddressTranslator.C	/^ContiguousAddressTranslator::ContiguousAddressTranslator() {$/;"	f	class:ContiguousAddressTranslator
ContiguousAddressTranslator	simics/depreceated/ContiguousAddressTranslator.h	/^class ContiguousAddressTranslator {$/;"	c
ConvertMachToGenericMach	slicc_interface/RubySlicc_ComponentMapping.h	/^extern inline GenericMachineType ConvertMachToGenericMach(MachineType machType) {$/;"	f
Cout	network/orion/SIM_technology_v1.h	274;"	d
Cout	network/orion/SIM_technology_v2.h	120;"	d
Cout	network/orion/SIM_technology_v2.h	450;"	d
Cout	network/orion_old/SIM_power.h	336;"	d
Cout	network/orion_old/parm_technology.h	353;"	d
Cpolywire	network/orion/SIM_technology_v1.h	160;"	d
Cpolywire	network/orion/SIM_technology_v2.h	160;"	d
Cpolywire	network/orion/SIM_technology_v2.h	492;"	d
Cpolywire	network/orion_old/SIM_power.h	213;"	d
Cpolywire	network/orion_old/parm_technology.h	246;"	d
CreditLink_d	network/garnet-fixed-pipeline/CreditLink_d.h	/^	CreditLink_d(int id):NetworkLink_d(id) {}$/;"	f	class:CreditLink_d
CreditLink_d	network/garnet-fixed-pipeline/CreditLink_d.h	/^class CreditLink_d : public NetworkLink_d {$/;"	c
CrsbarCellHeight	network/orion/SIM_technology_v1.h	292;"	d
CrsbarCellHeight	network/orion/SIM_technology_v2.h	427;"	d
CrsbarCellHeight	network/orion/SIM_technology_v2.h	759;"	d
CrsbarCellHeight	network/orion_old/SIM_power.h	354;"	d
CrsbarCellHeight	network/orion_old/parm_technology.h	371;"	d
CrsbarCellWidth	network/orion/SIM_technology_v1.h	293;"	d
CrsbarCellWidth	network/orion/SIM_technology_v2.h	428;"	d
CrsbarCellWidth	network/orion/SIM_technology_v2.h	760;"	d
CrsbarCellWidth	network/orion_old/SIM_power.h	355;"	d
CrsbarCellWidth	network/orion_old/parm_technology.h	372;"	d
Cwordmetal	network/orion/SIM_technology_v1.h	131;"	d
Cwordmetal	network/orion/SIM_technology_v2.h	128;"	d
Cwordmetal	network/orion/SIM_technology_v2.h	459;"	d
Cwordmetal	network/orion_old/SIM_power.h	184;"	d
Cwordmetal	network/orion_old/parm_technology.h	222;"	d
DATABLOCK_H	common/DataBlock.h	63;"	d
DATA_MESSAGE_SIZE	network/Network.h	/^  static int DATA_MESSAGE_SIZE;$/;"	m	class:Network
DATA_MESSAGE_SIZE	system/System.C	/^int Network::DATA_MESSAGE_SIZE = (64+8);$/;"	m	class:Network	file:
DEBUG_EXPR	common/Debug.h	264;"	d
DEBUG_H	common/Debug.h	62;"	d
DEBUG_MSG	common/Debug.h	251;"	d
DEBUG_NEWLINE	common/Debug.h	278;"	d
DEBUG_OUT	common/Debug.h	296;"	d
DEBUG_SLICC	common/Debug.h	287;"	d
DEC_MAX_MODEL	network/orion/SIM_array_model.h	/^	DEC_MAX_MODEL$/;"	e	enum:__anon23
DEC_MAX_MODEL	network/orion_old/power_array.h	/^	DEC_MAX_MODEL$/;"	e	enum:__anon59
DEFAULT_BW_MULTIPLIER	network/simple/Topology.C	/^static const int DEFAULT_BW_MULTIPLIER = 1;  \/\/ Just to be consistent with above :)$/;"	v	file:
DEFINE_COMP	common/Debug.C	76;"	d	file:
DEFINE_COMP	common/Debug.C	77;"	d	file:
DEFINE_COMP	common/Debug.C	84;"	d	file:
DEFINE_COMP	common/Debug.C	85;"	d	file:
DEFINE_COMP	common/Debug.h	73;"	d
DEFINE_COMP	common/Debug.h	74;"	d
DEFINE_COMP_CHAR	common/Debug.C	/^const char DEFINE_COMP_CHAR[] =$/;"	v
DEFINE_COMP_DESCRIPTION	common/Debug.C	/^const char* DEFINE_COMP_DESCRIPTION[] =$/;"	v
DEP	Makefile	/^DEP := $(addprefix $(RUBY_OBJ_DIR)\/,$(SRC_C:.c=.d) $(SRC_CPP:.C=.d))$/;"	m
DESC	Makefile	/^DESC := $(shell cat $(PROTOCOL_ROOT)\/RubySlicc_interfaces.slicc | grep -v "^\\#") $(shell cat $(PROTOCOL_ROOT)\/$(PROTOCOL).slicc | grep -v "^\\#")$/;"	m
DETERMGETXGENERATOR_H	tester/DetermGETXGenerator.h	68;"	d
DETERMINISTICDRIVER_H	tester/DeterministicDriver.h	65;"	d
DETERMINVGENERATOR_H	tester/DetermInvGenerator.h	69;"	d
DETERMSERIESGETSGENERATOR_H	tester/DetermSeriesGETSGenerator.h	70;"	d
DFF_TAB	network/orion/SIM_static.c	/^double DFF_TAB[1] = {0};$/;"	v
DFF_TAB	network/orion/SIM_static.c	/^double DFF_TAB[1] = {194.7e-9};$/;"	v
DFF_TAB	network/orion/SIM_static.c	/^double DFF_TAB[1] = {219.7e-9};$/;"	v
DFF_TAB	network/orion/SIM_static.c	/^double DFF_TAB[1] = {231.3e-9};$/;"	v
DFF_TAB	network/orion/SIM_static.c	/^double DFF_TAB[1] = {970.4e-9};$/;"	v
DFF_TAB	network/orion/SIM_static.c	/^double DFF_TAB[1] ={400.3e-9};$/;"	v
DIRECTORYCACHEMEMORY_H	system/DirectoryCacheMemory.h	8;"	d
DIRECTORYMEMORY_H	system/DirectoryMemory.h	67;"	d
DIRECTORY_MEMBER_VARIABLE	common/Global.h	87;"	d
DRIVER_H	common/Driver.h	65;"	d
DWIDTH_DSPACE	network/orion/SIM_link_model.h	46;"	d
DWIDTH_SSPACE	network/orion/SIM_link_model.h	45;"	d
D_Replay	simics/depreceated/SimicsDriver.h	/^  D_Replay,          \/* Replay of Data access *\/$/;"	e	enum:__anon91
DataBlock	common/DataBlock.C	/^DataBlock::DataBlock() $/;"	f	class:DataBlock
DataBlock	common/DataBlock.h	/^class DataBlock {$/;"	c
Debug	common/Debug.C	/^Debug::Debug( const char *filterString, const char *verboseString,$/;"	f	class:Debug
Debug	common/Debug.h	/^class Debug {$/;"	c
DebugComponents	common/Debug.h	/^enum DebugComponents$/;"	g
DetermGETXGenerator	tester/DetermGETXGenerator.C	/^DetermGETXGenerator::DetermGETXGenerator(NodeID node, DeterministicDriver& driver) :$/;"	f	class:DetermGETXGenerator
DetermGETXGenerator	tester/DetermGETXGenerator.h	/^class DetermGETXGenerator : public SpecifiedGenerator {$/;"	c
DetermGETXGeneratorStatus	generated/MI_example/DetermGETXGeneratorStatus.h	/^enum DetermGETXGeneratorStatus {$/;"	g
DetermGETXGeneratorStatus_Done	generated/MI_example/DetermGETXGeneratorStatus.h	/^  DetermGETXGeneratorStatus_Done,  \/**< Done, waiting for end of run *\/$/;"	e	enum:DetermGETXGeneratorStatus
DetermGETXGeneratorStatus_FIRST	generated/MI_example/DetermGETXGeneratorStatus.h	/^  DetermGETXGeneratorStatus_FIRST,$/;"	e	enum:DetermGETXGeneratorStatus
DetermGETXGeneratorStatus_H	generated/MI_example/DetermGETXGeneratorStatus.h	6;"	d
DetermGETXGeneratorStatus_NUM	generated/MI_example/DetermGETXGeneratorStatus.h	/^  DetermGETXGeneratorStatus_NUM$/;"	e	enum:DetermGETXGeneratorStatus
DetermGETXGeneratorStatus_Store_Pending	generated/MI_example/DetermGETXGeneratorStatus.h	/^  DetermGETXGeneratorStatus_Store_Pending,  \/**< Store pending *\/$/;"	e	enum:DetermGETXGeneratorStatus
DetermGETXGeneratorStatus_Thinking	generated/MI_example/DetermGETXGeneratorStatus.h	/^  DetermGETXGeneratorStatus_Thinking = DetermGETXGeneratorStatus_FIRST,  \/**< Doing work before next action *\/$/;"	e	enum:DetermGETXGeneratorStatus
DetermGETXGeneratorStatus_to_string	generated/MI_example/DetermGETXGeneratorStatus.C	/^string DetermGETXGeneratorStatus_to_string(const DetermGETXGeneratorStatus& obj)$/;"	f
DetermInvGenerator	tester/DetermInvGenerator.C	/^DetermInvGenerator::DetermInvGenerator(NodeID node, DeterministicDriver& driver) :$/;"	f	class:DetermInvGenerator
DetermInvGenerator	tester/DetermInvGenerator.h	/^class DetermInvGenerator : public SpecifiedGenerator {$/;"	c
DetermInvGeneratorStatus	generated/MI_example/DetermInvGeneratorStatus.h	/^enum DetermInvGeneratorStatus {$/;"	g
DetermInvGeneratorStatus_Done	generated/MI_example/DetermInvGeneratorStatus.h	/^  DetermInvGeneratorStatus_Done,  \/**< Done, waiting for end of run *\/$/;"	e	enum:DetermInvGeneratorStatus
DetermInvGeneratorStatus_FIRST	generated/MI_example/DetermInvGeneratorStatus.h	/^  DetermInvGeneratorStatus_FIRST,$/;"	e	enum:DetermInvGeneratorStatus
DetermInvGeneratorStatus_H	generated/MI_example/DetermInvGeneratorStatus.h	6;"	d
DetermInvGeneratorStatus_Load_Complete	generated/MI_example/DetermInvGeneratorStatus.h	/^  DetermInvGeneratorStatus_Load_Complete,  \/**< Load complete *\/$/;"	e	enum:DetermInvGeneratorStatus
DetermInvGeneratorStatus_Load_Pending	generated/MI_example/DetermInvGeneratorStatus.h	/^  DetermInvGeneratorStatus_Load_Pending,  \/**< Load pending *\/$/;"	e	enum:DetermInvGeneratorStatus
DetermInvGeneratorStatus_NUM	generated/MI_example/DetermInvGeneratorStatus.h	/^  DetermInvGeneratorStatus_NUM$/;"	e	enum:DetermInvGeneratorStatus
DetermInvGeneratorStatus_Store_Pending	generated/MI_example/DetermInvGeneratorStatus.h	/^  DetermInvGeneratorStatus_Store_Pending,  \/**< Store pending *\/$/;"	e	enum:DetermInvGeneratorStatus
DetermInvGeneratorStatus_Thinking	generated/MI_example/DetermInvGeneratorStatus.h	/^  DetermInvGeneratorStatus_Thinking = DetermInvGeneratorStatus_FIRST,  \/**< Doing work before next action *\/$/;"	e	enum:DetermInvGeneratorStatus
DetermInvGeneratorStatus_to_string	generated/MI_example/DetermInvGeneratorStatus.C	/^string DetermInvGeneratorStatus_to_string(const DetermInvGeneratorStatus& obj)$/;"	f
DetermSeriesGETSGenerator	tester/DetermSeriesGETSGenerator.C	/^DetermSeriesGETSGenerator::DetermSeriesGETSGenerator(NodeID node, DeterministicDriver& driver) :$/;"	f	class:DetermSeriesGETSGenerator
DetermSeriesGETSGenerator	tester/DetermSeriesGETSGenerator.h	/^class DetermSeriesGETSGenerator : public SpecifiedGenerator {$/;"	c
DetermSeriesGETSGeneratorStatus	generated/MI_example/DetermSeriesGETSGeneratorStatus.h	/^enum DetermSeriesGETSGeneratorStatus {$/;"	g
DetermSeriesGETSGeneratorStatus_Done	generated/MI_example/DetermSeriesGETSGeneratorStatus.h	/^  DetermSeriesGETSGeneratorStatus_Done,  \/**< Done, waiting for end of run *\/$/;"	e	enum:DetermSeriesGETSGeneratorStatus
DetermSeriesGETSGeneratorStatus_FIRST	generated/MI_example/DetermSeriesGETSGeneratorStatus.h	/^  DetermSeriesGETSGeneratorStatus_FIRST,$/;"	e	enum:DetermSeriesGETSGeneratorStatus
DetermSeriesGETSGeneratorStatus_H	generated/MI_example/DetermSeriesGETSGeneratorStatus.h	6;"	d
DetermSeriesGETSGeneratorStatus_Load_Pending	generated/MI_example/DetermSeriesGETSGeneratorStatus.h	/^  DetermSeriesGETSGeneratorStatus_Load_Pending,  \/**< Load pending *\/$/;"	e	enum:DetermSeriesGETSGeneratorStatus
DetermSeriesGETSGeneratorStatus_NUM	generated/MI_example/DetermSeriesGETSGeneratorStatus.h	/^  DetermSeriesGETSGeneratorStatus_NUM$/;"	e	enum:DetermSeriesGETSGeneratorStatus
DetermSeriesGETSGeneratorStatus_Thinking	generated/MI_example/DetermSeriesGETSGeneratorStatus.h	/^  DetermSeriesGETSGeneratorStatus_Thinking = DetermSeriesGETSGeneratorStatus_FIRST,  \/**< Doing work before next action *\/$/;"	e	enum:DetermSeriesGETSGeneratorStatus
DetermSeriesGETSGeneratorStatus_to_string	generated/MI_example/DetermSeriesGETSGeneratorStatus.C	/^string DetermSeriesGETSGeneratorStatus_to_string(const DetermSeriesGETSGeneratorStatus& obj)$/;"	f
DeterministicDriver	tester/DeterministicDriver.C	/^DeterministicDriver::DeterministicDriver(System* sys_ptr)$/;"	f	class:DeterministicDriver
DeterministicDriver	tester/DeterministicDriver.h	/^class DeterministicDriver : public Driver, public Consumer {$/;"	c
DirectoryCacheMemory	system/DirectoryCacheMemory.h	/^    DirectoryCacheMemory(AbstractChip* chip_ptr, int numSetBits, int cacheAssoc, const MachineType machType, const string& description)$/;"	f	class:DirectoryCacheMemory
DirectoryCacheMemory	system/DirectoryCacheMemory.h	/^class DirectoryCacheMemory : public CacheMemory<ENTRY> {$/;"	c
DirectoryMap	system/DirectoryMemory.h	/^  typedef std::map<int, Directory_Entry*> DirectoryMap; \/\/ WF: for flexible address partitioning$/;"	t	class:DirectoryMemory
DirectoryMemory	system/DirectoryMemory.C	/^DirectoryMemory::DirectoryMemory(Chip* chip_ptr, int version)$/;"	f	class:DirectoryMemory
DirectoryMemory	system/DirectoryMemory.h	/^class DirectoryMemory {$/;"	c
DirectoryTransitionsPerCycle	config/RubyConfig.h	/^  static int DirectoryTransitionsPerCycle() { return DIRECTORY_TRANSITIONS_PER_RUBY_CYCLE; }$/;"	f	class:RubyConfig
Directory_CONTROLLER_H	generated/MI_example/Directory_Controller.h	8;"	d
Directory_Controller	generated/MI_example/Directory_Controller.C	/^Directory_Controller::Directory_Controller(Chip* chip_ptr, int version)$/;"	f	class:Directory_Controller
Directory_Controller	generated/MI_example/Directory_Controller.h	/^class Directory_Controller : public Consumer {$/;"	c
Directory_Entry	generated/MI_example/Directory_Entry.h	/^  Directory_Entry() $/;"	f	class:Directory_Entry
Directory_Entry	generated/MI_example/Directory_Entry.h	/^  Directory_Entry(const Directory_State& local_DirectoryState, const DataBlock& local_DataBlk, const NetDest& local_Sharers, const NetDest& local_Owner)$/;"	f	class:Directory_Entry
Directory_Entry	generated/MI_example/Directory_Entry.h	/^class Directory_Entry {$/;"	c
Directory_Entry_H	generated/MI_example/Directory_Entry.h	7;"	d
Directory_Event	generated/MI_example/Directory_Event.h	/^enum Directory_Event {$/;"	g
Directory_Event_FIRST	generated/MI_example/Directory_Event.h	/^  Directory_Event_FIRST,$/;"	e	enum:Directory_Event
Directory_Event_GETS	generated/MI_example/Directory_Event.h	/^  Directory_Event_GETS,  \/**< A GETS arrives *\/$/;"	e	enum:Directory_Event
Directory_Event_GETX	generated/MI_example/Directory_Event.h	/^  Directory_Event_GETX = Directory_Event_FIRST,  \/**< A GETX arrives *\/$/;"	e	enum:Directory_Event
Directory_Event_H	generated/MI_example/Directory_Event.h	6;"	d
Directory_Event_NUM	generated/MI_example/Directory_Event.h	/^  Directory_Event_NUM$/;"	e	enum:Directory_Event
Directory_Event_PUTO	generated/MI_example/Directory_Event.h	/^  Directory_Event_PUTO,  \/**< A PUTO arrives *\/$/;"	e	enum:Directory_Event
Directory_Event_PUTX	generated/MI_example/Directory_Event.h	/^  Directory_Event_PUTX,  \/**< A PUTX arrives *\/$/;"	e	enum:Directory_Event
Directory_Event_PUTX_NotOwner	generated/MI_example/Directory_Event.h	/^  Directory_Event_PUTX_NotOwner,  \/**< A PUTX arrives *\/$/;"	e	enum:Directory_Event
Directory_Event_Unblock	generated/MI_example/Directory_Event.h	/^  Directory_Event_Unblock,  \/**< An unblock message arrives *\/$/;"	e	enum:Directory_Event
Directory_Event_to_string	generated/MI_example/Directory_Event.C	/^string Directory_Event_to_string(const Directory_Event& obj)$/;"	f
Directory_PROFILER_H	generated/MI_example/Directory_Profiler.h	5;"	d
Directory_Profiler	generated/MI_example/Directory_Profiler.C	/^Directory_Profiler::Directory_Profiler()$/;"	f	class:Directory_Profiler
Directory_Profiler	generated/MI_example/Directory_Profiler.h	/^class Directory_Profiler {$/;"	c
Directory_State	generated/MI_example/Directory_State.h	/^enum Directory_State {$/;"	g
Directory_State_FIRST	generated/MI_example/Directory_State.h	/^  Directory_State_FIRST,$/;"	e	enum:Directory_State
Directory_State_H	generated/MI_example/Directory_State.h	6;"	d
Directory_State_I	generated/MI_example/Directory_State.h	/^  Directory_State_I = Directory_State_FIRST,  \/**< Invalid *\/$/;"	e	enum:Directory_State
Directory_State_M	generated/MI_example/Directory_State.h	/^  Directory_State_M,  \/**< Modified *\/$/;"	e	enum:Directory_State
Directory_State_MI	generated/MI_example/Directory_State.h	/^  Directory_State_MI,  \/**< Blocked on a writeback *\/$/;"	e	enum:Directory_State
Directory_State_NUM	generated/MI_example/Directory_State.h	/^  Directory_State_NUM$/;"	e	enum:Directory_State
Directory_State_to_string	generated/MI_example/Directory_State.C	/^string Directory_State_to_string(const Directory_State& obj)$/;"	f
Directory_getState	generated/MI_example/Directory_getState.C	/^Directory_State Directory_Controller::Directory_getState(Address param_addr)$/;"	f	class:Directory_Controller
Directory_setState	generated/MI_example/Directory_setState.C	/^void Directory_Controller::Directory_setState(Address param_addr, Directory_State param_state)$/;"	f	class:Directory_Controller
Directory_transitionComment	generated/MI_example/Directory_Controller.C	/^stringstream Directory_transitionComment;$/;"	v
Done	simics/depreceated/SimicsProcessor.h	/^    Done,$/;"	e	enum:SimicsProcessor::CacheRequestStatus
Driver	common/Driver.C	/^Driver::Driver() {$/;"	f	class:Driver
Driver	common/Driver.h	/^class Driver {$/;"	c
ECHO	generated/MI_example/attrlex.c	708;"	d	file:
EOB_ACT_CONTINUE_SCAN	generated/MI_example/attrlex.c	188;"	d	file:
EOB_ACT_END_OF_FILE	generated/MI_example/attrlex.c	189;"	d	file:
EOB_ACT_LAST_MATCH	generated/MI_example/attrlex.c	190;"	d	file:
EQU_BITLINE	network/orion/SIM_array_model.h	/^	EQU_BITLINE,$/;"	e	enum:__anon28
EQU_BITLINE	network/orion_old/power_array.h	/^	EQU_BITLINE,$/;"	e	enum:__anon64
ERROR_MESSAGE_FLAG	common/Debug.h	/^const bool ERROR_MESSAGE_FLAG = true;$/;"	v
ERROR_MSG	common/Debug.h	200;"	d
ERROR_OUT	common/Debug.h	307;"	d
EVENTQUEUENODE_H	eventqueue/EventQueueNode.h	63;"	d
EVENTQUEUE_H	eventqueue/EventQueue.h	87;"	d
EXTRA_OBJ_FILES	depreceated/module/Makefile	/^  EXTRA_OBJ_FILES = $(shell ls $(SIMICS_BASE)\/..\/ruby\/$(HOST_TYPE)\/generated\/$(PROTOCOL)\/obj\/*.o)$/;"	m
EXTRA_OBJ_FILES	depreceated/module/Makefile	/^  EXTRA_OBJ_FILES = $(shell ls $(SRC_BASE)\/..\/..\/ruby\/$(HOST_TYPE)\/generated\/$(PROTOCOL)\/obj\/*.o)$/;"	m
EXTRA_VPATH	depreceated/module/Makefile	/^  EXTRA_VPATH = $(SIMICS_BASE)\/..\/ruby$/;"	m
EXTRA_VPATH	depreceated/module/Makefile	/^  EXTRA_VPATH = $(SRC_BASE)\/..\/..\/ruby$/;"	m
EnergyFactor	network/orion/SIM_parameter.h	102;"	d
EnergyFactor	network/orion_old/SIM_power.h	248;"	d
EnergyFactor	network/orion_old/parm_technology.h	265;"	d
EventQueue	eventqueue/EventQueue.C	/^EventQueue::EventQueue()$/;"	f	class:EventQueue
EventQueue	eventqueue/EventQueue.h	/^class EventQueue {$/;"	c
EventQueueNode	eventqueue/EventQueueNode.h	/^  EventQueueNode() { m_time = 0; m_consumer_ptr = NULL; }$/;"	f	class:EventQueueNode
EventQueueNode	eventqueue/EventQueueNode.h	/^  EventQueueNode(const EventQueueNode& obj) {$/;"	f	class:EventQueueNode
EventQueueNode	eventqueue/EventQueueNode.h	/^class EventQueueNode {$/;"	c
FALL	network/orion/SIM_parameter.h	69;"	d
FALL	network/orion_old/SIM_power.h	80;"	d
FALL	network/orion_old/parm_technology.h	406;"	d
FALSE	network/orion/SIM_parameter.h	65;"	d
FF_MAX_MODEL	network/orion/SIM_misc_model.h	/^	FF_MAX_MODEL$/;"	e	enum:__anon38
FF_MAX_MODEL	network/orion_old/power_arbiter.h	/^	FF_MAX_MODEL$/;"	e	enum:__anon56
FILE	simics/simics_api_dummy.c	/^typedef int FILE;$/;"	t	file:
FILENAME	depreceated/module/Makefile	/^FILENAME = ruby$/;"	m
FIRST_STG	network/orion/SIM_permu.h	39;"	d
FLEXIBLE_CONSUMER_H	network/garnet-flexible-pipeline/FlexibleConsumer.h	61;"	d
FLEXINT_H	generated/MI_example/attrlex.c	49;"	d	file:
FLEX_BETA	generated/MI_example/attrlex.c	33;"	d	file:
FLEX_SCANNER	generated/MI_example/attrlex.c	28;"	d	file:
FLIT_BUFFER_D_H	network/garnet-fixed-pipeline/flitBuffer_d.h	62;"	d
FLIT_BUFFER_H	network/garnet-flexible-pipeline/flitBuffer.h	62;"	d
FLIT_D_H	network/garnet-fixed-pipeline/flit_d.h	63;"	d
FLIT_H	network/garnet-flexible-pipeline/flit.h	65;"	d
FOURTH_STG	network/orion/SIM_permu.h	42;"	d
FUNC	network/orion/SIM_parameter.h	44;"	d
FUNC	network/orion/SIM_reg.c	/^inline int FUNC( SIM_reg_power_data_read, SIM_power_array_info_t *info, SIM_power_array_t *arr, P_DATA_T data )$/;"	f
FUNC	network/orion/SIM_reg.c	/^inline int FUNC( SIM_reg_power_data_write, SIM_power_array_info_t *info, SIM_power_array_t *arr, u_int port, LIB_Type_max_uint old_data, LIB_Type_max_uint new_data )$/;"	f
FUNC	network/orion/SIM_reg.c	/^inline int FUNC( SIM_reg_power_dec, SIM_power_array_info_t *info, SIM_power_array_t *arr, u_int port, LIB_Type_max_uint row_addr, int rw )$/;"	f
FUNC	network/orion/SIM_reg.c	/^inline int FUNC( SIM_reg_power_output, SIM_power_array_info_t *info, SIM_power_array_t *arr, P_DATA_T data )$/;"	f
FUNC	network/orion/SIM_reg.c	/^int FUNC(SIM_reg_power_init, SIM_power_array_info_t *info, SIM_power_array_t *arr, SIM_reg_port_state_t *read_port, SIM_reg_port_state_t *write_port)$/;"	f
FUNC	network/orion/SIM_reg.c	/^int FUNC(SIM_reg_power_report, SIM_power_array_info_t *info, SIM_power_array_t *arr)$/;"	f
FUNC	network/orion_old/SIM_power_test.h	67;"	d
FUNCPTR	network/orion/SIM_parameter.h	45;"	d
FUNCPTR	network/orion_old/SIM_power_test.h	68;"	d
F_ADD	network/orion/SIM_technology_v1.h	305;"	d
F_ADD	network/orion_old/SIM_power.h	367;"	d
F_ADD	network/orion_old/parm_technology.h	485;"	d
F_ADD_CLOCK	network/orion/SIM_technology_v1.h	312;"	d
F_ADD_CLOCK	network/orion_old/SIM_power.h	374;"	d
F_ADD_CLOCK	network/orion_old/parm_technology.h	492;"	d
F_MULT	network/orion/SIM_technology_v1.h	306;"	d
F_MULT	network/orion_old/SIM_power.h	368;"	d
F_MULT	network/orion_old/parm_technology.h	486;"	d
F_MULT_CLOCK	network/orion/SIM_technology_v1.h	313;"	d
F_MULT_CLOCK	network/orion_old/SIM_power.h	375;"	d
F_MULT_CLOCK	network/orion_old/parm_technology.h	493;"	d
FlexibleConsumer	network/garnet-flexible-pipeline/FlexibleConsumer.h	/^class FlexibleConsumer : public Consumer {$/;"	c
FromGpusimDram_push	gpusim_ruby/gpusim_ruby.C	/^void gpusim_ruby::FromGpusimDram_push(unsigned partition_id, ruby_dram_req_info dram_req) {$/;"	f	class:gpusim_ruby
FromGpusimDram_push	interfaces/GpusimInterface.C	/^void GpusimInterface::FromGpusimDram_push(unsigned partition_id, MsgPtr* msg_ptr) {$/;"	f	class:GpusimInterface
GARNET	Makefile	/^GARNET = garnet-flexible-pipeline$/;"	m
GARNETNETWORK_D_H	network/garnet-fixed-pipeline/GarnetNetwork_d.h	62;"	d
GARNET_DETAIL	Makefile	/^GARNET_DETAIL = garnet-fixed-pipeline$/;"	m
GARNET_NETWORK_H	network/garnet-flexible-pipeline/GarnetNetwork.h	62;"	d
GEMS_ROOT	Makefile	/^GEMS_ROOT := ..$/;"	m
GEMS_ROOT	depreceated/module/Makefile	/^GEMS_ROOT = $(SRC_BASE)\/..\/..\/$/;"	m
GENERATED_DIR	Makefile	/^GENERATED_DIR := generated\/$(PROTOCOL)$/;"	m
GENERATE_HTML	Makefile	/^GENERATE_HTML := "html"$/;"	m
GENERATE_HTML	Makefile	/^GENERATE_HTML := "no_html"$/;"	m
GENERIC_AMP	network/orion/SIM_array_model.h	/^	GENERIC_AMP = 1,$/;"	e	enum:__anon25
GENERIC_AMP	network/orion_old/power_array.h	/^	GENERIC_AMP =1,$/;"	e	enum:__anon61
GENERIC_BLOOM_FILTER_H	system/GenericBloomFilter.h	66;"	d
GENERIC_BUS	network/orion/SIM_misc_model.h	/^	GENERIC_BUS,$/;"	e	enum:__anon36
GENERIC_BUS	network/orion_old/power_bus.h	/^	GENERIC_BUS,$/;"	e	enum:__anon81
GENERIC_DEC	network/orion/SIM_array_model.h	/^	GENERIC_DEC = 1,$/;"	e	enum:__anon23
GENERIC_DEC	network/orion_old/power_array.h	/^	GENERIC_DEC =1,$/;"	e	enum:__anon59
GENERIC_MUX	network/orion/SIM_array_model.h	/^	GENERIC_MUX = 1,$/;"	e	enum:__anon24
GENERIC_MUX	network/orion_old/power_array.h	/^	GENERIC_MUX =1,$/;"	e	enum:__anon60
GENERIC_SEL	network/orion/SIM_misc_model.h	/^	GENERIC_SEL = 1,$/;"	e	enum:__anon37
GEN_POWER_SCALE	network/orion/SIM_technology_v1.h	105;"	d
GEN_POWER_SCALE	network/orion/SIM_technology_v1.h	117;"	d
GEN_POWER_SCALE	network/orion/SIM_technology_v1.h	57;"	d
GEN_POWER_SCALE	network/orion/SIM_technology_v1.h	69;"	d
GEN_POWER_SCALE	network/orion/SIM_technology_v1.h	81;"	d
GEN_POWER_SCALE	network/orion/SIM_technology_v1.h	93;"	d
GEN_POWER_SCALE	network/orion_old/SIM_power.h	101;"	d
GEN_POWER_SCALE	network/orion_old/SIM_power.h	114;"	d
GEN_POWER_SCALE	network/orion_old/SIM_power.h	126;"	d
GEN_POWER_SCALE	network/orion_old/SIM_power.h	138;"	d
GEN_POWER_SCALE	network/orion_old/SIM_power.h	150;"	d
GEN_POWER_SCALE	network/orion_old/SIM_power.h	162;"	d
GEN_POWER_SCALE	network/orion_old/SIM_power.h	174;"	d
GEN_POWER_SCALE	network/orion_old/parm_technology.h	110;"	d
GEN_POWER_SCALE	network/orion_old/parm_technology.h	122;"	d
GEN_POWER_SCALE	network/orion_old/parm_technology.h	134;"	d
GEN_POWER_SCALE	network/orion_old/parm_technology.h	146;"	d
GEN_POWER_SCALE	network/orion_old/parm_technology.h	158;"	d
GEN_POWER_SCALE	network/orion_old/parm_technology.h	170;"	d
GEN_POWER_SCALE	network/orion_old/parm_technology.h	97;"	d
GET_TRANSITION_COMMENT	generated/MI_example/Directory_Transitions.C	14;"	d	file:
GET_TRANSITION_COMMENT	generated/MI_example/L1Cache_Transitions.C	14;"	d	file:
GLOB	network/orion/SIM_parameter.h	43;"	d
GLOB	network/orion_old/SIM_power_test.h	66;"	d
GLOBAL	network/orion/SIM_link_model.h	40;"	d
GLOBALWRITEVECTOR_H	system/GlobalWriteVector.h	3;"	d
GLOBAL_H	common/Global.h	63;"	d
GLOBDEF	network/orion/SIM_parameter.h	42;"	d
GLOBDEF	network/orion_old/SIM_power_test.h	65;"	d
GPUSIM_DRAM_INTERFACE_H	system/GpusimDramInterface.h	2;"	d
GPUSIM_INTERFACE_H	interfaces/GpusimInterface.h	3;"	d
GPUSIM_RUBY_H	gpusim_ruby/gpusim_ruby.h	2;"	d
GRP_PERMU	network/orion/SIM_permu_model.h	/^	GRP_PERMU,$/;"	e	enum:__anon44
GarnetNetwork	network/garnet-flexible-pipeline/GarnetNetwork.C	/^GarnetNetwork::GarnetNetwork(int nodes)$/;"	f	class:GarnetNetwork
GarnetNetwork	network/garnet-flexible-pipeline/GarnetNetwork.h	/^class GarnetNetwork : public Network{$/;"	c
GarnetNetwork_d	network/garnet-fixed-pipeline/GarnetNetwork_d.C	/^GarnetNetwork_d::GarnetNetwork_d(int nodes)$/;"	f	class:GarnetNetwork_d
GarnetNetwork_d	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^class GarnetNetwork_d : public Network{$/;"	c
GenericBloomFilter	system/GenericBloomFilter.C	/^GenericBloomFilter::GenericBloomFilter(AbstractChip* chip_ptr, string config) $/;"	f	class:GenericBloomFilter
GenericBloomFilter	system/GenericBloomFilter.h	/^class GenericBloomFilter {$/;"	c
GenericMachineType	generated/MI_example/GenericMachineType.h	/^enum GenericMachineType {$/;"	g
GenericMachineType_Collector	generated/MI_example/GenericMachineType.h	/^  GenericMachineType_Collector,  \/**< Collector Mach *\/$/;"	e	enum:GenericMachineType
GenericMachineType_Directory	generated/MI_example/GenericMachineType.h	/^  GenericMachineType_Directory,  \/**< Directory Mach *\/$/;"	e	enum:GenericMachineType
GenericMachineType_FIRST	generated/MI_example/GenericMachineType.h	/^  GenericMachineType_FIRST,$/;"	e	enum:GenericMachineType
GenericMachineType_H	generated/MI_example/GenericMachineType.h	6;"	d
GenericMachineType_L1Cache	generated/MI_example/GenericMachineType.h	/^  GenericMachineType_L1Cache = GenericMachineType_FIRST,  \/**< L1 Cache Mach *\/$/;"	e	enum:GenericMachineType
GenericMachineType_L1Cache_wCC	generated/MI_example/GenericMachineType.h	/^  GenericMachineType_L1Cache_wCC,  \/**< L1 Cache Mach with Cache Coherence (used for miss latency profile) *\/$/;"	e	enum:GenericMachineType
GenericMachineType_L2Cache	generated/MI_example/GenericMachineType.h	/^  GenericMachineType_L2Cache,  \/**< L2 Cache Mach *\/$/;"	e	enum:GenericMachineType
GenericMachineType_L2Cache_wCC	generated/MI_example/GenericMachineType.h	/^  GenericMachineType_L2Cache_wCC,  \/**< L1 Cache Mach with Cache Coherence (used for miss latency profile) *\/$/;"	e	enum:GenericMachineType
GenericMachineType_L3Cache	generated/MI_example/GenericMachineType.h	/^  GenericMachineType_L3Cache,  \/**< L3 Cache Mach *\/$/;"	e	enum:GenericMachineType
GenericMachineType_NULL	generated/MI_example/GenericMachineType.h	/^  GenericMachineType_NULL,  \/**< null mach type *\/$/;"	e	enum:GenericMachineType
GenericMachineType_NUM	generated/MI_example/GenericMachineType.h	/^  GenericMachineType_NUM$/;"	e	enum:GenericMachineType
GenericMachineType_to_string	generated/MI_example/GenericMachineType.C	/^string GenericMachineType_to_string(const GenericMachineType& obj)$/;"	f
GenericRequestType	generated/MI_example/GenericRequestType.h	/^enum GenericRequestType {$/;"	g
GenericRequestType_ABORT_XACT	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_ABORT_XACT,  \/**< Abort Transaction *\/$/;"	e	enum:GenericRequestType
GenericRequestType_ATOMIC	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_ATOMIC,  \/**< Atomic Load\/Store *\/$/;"	e	enum:GenericRequestType
GenericRequestType_BEGIN_XACT	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_BEGIN_XACT,  \/**< Begin Transaction *\/$/;"	e	enum:GenericRequestType
GenericRequestType_COMMIT	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_COMMIT,  \/**< Commit version *\/$/;"	e	enum:GenericRequestType
GenericRequestType_COMMIT_XACT	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_COMMIT_XACT,  \/**< Commit Transaction *\/$/;"	e	enum:GenericRequestType
GenericRequestType_DOWNGRADE	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_DOWNGRADE,  \/**< downgrade request *\/$/;"	e	enum:GenericRequestType
GenericRequestType_EXE_ACK	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_EXE_ACK,  \/**< Execlusive ack *\/$/;"	e	enum:GenericRequestType
GenericRequestType_FIRST	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_FIRST,$/;"	e	enum:GenericRequestType
GenericRequestType_GETS	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_GETS = GenericRequestType_FIRST,  \/**< gets request *\/$/;"	e	enum:GenericRequestType
GenericRequestType_GETX	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_GETX,  \/**< getx request *\/$/;"	e	enum:GenericRequestType
GenericRequestType_GET_INSTR	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_GET_INSTR,  \/**< get instr request *\/$/;"	e	enum:GenericRequestType
GenericRequestType_H	generated/MI_example/GenericRequestType.h	6;"	d
GenericRequestType_IFETCH	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_IFETCH,  \/**< Instruction fetch *\/$/;"	e	enum:GenericRequestType
GenericRequestType_INV	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_INV,  \/**< invalidate request *\/$/;"	e	enum:GenericRequestType
GenericRequestType_INV_S	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_INV_S,  \/**< invalidate shared copy request *\/$/;"	e	enum:GenericRequestType
GenericRequestType_IO	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_IO,  \/**< I\/O *\/$/;"	e	enum:GenericRequestType
GenericRequestType_L2_PF	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_L2_PF,  \/**< L2 prefetch *\/$/;"	e	enum:GenericRequestType
GenericRequestType_LD	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_LD,  \/**< Load *\/$/;"	e	enum:GenericRequestType
GenericRequestType_LDX_XACT	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_LDX_XACT,  \/**< Transactional Load-Intend-Modify *\/$/;"	e	enum:GenericRequestType
GenericRequestType_LD_XACT	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_LD_XACT,  \/**< Transactional Load *\/$/;"	e	enum:GenericRequestType
GenericRequestType_NACK	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_NACK,  \/**< Nack *\/$/;"	e	enum:GenericRequestType
GenericRequestType_NULL	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_NULL,  \/**< null request type *\/$/;"	e	enum:GenericRequestType
GenericRequestType_NUM	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_NUM$/;"	e	enum:GenericRequestType
GenericRequestType_PUTO	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_PUTO,  \/**< puto request *\/$/;"	e	enum:GenericRequestType
GenericRequestType_PUTS	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_PUTS,  \/**< puts request *\/$/;"	e	enum:GenericRequestType
GenericRequestType_PUTX	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_PUTX,  \/**< putx request *\/$/;"	e	enum:GenericRequestType
GenericRequestType_REPLACEMENT	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_REPLACEMENT,  \/**< Replacement *\/$/;"	e	enum:GenericRequestType
GenericRequestType_ST	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_ST,  \/**< Store *\/$/;"	e	enum:GenericRequestType
GenericRequestType_ST_XACT	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_ST_XACT,  \/**< Transactional Store *\/$/;"	e	enum:GenericRequestType
GenericRequestType_UPGRADE	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_UPGRADE,  \/**< upgrade request *\/$/;"	e	enum:GenericRequestType
GenericRequestType_WB_ACK	generated/MI_example/GenericRequestType.h	/^  GenericRequestType_WB_ACK,  \/**< WriteBack ack *\/$/;"	e	enum:GenericRequestType
GenericRequestType_to_string	generated/MI_example/GenericRequestType.C	/^string GenericRequestType_to_string(const GenericRequestType& obj)$/;"	f
GetAreaInBuf	network/orion/NetworkPowerArea.h	/^	inline double GetAreaInBuf(){ return m_a_in_buf; }$/;"	f	class:RouterPowerArea_d
GetAreaSW	network/orion/NetworkPowerArea.h	/^	inline double GetAreaSW(){ return m_a_sw; }$/;"	f	class:RouterPowerArea_d
GetAreaTotal	network/orion/NetworkPowerArea.h	/^	inline double GetAreaTotal(){ return m_a_total; }$/;"	f	class:RouterPowerArea_d
GetAreaVC	network/orion/NetworkPowerArea.h	/^	inline double GetAreaVC(){ return m_a_vc; }$/;"	f	class:RouterPowerArea_d
GetAreaXbar	network/orion/NetworkPowerArea.h	/^	inline double GetAreaXbar(){ return m_a_xbar; }$/;"	f	class:RouterPowerArea_d
GetPowerDyn	network/orion/NetworkPowerArea.h	/^	inline double GetPowerDyn(){ return m_p_dyn_total; }$/;"	f	class:RouterPowerArea_d
GetPowerStatic	network/orion/NetworkPowerArea.h	/^	inline double GetPowerStatic(){ return m_p_static_total; }$/;"	f	class:RouterPowerArea_d
GetPowerTotal	network/orion/NetworkPowerArea.h	/^	inline double GetPowerTotal(){ return (m_p_dyn_total + m_p_static_total); }$/;"	f	class:RouterPowerArea_d
GetRouterPowerArea	network/garnet-fixed-pipeline/Router_d.h	/^	RouterPowerArea_d GetRouterPowerArea(){ return m_router_powerarea; }$/;"	f	class:Router_d
GlobalWriteVector	system/GlobalWriteVector.C	/^GlobalWriteVector::GlobalWriteVector(Chip* chip_ptr, int num_threads_per_proc)$/;"	f	class:GlobalWriteVector
GlobalWriteVector	system/GlobalWriteVector.h	/^class GlobalWriteVector {$/;"	c
GpusimDramInterface	system/GpusimDramInterface.C	/^GpusimDramInterface::GpusimDramInterface (AbstractChip* chip_ptr, int version) {$/;"	f	class:GpusimDramInterface
GpusimDramInterface	system/GpusimDramInterface.h	/^class GpusimDramInterface : public Consumer {$/;"	c
GpusimInterface	interfaces/GpusimInterface.C	/^GpusimInterface::GpusimInterface(System* sys_ptr)$/;"	f	class:GpusimInterface
GpusimInterface	interfaces/GpusimInterface.h	/^class GpusimInterface : public Driver {$/;"	c
H3	system/H3BloomFilter.h	/^static int H3[64][16] = {$/;"	v
H3BloomFilter	system/H3BloomFilter.C	/^H3BloomFilter::H3BloomFilter(string str)$/;"	f	class:H3BloomFilter
H3BloomFilter	system/H3BloomFilter.h	/^class H3BloomFilter : public AbstractBloomFilter {$/;"	c
H3_BLOOM_FILTER_H	system/H3BloomFilter.h	66;"	d
HALF_LOADING	network/orion_old/power_router_init.h	/^	HALF_LOADING,$/;"	e	enum:__anon88
HAMM_MASK	network/orion/SIM_parameter.h	63;"	d
HAMM_MASK	network/orion_old/SIM_power.h	76;"	d
HAMM_MASK	network/orion_old/parm_technology.h	402;"	d
HASH_FUN	generated/MI_example/Directory_Transitions.C	12;"	d	file:
HASH_FUN	generated/MI_example/L1Cache_Transitions.C	12;"	d	file:
HAVE_COL_DEC	network/orion/SIM_array_m.c	65;"	d	file:
HAVE_COL_DEC	network/orion_old/power_array.C	74;"	d	file:
HAVE_COL_MUX	network/orion/SIM_array_m.c	66;"	d	file:
HAVE_COL_MUX	network/orion_old/power_array.C	75;"	d	file:
HAVE_TAG	network/orion/SIM_array_m.c	63;"	d	file:
HAVE_TAG	network/orion_old/power_array.C	72;"	d	file:
HAVE_USE_BIT	network/orion/SIM_array_m.c	64;"	d	file:
HAVE_USE_BIT	network/orion_old/power_array.C	73;"	d	file:
HEAD_	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum flit_type {HEAD_, BODY_, TAIL_, HEAD_TAIL_, NUM_FLIT_TYPE_};$/;"	e	enum:flit_type
HEAD_TAIL_	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum flit_type {HEAD_, BODY_, TAIL_, HEAD_TAIL_, NUM_FLIT_TYPE_};$/;"	e	enum:flit_type
HIGH_RANGE	network/simple/Throttle.C	/^const int HIGH_RANGE = 256;$/;"	v
HISTOGRAM_H	common/Histogram.h	65;"	d
HOST_TYPE	depreceated/module/Makefile	/^HOST_TYPE = $(shell $(CALC_HOST))$/;"	m
HTML_DIR	Makefile	/^HTML_DIR := html\/$(PROTOCOL)$/;"	m
HVT	network/orion/SIM_parameter.h	81;"	d
H_tree_clock	network/orion/SIM_router.h	/^	int H_tree_clock;$/;"	m	struct:__anon48
HighPrio	common/Debug.h	/^enum PriorityLevel {HighPrio, MedPrio, LowPrio};$/;"	e	enum:PriorityLevel
High_Verb	common/Debug.h	/^enum VerbosityLevel {No_Verb, Low_Verb, Med_Verb, High_Verb};$/;"	e	enum:VerbosityLevel
Histogram	common/Histogram.C	/^Histogram::Histogram(int binsize, int bins)$/;"	f	class:Histogram
Histogram	common/Histogram.h	/^class Histogram {$/;"	c
Hit	simics/depreceated/SimicsDriver.h	/^  Hit           = 0, \/* request hit *\/$/;"	e	enum:__anon91
IDENT_ENC	network/orion/SIM_misc_model.h	/^	IDENT_ENC = 1,	\/* identity encoding *\/$/;"	e	enum:__anon39
IDENT_ENC	network/orion_old/power_bus.h	/^	IDENT_ENC = 1,	\/* identity encoding *\/$/;"	e	enum:__anon82
IDLECOUNT_MAX_VALUE	system/MemoryControl.C	167;"	d	file:
IDLE_	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum VC_state_type {IDLE_, VC_AB_, ACTIVE_, NUM_VC_STATE_TYPE_};$/;"	e	enum:VC_state_type
IDToInt	slicc_interface/RubySlicc_Util.h	/^extern inline int IDToInt(NodeID id)$/;"	f
INCLUDE	generated/MI_example/attrlex.c	616;"	d	file:
INCLUDES	Makefile	/^  INCLUDES  = -I$(SIMICS_INCLUDE_ROOT)$/;"	m
INCLUDES	Makefile	/^  INCLUDES  = -I$(SIMICS_ROOT)\/$(HOST_TYPE)\/obj\/include\/$/;"	m
INCLUDE_FILENAME	depreceated/module/Makefile	/^  INCLUDE_FILENAME := $(MODULE_MAKEFILE)$/;"	m
INCLUDE_FILENAME	depreceated/module/Makefile	/^  INCLUDE_FILENAME := $(SIMICS_BASE)\/src\/devices\/common\/device-makefile$/;"	m
INCLUDE_FILENAME	depreceated/module/Makefile	/^  INCLUDE_FILENAME := stopcompile$/;"	m
INFINITE_	network/garnet-fixed-pipeline/NetworkHeader.h	76;"	d
INFINITE_LATENCY	network/simple/Topology.C	/^static const int INFINITE_LATENCY = 10000; \/\/ Yes, this is a big hack$/;"	v	file:
INITIAL	generated/MI_example/attrlex.c	614;"	d	file:
INIT_H	init.h	67;"	d
INPUT_UNIT_D_H	network/garnet-fixed-pipeline/InputUnit_d.h	62;"	d
INSET_H	common/IntSet.h	2;"	d
INSTRUCTION_H	tester/Instruction.h	27;"	d
INT16_MAX	generated/MI_example/attrlex.c	91;"	d	file:
INT16_MIN	generated/MI_example/attrlex.c	82;"	d	file:
INT32_MAX	generated/MI_example/attrlex.c	94;"	d	file:
INT32_MIN	generated/MI_example/attrlex.c	85;"	d	file:
INT8_MAX	generated/MI_example/attrlex.c	88;"	d	file:
INT8_MIN	generated/MI_example/attrlex.c	79;"	d	file:
INTEGER	generated/MI_example/attrparse.c	/^     INTEGER = 259,$/;"	e	enum:yytokentype	file:
INTEGER	generated/MI_example/attrparse.h	/^     INTEGER = 259,$/;"	e	enum:yytokentype
INTERFACE_H	simics/depreceated/interface.h	65;"	d
INTERMEDIATE	network/orion/SIM_link_model.h	39;"	d
INTPAIRSET_H	common/IntPairSet.h	2;"	d
INTPAIR_H	common/IntPair.h	2;"	d
IN_VC_STATE_H	network/garnet-flexible-pipeline/InVcState.h	64;"	d
IS_DEV_MEM_OP	simics/depreceated/SimicsDriver.C	86;"	d	file:
IS_DIRECT_MAP	network/orion/SIM_array_m.c	57;"	d	file:
IS_DIRECT_MAP	network/orion_old/power_array.C	66;"	d	file:
IS_FULLY_ASSOC	network/orion/SIM_array_m.c	58;"	d	file:
IS_FULLY_ASSOC	network/orion_old/power_array.C	67;"	d	file:
IS_OTH_MEM_OP	simics/depreceated/SimicsDriver.C	87;"	d	file:
IS_WRITE_BACK	network/orion/SIM_array_m.c	60;"	d	file:
IS_WRITE_BACK	network/orion_old/power_array.C	69;"	d	file:
IS_WRITE_THROUGH	network/orion/SIM_array_m.c	59;"	d	file:
IS_WRITE_THROUGH	network/orion_old/power_array.C	68;"	d	file:
I_	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum flit_stage {I_, VA_, SA_, ST_, LT_, NUM_FLIT_STAGE_};$/;"	e	enum:flit_stage
I_ADD	network/orion/SIM_technology_v1.h	300;"	d
I_ADD	network/orion_old/SIM_power.h	362;"	d
I_ADD	network/orion_old/parm_technology.h	480;"	d
I_ADD32	network/orion/SIM_technology_v1.h	301;"	d
I_ADD32	network/orion_old/SIM_power.h	363;"	d
I_ADD32	network/orion_old/parm_technology.h	481;"	d
I_ADD_CLOCK	network/orion/SIM_technology_v1.h	308;"	d
I_ADD_CLOCK	network/orion_old/SIM_power.h	370;"	d
I_ADD_CLOCK	network/orion_old/parm_technology.h	488;"	d
I_LOGIC	network/orion/SIM_technology_v1.h	304;"	d
I_LOGIC	network/orion_old/SIM_power.h	366;"	d
I_LOGIC	network/orion_old/parm_technology.h	484;"	d
I_LOGIC_CLOCK	network/orion/SIM_technology_v1.h	311;"	d
I_LOGIC_CLOCK	network/orion_old/SIM_power.h	373;"	d
I_LOGIC_CLOCK	network/orion_old/parm_technology.h	491;"	d
I_MULT16	network/orion/SIM_technology_v1.h	302;"	d
I_MULT16	network/orion_old/SIM_power.h	364;"	d
I_MULT16	network/orion_old/parm_technology.h	482;"	d
I_MULT_CLOCK	network/orion/SIM_technology_v1.h	309;"	d
I_MULT_CLOCK	network/orion_old/SIM_power.h	371;"	d
I_MULT_CLOCK	network/orion_old/parm_technology.h	489;"	d
I_Replay	simics/depreceated/SimicsDriver.h	/^  I_Replay,          \/* Replay of I-Fetch *\/$/;"	e	enum:__anon91
I_SHIFT	network/orion/SIM_technology_v1.h	303;"	d
I_SHIFT	network/orion_old/SIM_power.h	365;"	d
I_SHIFT	network/orion_old/parm_technology.h	483;"	d
I_SHIFT_CLOCK	network/orion/SIM_technology_v1.h	310;"	d
I_SHIFT_CLOCK	network/orion_old/SIM_power.h	372;"	d
I_SHIFT_CLOCK	network/orion_old/parm_technology.h	490;"	d
I_buf_static	network/orion/SIM_router.h	/^	double I_buf_static;$/;"	m	struct:__anon47
I_clock_static	network/orion/SIM_router.h	/^	double I_clock_static;$/;"	m	struct:__anon47
I_crossbar_static	network/orion/SIM_router.h	/^	double I_crossbar_static;$/;"	m	struct:__anon47
I_static	network/orion/SIM_arbiter.h	/^	double I_static;$/;"	m	struct:__anon7
I_static	network/orion/SIM_array.h	/^	double I_static;$/;"	m	struct:__anon8
I_static	network/orion/SIM_array_internal.h	/^	double I_static;$/;"	m	struct:__anon15
I_static	network/orion/SIM_array_internal.h	/^	double I_static;$/;"	m	struct:__anon16
I_static	network/orion/SIM_array_internal.h	/^	double I_static;$/;"	m	struct:__anon19
I_static	network/orion/SIM_array_internal.h	/^	double I_static;$/;"	m	struct:__anon22
I_static	network/orion/SIM_crossbar.h	/^	double I_static;$/;"	m	struct:__anon32
I_static	network/orion/SIM_misc.h	/^	double I_static;$/;"	m	struct:__anon35
I_static	network/orion/SIM_router.h	/^	double I_static;$/;"	m	struct:__anon47
I_sw_arbiter_static	network/orion/SIM_router.h	/^	double I_sw_arbiter_static;$/;"	m	struct:__anon47
I_vc_arbiter_static	network/orion/SIM_router.h	/^	double I_vc_arbiter_static;$/;"	m	struct:__anon47
InVcState	network/garnet-flexible-pipeline/InVcState.C	/^InVcState::InVcState(int id)$/;"	f	class:InVcState
InVcState	network/garnet-flexible-pipeline/InVcState.h	/^class InVcState {$/;"	c
Index	common/Global.h	/^typedef int64 Index;            \/\/ what the address bit ripper returns$/;"	t
InputUnit_d	network/garnet-fixed-pipeline/InputUnit_d.C	/^InputUnit_d::InputUnit_d(int id, Router_d *router)$/;"	f	class:InputUnit_d
InputUnit_d	network/garnet-fixed-pipeline/InputUnit_d.h	/^class InputUnit_d : public Consumer {$/;"	c
Instruction	tester/Instruction.C	/^Instruction::Instruction(){$/;"	f	class:Instruction
Instruction	tester/Instruction.C	/^Instruction::Instruction(Opcode op, Address addr){$/;"	f	class:Instruction
Instruction	tester/Instruction.h	/^class Instruction {$/;"	c
IntPair	common/IntPair.h	/^typedef std::pair<int,int> IntPair;$/;"	t
IntPairSet	common/IntPairSet.h	/^typedef std::set<IntPair> IntPairSet;$/;"	t
IntSet	common/IntSet.h	/^typedef std::set<int> IntSet;$/;"	t
IntToMessageSizeType	slicc_interface/RubySlicc_Util.h	/^extern inline MessageSizeType IntToMessageSizeType(int size)$/;"	f
Invalid	simics/depreceated/SimicsProcessor.h	/^    Invalid,$/;"	e	enum:SimicsProcessor::CacheRequestStatus
L1CacheBits	config/RubyConfig.h	/^  static int L1CacheBits() { return g_NUM_PROCESSORS_BITS; }$/;"	f	class:RubyConfig
L1CacheMachIDToProcessorNum	slicc_interface/RubySlicc_ComponentMapping.h	/^extern inline NodeID L1CacheMachIDToProcessorNum(MachineID machID)$/;"	f
L1CacheNumToL2Base	config/RubyConfig.C	/^int RubyConfig::L1CacheNumToL2Base(NodeID L1CacheNum)$/;"	f	class:RubyConfig
L1CachePerChipBits	config/RubyConfig.h	/^  static int L1CachePerChipBits() { return procsPerChipBits() ; } \/\/ L1s != processors not currently supported$/;"	f	class:RubyConfig
L1CacheTransitionsPerCycle	config/RubyConfig.h	/^  static int L1CacheTransitionsPerCycle() { return L1CACHE_TRANSITIONS_PER_RUBY_CYCLE; }$/;"	f	class:RubyConfig
L1Cache_CONTROLLER_H	generated/MI_example/L1Cache_Controller.h	8;"	d
L1Cache_Controller	generated/MI_example/L1Cache_Controller.C	/^L1Cache_Controller::L1Cache_Controller(Chip* chip_ptr, int version)$/;"	f	class:L1Cache_Controller
L1Cache_Controller	generated/MI_example/L1Cache_Controller.h	/^class L1Cache_Controller : public Consumer {$/;"	c
L1Cache_Entry	generated/MI_example/L1Cache_Entry.h	/^  L1Cache_Entry() $/;"	f	class:L1Cache_Entry
L1Cache_Entry	generated/MI_example/L1Cache_Entry.h	/^  L1Cache_Entry(const L1Cache_State& local_CacheState, const bool& local_Dirty, const DataBlock& local_DataBlk)$/;"	f	class:L1Cache_Entry
L1Cache_Entry	generated/MI_example/L1Cache_Entry.h	/^class L1Cache_Entry :  public AbstractCacheEntry {$/;"	c
L1Cache_Entry_H	generated/MI_example/L1Cache_Entry.h	7;"	d
L1Cache_Event	generated/MI_example/L1Cache_Event.h	/^enum L1Cache_Event {$/;"	g
L1Cache_Event_Data	generated/MI_example/L1Cache_Event.h	/^  L1Cache_Event_Data,  \/**< Data from network *\/$/;"	e	enum:L1Cache_Event
L1Cache_Event_FIRST	generated/MI_example/L1Cache_Event.h	/^  L1Cache_Event_FIRST,$/;"	e	enum:L1Cache_Event
L1Cache_Event_Fwd_GETX	generated/MI_example/L1Cache_Event.h	/^  L1Cache_Event_Fwd_GETX,  \/**< Forward from network *\/$/;"	e	enum:L1Cache_Event
L1Cache_Event_H	generated/MI_example/L1Cache_Event.h	6;"	d
L1Cache_Event_Ifetch	generated/MI_example/L1Cache_Event.h	/^  L1Cache_Event_Ifetch,  \/**< Ifetch request from processor *\/$/;"	e	enum:L1Cache_Event
L1Cache_Event_Load	generated/MI_example/L1Cache_Event.h	/^  L1Cache_Event_Load = L1Cache_Event_FIRST,  \/**< Load request from processor *\/$/;"	e	enum:L1Cache_Event
L1Cache_Event_NUM	generated/MI_example/L1Cache_Event.h	/^  L1Cache_Event_NUM$/;"	e	enum:L1Cache_Event
L1Cache_Event_Replacement	generated/MI_example/L1Cache_Event.h	/^  L1Cache_Event_Replacement,  \/**< Replace a block *\/$/;"	e	enum:L1Cache_Event
L1Cache_Event_Store	generated/MI_example/L1Cache_Event.h	/^  L1Cache_Event_Store,  \/**< Store request from processor *\/$/;"	e	enum:L1Cache_Event
L1Cache_Event_Writeback_Ack	generated/MI_example/L1Cache_Event.h	/^  L1Cache_Event_Writeback_Ack,  \/**< Ack from the directory for a writeback *\/$/;"	e	enum:L1Cache_Event
L1Cache_Event_Writeback_Nack	generated/MI_example/L1Cache_Event.h	/^  L1Cache_Event_Writeback_Nack,  \/**< Nack from the directory for a writeback *\/$/;"	e	enum:L1Cache_Event
L1Cache_Event_to_string	generated/MI_example/L1Cache_Event.C	/^string L1Cache_Event_to_string(const L1Cache_Event& obj)$/;"	f
L1Cache_PROFILER_H	generated/MI_example/L1Cache_Profiler.h	5;"	d
L1Cache_Profiler	generated/MI_example/L1Cache_Profiler.C	/^L1Cache_Profiler::L1Cache_Profiler()$/;"	f	class:L1Cache_Profiler
L1Cache_Profiler	generated/MI_example/L1Cache_Profiler.h	/^class L1Cache_Profiler {$/;"	c
L1Cache_State	generated/MI_example/L1Cache_State.h	/^enum L1Cache_State {$/;"	g
L1Cache_State_FIRST	generated/MI_example/L1Cache_State.h	/^  L1Cache_State_FIRST,$/;"	e	enum:L1Cache_State
L1Cache_State_H	generated/MI_example/L1Cache_State.h	6;"	d
L1Cache_State_I	generated/MI_example/L1Cache_State.h	/^  L1Cache_State_I = L1Cache_State_FIRST,  \/**< Not Present\/Invalid *\/$/;"	e	enum:L1Cache_State
L1Cache_State_II	generated/MI_example/L1Cache_State.h	/^  L1Cache_State_II,  \/**< Not Present\/Invalid, issued PUT *\/$/;"	e	enum:L1Cache_State
L1Cache_State_IM	generated/MI_example/L1Cache_State.h	/^  L1Cache_State_IM,  \/**< Issued request for STORE\/ATOMIC *\/$/;"	e	enum:L1Cache_State
L1Cache_State_IS	generated/MI_example/L1Cache_State.h	/^  L1Cache_State_IS,  \/**< Issued request for IFETCH\/GETX *\/$/;"	e	enum:L1Cache_State
L1Cache_State_M	generated/MI_example/L1Cache_State.h	/^  L1Cache_State_M,  \/**< Modified *\/$/;"	e	enum:L1Cache_State
L1Cache_State_MI	generated/MI_example/L1Cache_State.h	/^  L1Cache_State_MI,  \/**< Modified, issued PUT *\/$/;"	e	enum:L1Cache_State
L1Cache_State_NUM	generated/MI_example/L1Cache_State.h	/^  L1Cache_State_NUM$/;"	e	enum:L1Cache_State
L1Cache_State_to_string	generated/MI_example/L1Cache_State.C	/^string L1Cache_State_to_string(const L1Cache_State& obj)$/;"	f
L1Cache_TBE	generated/MI_example/L1Cache_TBE.h	/^  L1Cache_TBE() $/;"	f	class:L1Cache_TBE
L1Cache_TBE	generated/MI_example/L1Cache_TBE.h	/^  L1Cache_TBE(const L1Cache_State& local_TBEState, const DataBlock& local_DataBlk, const bool& local_Trans, const bool& local_Logged)$/;"	f	class:L1Cache_TBE
L1Cache_TBE	generated/MI_example/L1Cache_TBE.h	/^class L1Cache_TBE {$/;"	c
L1Cache_TBE_H	generated/MI_example/L1Cache_TBE.h	7;"	d
L1Cache_getState	generated/MI_example/L1Cache_getState.C	/^L1Cache_State L1Cache_Controller::L1Cache_getState(Address param_addr)$/;"	f	class:L1Cache_Controller
L1Cache_mandatory_request_type_to_event	generated/MI_example/L1Cache_mandatory_request_type_to_event.C	/^L1Cache_Event L1Cache_Controller::L1Cache_mandatory_request_type_to_event(CacheRequestType param_type)$/;"	f	class:L1Cache_Controller
L1Cache_setState	generated/MI_example/L1Cache_setState.C	/^void L1Cache_Controller::L1Cache_setState(Address param_addr, L1Cache_State param_state)$/;"	f	class:L1Cache_Controller
L1Cache_transitionComment	generated/MI_example/L1Cache_Controller.C	/^stringstream L1Cache_transitionComment;$/;"	v
L1D_CACHE_MEMBER_VARIABLE	common/Global.h	68;"	d
L1D_CACHE_MEMBER_VARIABLE	common/Global.h	75;"	d
L1D_CACHE_MEMBER_VARIABLE	common/Global.h	80;"	d
L1I_CACHE_MEMBER_VARIABLE	common/Global.h	67;"	d
L1I_CACHE_MEMBER_VARIABLE	common/Global.h	74;"	d
L1I_CACHE_MEMBER_VARIABLE	common/Global.h	79;"	d
L1tbeUsageSample	profiler/Profiler.h	/^  void L1tbeUsageSample(int num) { m_L1tbeProfile.add(num); }$/;"	f	class:Profiler
L2CacheBits	config/RubyConfig.h	/^  static int L2CacheBits() { return g_NUM_L2_BANKS_BITS; }$/;"	f	class:RubyConfig
L2CacheMachIDToChipID	slicc_interface/RubySlicc_ComponentMapping.h	/^extern inline NodeID L2CacheMachIDToChipID(MachineID machID)$/;"	f
L2CachePerChipBits	config/RubyConfig.h	/^  static int L2CachePerChipBits() { return g_NUM_L2_BANKS_PER_CHIP_BITS; }$/;"	f	class:RubyConfig
L2CacheTransitionsPerCycle	config/RubyConfig.h	/^  static int L2CacheTransitionsPerCycle() { return L2CACHE_TRANSITIONS_PER_RUBY_CYCLE; }$/;"	f	class:RubyConfig
L2_CACHE_MEMBER_VARIABLE	common/Global.h	69;"	d
L2_CACHE_MEMBER_VARIABLE	common/Global.h	76;"	d
L2_CACHE_MEMBER_VARIABLE	common/Global.h	82;"	d
L2_CACHE_VARIABLE	common/Global.h	70;"	d
L2_CACHE_VARIABLE	common/Global.h	77;"	d
L2_CACHE_VARIABLE	common/Global.h	83;"	d
L2tbeUsageSample	profiler/Profiler.h	/^  void L2tbeUsageSample(int num) { m_L2tbeProfile.add(num); }$/;"	f	class:Profiler
LAST	simics/depreceated/SimicsDriver.h	/^  LAST,              \/* UNUSED.  FOR TYPE-CHECKING *\/$/;"	e	enum:__anon91
LDFLAGS_DYN	depreceated/module/Makefile	/^LDFLAGS_DYN = $/;"	m
LIB_Type_max_int	network/orion/SIM_parameter.h	49;"	d
LIB_Type_max_int	network/orion_old/SIM_power_test.h	62;"	d
LIB_Type_max_uint	network/orion/SIM_parameter.h	48;"	d
LIB_Type_max_uint	network/orion_old/SIM_power_test.h	61;"	d
LIFETIMETRACE_H	profiler/LifetimeTrace.h	2;"	d
LINK_MODEL	network/orion/Makefile	/^LINK_MODEL   = SIM_link.c$/;"	m
LOCAL	network/orion/SIM_link_model.h	38;"	d
LPAREN	generated/MI_example/attrparse.c	/^     LPAREN = 261,$/;"	e	enum:yytokentype	file:
LPAREN	generated/MI_example/attrparse.h	/^     LPAREN = 261,$/;"	e	enum:yytokentype
LRUPOLICY_H	system/LRUPolicy.h	3;"	d
LRUPolicy	system/LRUPolicy.h	/^LRUPolicy::LRUPolicy(Index num_sets, Index assoc)$/;"	f	class:LRUPolicy
LRUPolicy	system/LRUPolicy.h	/^class LRUPolicy : public AbstractReplacementPolicy {$/;"	c
LSB_COUNTING_BLOOM_FILTER_H	system/LSB_CountingBloomFilter.h	66;"	d
LSB_CountingBloomFilter	system/LSB_CountingBloomFilter.C	/^LSB_CountingBloomFilter::LSB_CountingBloomFilter(string str) $/;"	f	class:LSB_CountingBloomFilter
LSB_CountingBloomFilter	system/LSB_CountingBloomFilter.h	/^class LSB_CountingBloomFilter : public AbstractBloomFilter {$/;"	c
LSCALE	network/orion/SIM_technology_v1.h	109;"	d
LSCALE	network/orion/SIM_technology_v1.h	49;"	d
LSCALE	network/orion/SIM_technology_v1.h	61;"	d
LSCALE	network/orion/SIM_technology_v1.h	73;"	d
LSCALE	network/orion/SIM_technology_v1.h	85;"	d
LSCALE	network/orion/SIM_technology_v1.h	97;"	d
LSCALE	network/orion/SIM_technology_v2.h	111;"	d
LSCALE	network/orion/SIM_technology_v2.h	441;"	d
LSCALE	network/orion_old/SIM_power.h	106;"	d
LSCALE	network/orion_old/SIM_power.h	118;"	d
LSCALE	network/orion_old/SIM_power.h	130;"	d
LSCALE	network/orion_old/SIM_power.h	142;"	d
LSCALE	network/orion_old/SIM_power.h	154;"	d
LSCALE	network/orion_old/SIM_power.h	166;"	d
LSCALE	network/orion_old/SIM_power.h	92;"	d
LSCALE	network/orion_old/parm_technology.h	102;"	d
LSCALE	network/orion_old/parm_technology.h	114;"	d
LSCALE	network/orion_old/parm_technology.h	126;"	d
LSCALE	network/orion_old/parm_technology.h	138;"	d
LSCALE	network/orion_old/parm_technology.h	150;"	d
LSCALE	network/orion_old/parm_technology.h	162;"	d
LSCALE	network/orion_old/parm_technology.h	88;"	d
LT_	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum flit_stage {I_, VA_, SA_, ST_, LT_, NUM_FLIT_STAGE_};$/;"	e	enum:flit_stage
LVT	network/orion/SIM_parameter.h	79;"	d
Lamda	network/orion/SIM_technology_v1.h	157;"	d
Lamda	network/orion/SIM_technology_v2.h	157;"	d
Lamda	network/orion/SIM_technology_v2.h	489;"	d
Lamda	network/orion_old/SIM_power.h	210;"	d
Lamda	network/orion_old/parm_technology.h	206;"	d
Leff	network/orion/SIM_technology_v1.h	155;"	d
Leff	network/orion/SIM_technology_v2.h	155;"	d
Leff	network/orion/SIM_technology_v2.h	487;"	d
Leff	network/orion_old/SIM_power.h	208;"	d
Leff	network/orion_old/parm_technology.h	204;"	d
LifetimeAccess	profiler/LifetimeTrace.h	/^    LifetimeAccess()$/;"	f	struct:LifetimeAccess
LifetimeAccess	profiler/LifetimeTrace.h	/^    LifetimeAccess(Time access_time, int core_id, int pc, physical_address_t address)$/;"	f	struct:LifetimeAccess
LifetimeAccess	profiler/LifetimeTrace.h	/^    LifetimeAccess(Time access_time, int core_id, int pc, physical_address_t address, Time lifetime, LifetimeEndReason_t reason)$/;"	f	struct:LifetimeAccess
LifetimeAccess	profiler/LifetimeTrace.h	/^struct LifetimeAccess {$/;"	s
LifetimeEndReason_ATOMIC	profiler/LifetimeTrace.h	/^    LifetimeEndReason_ATOMIC,$/;"	e	enum:LifetimeEndReason_t
LifetimeEndReason_EXPIRE	profiler/LifetimeTrace.h	/^    LifetimeEndReason_EXPIRE   \/\/ for TC protocol$/;"	e	enum:LifetimeEndReason_t
LifetimeEndReason_L2EVICT	profiler/LifetimeTrace.h	/^    LifetimeEndReason_L2EVICT,$/;"	e	enum:LifetimeEndReason_t
LifetimeEndReason_NONE	profiler/LifetimeTrace.h	/^    LifetimeEndReason_NONE = 0,$/;"	e	enum:LifetimeEndReason_t
LifetimeEndReason_PROGRAMEND	profiler/LifetimeTrace.h	/^    LifetimeEndReason_PROGRAMEND,$/;"	e	enum:LifetimeEndReason_t
LifetimeEndReason_WRITE	profiler/LifetimeTrace.h	/^    LifetimeEndReason_WRITE,$/;"	e	enum:LifetimeEndReason_t
LifetimeEndReason_t	profiler/LifetimeTrace.h	/^enum LifetimeEndReason_t {$/;"	g
LifetimeTrace	profiler/LifetimeTrace.C	/^LifetimeTrace::LifetimeTrace() {$/;"	f	class:LifetimeTrace
LifetimeTrace	profiler/LifetimeTrace.h	/^class LifetimeTrace : public Consumer {$/;"	c
LinkArea	network/orion/SIM_link.c	/^double LinkArea(double Length, unsigned NumBits) $/;"	f
LinkDynamicEnergyPerBitPerMeter	network/orion/SIM_link.c	/^double LinkDynamicEnergyPerBitPerMeter(double Length, double vdd) $/;"	f
LinkID	common/Global.h	/^typedef int LinkID;$/;"	t
LinkLeakagePowerPerMeter	network/orion/SIM_link.c	/^double LinkLeakagePowerPerMeter(double Length, double vdd) $/;"	f
LinkOrder	network/simple/PerfectSwitch.h	/^class LinkOrder {$/;"	c
LinkType	generated/MI_example/LinkType.h	/^enum LinkType {$/;"	g
LinkType_FIRST	generated/MI_example/LinkType.h	/^  LinkType_FIRST,$/;"	e	enum:LinkType
LinkType_H	generated/MI_example/LinkType.h	6;"	d
LinkType_NO_ENERGY	generated/MI_example/LinkType.h	/^  LinkType_NO_ENERGY,  \/**<  *\/$/;"	e	enum:LinkType
LinkType_NULL	generated/MI_example/LinkType.h	/^  LinkType_NULL,  \/**<  *\/$/;"	e	enum:LinkType
LinkType_NUM	generated/MI_example/LinkType.h	/^  LinkType_NUM$/;"	e	enum:LinkType
LinkType_RC_1500UM	generated/MI_example/LinkType.h	/^  LinkType_RC_1500UM = LinkType_FIRST,  \/**<  *\/$/;"	e	enum:LinkType
LinkType_RC_2500UM	generated/MI_example/LinkType.h	/^  LinkType_RC_2500UM,  \/**<  *\/$/;"	e	enum:LinkType
LinkType_TL_11000UM	generated/MI_example/LinkType.h	/^  LinkType_TL_11000UM,  \/**<  *\/$/;"	e	enum:LinkType
LinkType_TL_13000UM	generated/MI_example/LinkType.h	/^  LinkType_TL_13000UM,  \/**<  *\/$/;"	e	enum:LinkType
LinkType_TL_9000UM	generated/MI_example/LinkType.h	/^  LinkType_TL_9000UM,  \/**<  *\/$/;"	e	enum:LinkType
LinkType_to_string	generated/MI_example/LinkType.C	/^string LinkType_to_string(const LinkType& obj)$/;"	f
LockStatus	generated/MI_example/LockStatus.h	/^enum LockStatus {$/;"	g
LockStatus_FIRST	generated/MI_example/LockStatus.h	/^  LockStatus_FIRST,$/;"	e	enum:LockStatus
LockStatus_H	generated/MI_example/LockStatus.h	6;"	d
LockStatus_Locked	generated/MI_example/LockStatus.h	/^  LockStatus_Locked,  \/**< Lock is held *\/$/;"	e	enum:LockStatus
LockStatus_NUM	generated/MI_example/LockStatus.h	/^  LockStatus_NUM$/;"	e	enum:LockStatus
LockStatus_Unlocked	generated/MI_example/LockStatus.h	/^  LockStatus_Unlocked = LockStatus_FIRST,  \/**< Lock is not held *\/$/;"	e	enum:LockStatus
LockStatus_to_string	generated/MI_example/LockStatus.C	/^string LockStatus_to_string(const LockStatus& obj)$/;"	f
LogicalTime	common/Global.h	/^typedef Time LogicalTime;$/;"	t
LowPrio	common/Debug.h	/^enum PriorityLevel {HighPrio, MedPrio, LowPrio};$/;"	e	enum:PriorityLevel
Low_Verb	common/Debug.h	/^enum VerbosityLevel {No_Verb, Low_Verb, Med_Verb, High_Verb};$/;"	e	enum:VerbosityLevel
MACHINEID_H	system/MachineID.h	67;"	d
MACHINETYPE_COLLECTOR_ENUM	slicc_interface/RubySlicc_ComponentMapping.h	100;"	d
MACHINETYPE_COLLECTOR_ENUM	slicc_interface/RubySlicc_ComponentMapping.h	98;"	d
MACHINETYPE_Directory	generated/MI_example/MachineType.h	29;"	d
MACHINETYPE_L1CACHE_ENUM	slicc_interface/RubySlicc_ComponentMapping.h	74;"	d
MACHINETYPE_L1CACHE_ENUM	slicc_interface/RubySlicc_ComponentMapping.h	76;"	d
MACHINETYPE_L1Cache	generated/MI_example/MachineType.h	28;"	d
MACHINETYPE_L2CACHE_ENUM	slicc_interface/RubySlicc_ComponentMapping.h	80;"	d
MACHINETYPE_L2CACHE_ENUM	slicc_interface/RubySlicc_ComponentMapping.h	82;"	d
MACHINETYPE_L3CACHE_ENUM	slicc_interface/RubySlicc_ComponentMapping.h	86;"	d
MACHINETYPE_L3CACHE_ENUM	slicc_interface/RubySlicc_ComponentMapping.h	88;"	d
MACHINETYPE_PERSISTENTARBITER_ENUM	slicc_interface/RubySlicc_ComponentMapping.h	92;"	d
MACHINETYPE_PERSISTENTARBITER_ENUM	slicc_interface/RubySlicc_ComponentMapping.h	94;"	d
MAIN_H	tester/main.h	65;"	d
MATRIX_ARBITER	network/orion/SIM_router_model.h	/^	MATRIX_ARBITER,$/;"	e	enum:__anon52
MATRIX_ARBITER	network/orion_old/power_arbiter.h	/^	MATRIX_ARBITER,$/;"	e	enum:__anon55
MATRIX_CROSSBAR	network/orion/SIM_router_model.h	/^	MATRIX_CROSSBAR = 1,$/;"	e	enum:__anon51
MATRIX_CROSSBAR	network/orion_old/power_crossbar.h	/^	MATRIX_CROSSBAR =1,$/;"	e	enum:__anon86
MAX	network/orion/SIM_parameter.h	52;"	d
MAX	network/orion_old/SIM_power.h	65;"	d
MAX	network/orion_old/parm_technology.h	391;"	d
MAX_ADDRESS	tester/depreceated/XactAbortRequestGenerator.h	43;"	d
MAX_ADDRESS	tester/depreceated/XactRequestGenerator.h	42;"	d
MAX_ADDRESS_SPACE_ID	simics/depreceated/SimicsDriver.h	/^static const int MAX_ADDRESS_SPACE_ID = (1<<8);$/;"	v
MAX_ENERGY	network/orion/SIM_parameter.h	73;"	d
MAX_ENERGY	network/orion_old/SIM_power.h	62;"	d
MAX_ENERGY	network/orion_old/parm_technology.h	387;"	d
MAX_ENTRIES	system/StoreBuffer.C	/^const int MAX_ENTRIES = 128;$/;"	v
MAX_INCLUDE_DEPTH	generated/MI_example/attrlex.c	595;"	d	file:
MAX_LOADING	network/orion_old/power_router_init.h	/^	MAX_LOADING$/;"	e	enum:__anon88
MAX_RUBY_BLOCK_SIZE	common/Global.h	/^const unsigned MAX_RUBY_BLOCK_SIZE = 128;$/;"	v
MAX_SEL_LEVEL	network/orion/SIM_misc.h	40;"	d
MCSCALE	network/orion/SIM_technology_v1.h	102;"	d
MCSCALE	network/orion/SIM_technology_v1.h	114;"	d
MCSCALE	network/orion/SIM_technology_v1.h	54;"	d
MCSCALE	network/orion/SIM_technology_v1.h	66;"	d
MCSCALE	network/orion/SIM_technology_v1.h	78;"	d
MCSCALE	network/orion/SIM_technology_v1.h	90;"	d
MCSCALE	network/orion_old/SIM_power.h	111;"	d
MCSCALE	network/orion_old/SIM_power.h	123;"	d
MCSCALE	network/orion_old/SIM_power.h	135;"	d
MCSCALE	network/orion_old/SIM_power.h	147;"	d
MCSCALE	network/orion_old/SIM_power.h	159;"	d
MCSCALE	network/orion_old/SIM_power.h	171;"	d
MCSCALE	network/orion_old/SIM_power.h	98;"	d
MCSCALE	network/orion_old/parm_technology.h	107;"	d
MCSCALE	network/orion_old/parm_technology.h	119;"	d
MCSCALE	network/orion_old/parm_technology.h	131;"	d
MCSCALE	network/orion_old/parm_technology.h	143;"	d
MCSCALE	network/orion_old/parm_technology.h	155;"	d
MCSCALE	network/orion_old/parm_technology.h	167;"	d
MCSCALE	network/orion_old/parm_technology.h	94;"	d
MCSCALE2	network/orion/SIM_technology_v1.h	103;"	d
MCSCALE2	network/orion/SIM_technology_v1.h	115;"	d
MCSCALE2	network/orion/SIM_technology_v1.h	55;"	d
MCSCALE2	network/orion/SIM_technology_v1.h	67;"	d
MCSCALE2	network/orion/SIM_technology_v1.h	79;"	d
MCSCALE2	network/orion/SIM_technology_v1.h	91;"	d
MCSCALE2	network/orion_old/SIM_power.h	112;"	d
MCSCALE2	network/orion_old/SIM_power.h	124;"	d
MCSCALE2	network/orion_old/SIM_power.h	136;"	d
MCSCALE2	network/orion_old/SIM_power.h	148;"	d
MCSCALE2	network/orion_old/SIM_power.h	160;"	d
MCSCALE2	network/orion_old/SIM_power.h	172;"	d
MCSCALE2	network/orion_old/SIM_power.h	99;"	d
MCSCALE2	network/orion_old/parm_technology.h	108;"	d
MCSCALE2	network/orion_old/parm_technology.h	120;"	d
MCSCALE2	network/orion_old/parm_technology.h	132;"	d
MCSCALE2	network/orion_old/parm_technology.h	144;"	d
MCSCALE2	network/orion_old/parm_technology.h	156;"	d
MCSCALE2	network/orion_old/parm_technology.h	168;"	d
MCSCALE2	network/orion_old/parm_technology.h	95;"	d
MCSCALE3	network/orion/SIM_technology_v1.h	104;"	d
MCSCALE3	network/orion/SIM_technology_v1.h	116;"	d
MCSCALE3	network/orion/SIM_technology_v1.h	56;"	d
MCSCALE3	network/orion/SIM_technology_v1.h	68;"	d
MCSCALE3	network/orion/SIM_technology_v1.h	80;"	d
MCSCALE3	network/orion/SIM_technology_v1.h	92;"	d
MCSCALE3	network/orion_old/SIM_power.h	100;"	d
MCSCALE3	network/orion_old/SIM_power.h	113;"	d
MCSCALE3	network/orion_old/SIM_power.h	125;"	d
MCSCALE3	network/orion_old/SIM_power.h	137;"	d
MCSCALE3	network/orion_old/SIM_power.h	149;"	d
MCSCALE3	network/orion_old/SIM_power.h	161;"	d
MCSCALE3	network/orion_old/SIM_power.h	173;"	d
MCSCALE3	network/orion_old/parm_technology.h	109;"	d
MCSCALE3	network/orion_old/parm_technology.h	121;"	d
MCSCALE3	network/orion_old/parm_technology.h	133;"	d
MCSCALE3	network/orion_old/parm_technology.h	145;"	d
MCSCALE3	network/orion_old/parm_technology.h	157;"	d
MCSCALE3	network/orion_old/parm_technology.h	169;"	d
MCSCALE3	network/orion_old/parm_technology.h	96;"	d
MEMFETCHSET_H	common/MemfetchSet.h	2;"	d
MEMORYNODE_H	system/MemoryNode.h	34;"	d
MEMORY_CONTROL_H	system/MemoryControl.h	67;"	d
MEMORY_LATENCY	config/RubyConfig.h	75;"	d
MEMORY_TRANSACTION_TYPE	depreceated/module/ruby.c	129;"	d	file:
MEMORY_TRANSACTION_TYPE	depreceated/module/ruby.c	131;"	d	file:
MEMORY_TRANSACTION_TYPE	simics/depreceated/commands.h	84;"	d
MEMORY_TRANSACTION_TYPE	simics/depreceated/commands.h	86;"	d
MEM_MAX_MODEL	network/orion/SIM_array_model.h	/^	MEM_MAX_MODEL$/;"	e	enum:__anon29
MEM_MAX_MODEL	network/orion_old/power_array.h	/^	MEM_MAX_MODEL$/;"	e	enum:__anon65
MESSAGEBUFFERNODE_H	buffers/MessageBufferNode.h	67;"	d
MESSAGEBUFFER_H	buffers/MessageBuffer.h	66;"	d
MESSAGE_H	slicc_interface/Message.h	62;"	d
MESSAGE_SIZE_MULTIPLIER	network/simple/Throttle.C	/^const int MESSAGE_SIZE_MULTIPLIER = 1000;$/;"	v
MIN	network/orion/SIM_parameter.h	55;"	d
MIN	network/orion_old/SIM_power.h	68;"	d
MIN	network/orion_old/parm_technology.h	394;"	d
MIN_DELAY	network/orion/SIM_link_model.h	49;"	d
MISC_SRC	network/orion/Makefile	/^MISC_SRC     = SIM_util.c SIM_time.c$/;"	m
MODULE_ARCHS	depreceated/module/Makefile	/^MODULE_ARCHS = sun4u$/;"	m
MODULE_CFLAGS	depreceated/module/Makefile	/^MODULE_CFLAGS = -DTARGET_VA_BITS=64 -DTARGET_PA_BITS=64$/;"	m
MODULE_CLASSES	depreceated/module/Makefile	/^MODULE_CLASSES = ruby$/;"	m
MODULE_DIR	depreceated/module/Makefile	/^MODULE_DIR = ruby$/;"	m
MODULE_LDFLAGS	depreceated/module/Makefile	/^MODULE_LDFLAGS = -ggdb -g3$/;"	m
MODULE_NAME	depreceated/module/Makefile	/^MODULE_NAME = ruby$/;"	m
MODULE_SRCS	network/orion/Makefile	/^MODULE_SRCS = SIM_router_power.c$/;"	m
MSCALE	network/orion/SIM_technology_v1.h	120;"	d
MSCALE	network/orion/SIM_technology_v2.h	112;"	d
MSCALE	network/orion/SIM_technology_v2.h	442;"	d
MSCALE	network/orion_old/SIM_power.h	177;"	d
MSCALE	network/orion_old/parm_technology.h	173;"	d
MULTIBITSEL_BLOOM_FILTER_H	system/MultiBitSelBloomFilter.h	66;"	d
MULTIGRAIN_BLOOM_FILTER_H	system/MultiGrainBloomFilter.h	66;"	d
MULTREE_CROSSBAR	network/orion/SIM_router_model.h	/^	MULTREE_CROSSBAR,$/;"	e	enum:__anon51
MULTREE_CROSSBAR	network/orion_old/power_crossbar.h	/^	MULTREE_CROSSBAR,$/;"	e	enum:__anon86
MUX_MAX_MODEL	network/orion/SIM_array_model.h	/^	MUX_MAX_MODEL$/;"	e	enum:__anon24
MUX_MAX_MODEL	network/orion_old/power_array.h	/^	MUX_MAX_MODEL$/;"	e	enum:__anon60
MY_END	generated/MI_example/attrparse.c	/^     MY_END = 260,$/;"	e	enum:yytokentype	file:
MY_END	generated/MI_example/attrparse.h	/^     MY_END = 260,$/;"	e	enum:yytokentype
MachineID	system/MachineID.h	/^struct MachineID {$/;"	s
MachineIDToString	system/MachineID.h	/^string MachineIDToString (MachineID machine) {$/;"	f
MachineType	generated/MI_example/MachineType.h	/^enum MachineType {$/;"	g
MachineType_Directory	generated/MI_example/MachineType.h	/^  MachineType_Directory,  \/**< No description avaliable *\/$/;"	e	enum:MachineType
MachineType_FIRST	generated/MI_example/MachineType.h	/^  MachineType_FIRST,$/;"	e	enum:MachineType
MachineType_H	generated/MI_example/MachineType.h	6;"	d
MachineType_L1Cache	generated/MI_example/MachineType.h	/^  MachineType_L1Cache = MachineType_FIRST,  \/**< No description avaliable *\/$/;"	e	enum:MachineType
MachineType_NUM	generated/MI_example/MachineType.h	/^  MachineType_NUM$/;"	e	enum:MachineType
MachineType_base_count	generated/MI_example/MachineType.C	/^int MachineType_base_count(const MachineType& obj)$/;"	f
MachineType_base_level	generated/MI_example/MachineType.C	/^int MachineType_base_level(const MachineType& obj)$/;"	f
MachineType_base_number	generated/MI_example/MachineType.C	/^int MachineType_base_number(const MachineType& obj)$/;"	f
MachineType_chip_count	generated/MI_example/MachineType.C	/^int MachineType_chip_count(const MachineType& obj, NodeID chipID)$/;"	f
MachineType_to_string	generated/MI_example/MachineType.C	/^string MachineType_to_string(const MachineType& obj)$/;"	f
MaskPredictorIndex	generated/MI_example/MaskPredictorIndex.h	/^enum MaskPredictorIndex {$/;"	g
MaskPredictorIndex_DataBlock	generated/MI_example/MaskPredictorIndex.h	/^  MaskPredictorIndex_DataBlock,  \/**< Data Block *\/$/;"	e	enum:MaskPredictorIndex
MaskPredictorIndex_FIRST	generated/MI_example/MaskPredictorIndex.h	/^  MaskPredictorIndex_FIRST,$/;"	e	enum:MaskPredictorIndex
MaskPredictorIndex_H	generated/MI_example/MaskPredictorIndex.h	6;"	d
MaskPredictorIndex_NUM	generated/MI_example/MaskPredictorIndex.h	/^  MaskPredictorIndex_NUM$/;"	e	enum:MaskPredictorIndex
MaskPredictorIndex_PC	generated/MI_example/MaskPredictorIndex.h	/^  MaskPredictorIndex_PC,  \/**< Program Counter *\/$/;"	e	enum:MaskPredictorIndex
MaskPredictorIndex_Undefined	generated/MI_example/MaskPredictorIndex.h	/^  MaskPredictorIndex_Undefined = MaskPredictorIndex_FIRST,  \/**< Undefined *\/$/;"	e	enum:MaskPredictorIndex
MaskPredictorIndex_to_string	generated/MI_example/MaskPredictorIndex.C	/^string MaskPredictorIndex_to_string(const MaskPredictorIndex& obj)$/;"	f
MaskPredictorTraining	generated/MI_example/MaskPredictorTraining.h	/^enum MaskPredictorTraining {$/;"	g
MaskPredictorTraining_Both	generated/MI_example/MaskPredictorTraining.h	/^  MaskPredictorTraining_Both,  \/**< Both *\/$/;"	e	enum:MaskPredictorTraining
MaskPredictorTraining_Explicit	generated/MI_example/MaskPredictorTraining.h	/^  MaskPredictorTraining_Explicit,  \/**< Explicit *\/$/;"	e	enum:MaskPredictorTraining
MaskPredictorTraining_FIRST	generated/MI_example/MaskPredictorTraining.h	/^  MaskPredictorTraining_FIRST,$/;"	e	enum:MaskPredictorTraining
MaskPredictorTraining_H	generated/MI_example/MaskPredictorTraining.h	6;"	d
MaskPredictorTraining_Implicit	generated/MI_example/MaskPredictorTraining.h	/^  MaskPredictorTraining_Implicit,  \/**< Implicit *\/$/;"	e	enum:MaskPredictorTraining
MaskPredictorTraining_NUM	generated/MI_example/MaskPredictorTraining.h	/^  MaskPredictorTraining_NUM$/;"	e	enum:MaskPredictorTraining
MaskPredictorTraining_None	generated/MI_example/MaskPredictorTraining.h	/^  MaskPredictorTraining_None,  \/**< None *\/$/;"	e	enum:MaskPredictorTraining
MaskPredictorTraining_Undefined	generated/MI_example/MaskPredictorTraining.h	/^  MaskPredictorTraining_Undefined = MaskPredictorTraining_FIRST,  \/**< Undefined *\/$/;"	e	enum:MaskPredictorTraining
MaskPredictorTraining_to_string	generated/MI_example/MaskPredictorTraining.C	/^string MaskPredictorTraining_to_string(const MaskPredictorTraining& obj)$/;"	f
MaskPredictorType	generated/MI_example/MaskPredictorType.h	/^enum MaskPredictorType {$/;"	g
MaskPredictorType_AlwaysBroadcast	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_AlwaysBroadcast,  \/**< AlwaysBroadcast *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_AlwaysUnicast	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_AlwaysUnicast,  \/**< AlwaysUnicast *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_BandwidthAdaptive	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_BandwidthAdaptive,  \/**< Bandwidth Adaptive *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_BroadcastCounter	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_BroadcastCounter,  \/**< Broadcast Counter *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_BroadcastIfShared	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_BroadcastIfShared,  \/**< Broadcast-If-Shared *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_Counter	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_Counter,  \/**< Counter *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_FIRST	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_FIRST,$/;"	e	enum:MaskPredictorType
MaskPredictorType_Group	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_Group,  \/**< Group *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_H	generated/MI_example/MaskPredictorType.h	6;"	d
MaskPredictorType_LastNMasks	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_LastNMasks,  \/**< Last N Masks *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_NUM	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_NUM$/;"	e	enum:MaskPredictorType
MaskPredictorType_Owner	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_Owner,  \/**< Owner *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_OwnerBroadcast	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_OwnerBroadcast,  \/**< Owner\/Broadcast Hybrid *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_OwnerBroadcastMod	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_OwnerBroadcastMod,  \/**< Owner\/Broadcast Hybrid-Mod *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_OwnerGroup	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_OwnerGroup,  \/**< Owner\/Group Hybrid *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_OwnerGroupMod	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_OwnerGroupMod,  \/**< Owner\/Group Hybrid-Mod *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_Pairwise	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_Pairwise,  \/**< Pairwise *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_Random	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_Random,  \/**< Random *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_StickySpatial	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_StickySpatial,  \/**< StickySpatial *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_TokenB	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_TokenB,  \/**< TokenB *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_TokenD	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_TokenD,  \/**< TokenD *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_TokenNull	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_TokenNull,  \/**< TokenNull *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_Undefined	generated/MI_example/MaskPredictorType.h	/^  MaskPredictorType_Undefined = MaskPredictorType_FIRST,  \/**< Undefined *\/$/;"	e	enum:MaskPredictorType
MaskPredictorType_to_string	generated/MI_example/MaskPredictorType.C	/^string MaskPredictorType_to_string(const MaskPredictorType& obj)$/;"	f
MatchlineSpacing	network/orion/SIM_technology_v1.h	289;"	d
MatchlineSpacing	network/orion/SIM_technology_v2.h	424;"	d
MatchlineSpacing	network/orion/SIM_technology_v2.h	756;"	d
MatchlineSpacing	network/orion_old/SIM_power.h	351;"	d
MatchlineSpacing	network/orion_old/parm_technology.h	368;"	d
Matrix	network/simple/Topology.h	/^typedef Vector < Vector <int> > Matrix;$/;"	t
MedPrio	common/Debug.h	/^enum PriorityLevel {HighPrio, MedPrio, LowPrio};$/;"	e	enum:PriorityLevel
Med_Verb	common/Debug.h	/^enum VerbosityLevel {No_Verb, Low_Verb, Med_Verb, High_Verb};$/;"	e	enum:VerbosityLevel
MemfetchSet	common/MemfetchSet.C	/^MemfetchSet::MemfetchSet() : m_memfetch_set(g_NUM_PROCESSORS)$/;"	f	class:MemfetchSet
MemfetchSet	common/MemfetchSet.h	/^class MemfetchSet {$/;"	c
MemoryControl	system/MemoryControl.C	/^MemoryControl::MemoryControl (AbstractChip* chip_ptr, int version) {$/;"	f	class:MemoryControl
MemoryControl	system/MemoryControl.h	/^class MemoryControl : public Consumer, public AbstractMemOrCache {$/;"	c
MemoryMsg	generated/MI_example/MemoryMsg.h	/^  MemoryMsg() $/;"	f	class:MemoryMsg
MemoryMsg	generated/MI_example/MemoryMsg.h	/^  MemoryMsg(const Address& local_Address, const MemoryRequestType& local_Type, const MachineID& local_Sender, const MachineID& local_OriginalRequestorMachId, const DataBlock& local_DataBlk, const MessageSizeType& local_MessageSize, const PrefetchBit& local_Prefetch, const bool& local_ReadX, const int& local_Acks)$/;"	f	class:MemoryMsg
MemoryMsg	generated/MI_example/MemoryMsg.h	/^class MemoryMsg :  public Message {$/;"	c
MemoryMsg_H	generated/MI_example/MemoryMsg.h	7;"	d
MemoryNode	system/MemoryNode.h	/^  MemoryNode(const Time& time, const MsgPtr& msgptr, const physical_address_t addr, const bool is_mem_read, const bool is_dirty_wb) { $/;"	f	class:MemoryNode
MemoryNode	system/MemoryNode.h	/^  MemoryNode(const Time& time, int counter, const MsgPtr& msgptr, const physical_address_t addr, const bool is_mem_read) { $/;"	f	class:MemoryNode
MemoryNode	system/MemoryNode.h	/^class MemoryNode {$/;"	c
MemoryRequestType	generated/MI_example/MemoryRequestType.h	/^enum MemoryRequestType {$/;"	g
MemoryRequestType_FIRST	generated/MI_example/MemoryRequestType.h	/^  MemoryRequestType_FIRST,$/;"	e	enum:MemoryRequestType
MemoryRequestType_H	generated/MI_example/MemoryRequestType.h	6;"	d
MemoryRequestType_MEMORY_ACK	generated/MI_example/MemoryRequestType.h	/^  MemoryRequestType_MEMORY_ACK,  \/**< Write to memory acknowledgement *\/$/;"	e	enum:MemoryRequestType
MemoryRequestType_MEMORY_DATA	generated/MI_example/MemoryRequestType.h	/^  MemoryRequestType_MEMORY_DATA,  \/**< Data read from memory *\/$/;"	e	enum:MemoryRequestType
MemoryRequestType_MEMORY_READ	generated/MI_example/MemoryRequestType.h	/^  MemoryRequestType_MEMORY_READ = MemoryRequestType_FIRST,  \/**< Read request to memory *\/$/;"	e	enum:MemoryRequestType
MemoryRequestType_MEMORY_WB	generated/MI_example/MemoryRequestType.h	/^  MemoryRequestType_MEMORY_WB,  \/**< Write back data to memory *\/$/;"	e	enum:MemoryRequestType
MemoryRequestType_NUM	generated/MI_example/MemoryRequestType.h	/^  MemoryRequestType_NUM$/;"	e	enum:MemoryRequestType
MemoryRequestType_to_string	generated/MI_example/MemoryRequestType.C	/^string MemoryRequestType_to_string(const MemoryRequestType& obj)$/;"	f
MemorySpaceType	generated/MI_example/MemorySpaceType.h	/^enum MemorySpaceType {$/;"	g
MemorySpaceType_FIRST	generated/MI_example/MemorySpaceType.h	/^  MemorySpaceType_FIRST,$/;"	e	enum:MemorySpaceType
MemorySpaceType_GLOBAL	generated/MI_example/MemorySpaceType.h	/^  MemorySpaceType_GLOBAL = MemorySpaceType_FIRST,  \/**< Global memory space *\/$/;"	e	enum:MemorySpaceType
MemorySpaceType_H	generated/MI_example/MemorySpaceType.h	6;"	d
MemorySpaceType_LOCAL	generated/MI_example/MemorySpaceType.h	/^  MemorySpaceType_LOCAL,  \/**< Local memory space *\/$/;"	e	enum:MemorySpaceType
MemorySpaceType_NULL	generated/MI_example/MemorySpaceType.h	/^  MemorySpaceType_NULL,  \/**< null space type *\/$/;"	e	enum:MemorySpaceType
MemorySpaceType_NUM	generated/MI_example/MemorySpaceType.h	/^  MemorySpaceType_NUM$/;"	e	enum:MemorySpaceType
MemorySpaceType_to_string	generated/MI_example/MemorySpaceType.C	/^string MemorySpaceType_to_string(const MemorySpaceType& obj)$/;"	f
MemoryTransactionResult	simics/depreceated/SimicsDriver.h	/^} MemoryTransactionResult;$/;"	t	typeref:enum:__anon91
Message	slicc_interface/Message.h	/^  Message() : RefCountable() { m_time = g_eventQueue_ptr->getTime();  m_LastEnqueueTime = g_eventQueue_ptr->getTime(); m_DelayedCycles = 0;}$/;"	f	class:Message
Message	slicc_interface/Message.h	/^class Message : public RefCountable {$/;"	c
MessageBuffer	buffers/MessageBuffer.C	/^MessageBuffer::MessageBuffer()$/;"	f	class:MessageBuffer
MessageBuffer	buffers/MessageBuffer.C	/^MessageBuffer::MessageBuffer(const Chip* chip_ptr)  \/\/ The chip_ptr is ignored, but could be used for extra debugging$/;"	f	class:MessageBuffer
MessageBuffer	buffers/MessageBuffer.h	/^class MessageBuffer {$/;"	c
MessageBufferNode	buffers/MessageBufferNode.h	/^  MessageBufferNode() { m_time = 0; m_msg_counter = 0; }$/;"	f	class:MessageBufferNode
MessageBufferNode	buffers/MessageBufferNode.h	/^  MessageBufferNode(const Time& time, int counter, const MsgPtr& msgptr)$/;"	f	class:MessageBufferNode
MessageBufferNode	buffers/MessageBufferNode.h	/^class MessageBufferNode {$/;"	c
MessageSizeType	generated/MI_example/MessageSizeType.h	/^enum MessageSizeType {$/;"	g
MessageSizeTypeToInt	slicc_interface/RubySlicc_Util.h	/^extern inline int MessageSizeTypeToInt(MessageSizeType size_type)$/;"	f
MessageSizeType_Completion_Control	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Completion_Control,  \/**< Completion messages *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Control	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Control,  \/**< Control Message *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_104	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_104,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_112	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_112,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_120	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_120,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_128	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_128,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_136	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_136,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_144	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_144,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_152	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_152,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_16	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_16,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_160	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_160,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_168	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_168,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_176	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_176,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_184	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_184,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_192	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_192,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_200	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_200,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_208	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_208,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_216	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_216,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_224	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_224,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_232	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_232,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_24	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_24,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_240	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_240,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_248	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_248,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_256	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_256,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_32	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_32,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_40	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_40,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_48	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_48,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_56	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_56,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_64	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_64,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_72	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_72,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_8	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_8,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_80	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_80,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_88	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_88,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Custom_96	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Custom_96,  \/**< Custom message size *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Data	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Data,  \/**< Data Message *\/$/;"	e	enum:MessageSizeType
MessageSizeType_FIRST	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_FIRST,$/;"	e	enum:MessageSizeType
MessageSizeType_Forwarded_Control	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Forwarded_Control,  \/**< Forwarded control *\/$/;"	e	enum:MessageSizeType
MessageSizeType_H	generated/MI_example/MessageSizeType.h	6;"	d
MessageSizeType_Invalidate_Control	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Invalidate_Control,  \/**< Invalidate control *\/$/;"	e	enum:MessageSizeType
MessageSizeType_NUM	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_NUM$/;"	e	enum:MessageSizeType
MessageSizeType_Persistent_Control	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Persistent_Control,  \/**< Persistent request activation messages *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Reissue_Control	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Reissue_Control,  \/**< Reissued request *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Request_Control	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Request_Control,  \/**< Request *\/$/;"	e	enum:MessageSizeType
MessageSizeType_ResponseL2hit_Data	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_ResponseL2hit_Data,  \/**< data response *\/$/;"	e	enum:MessageSizeType
MessageSizeType_ResponseLocal_Data	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_ResponseLocal_Data,  \/**< data response *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Response_Control	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Response_Control,  \/**< non-data response *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Response_Data	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Response_Data,  \/**< data response *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Unblock_Control	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Unblock_Control,  \/**< Unblock control *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Undefined	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Undefined = MessageSizeType_FIRST,  \/**< Undefined *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Writeback_Control	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Writeback_Control,  \/**< Writeback control *\/$/;"	e	enum:MessageSizeType
MessageSizeType_Writeback_Data	generated/MI_example/MessageSizeType.h	/^  MessageSizeType_Writeback_Data,  \/**< Writeback data *\/$/;"	e	enum:MessageSizeType
MessageSizeType_to_int	network/Network.h	/^int MessageSizeType_to_int(MessageSizeType size_type)$/;"	f
MessageSizeType_to_string	generated/MI_example/MessageSizeType.C	/^string MessageSizeType_to_string(const MessageSizeType& obj)$/;"	f
Miss	simics/depreceated/SimicsDriver.h	/^  Miss,              \/* request missed *\/$/;"	e	enum:__anon91
MsgPtr	slicc_interface/Message.h	/^typedef RefCnt<Message> MsgPtr;$/;"	t
MultiBitSelBloomFilter	system/MultiBitSelBloomFilter.C	/^MultiBitSelBloomFilter::MultiBitSelBloomFilter(string str)$/;"	f	class:MultiBitSelBloomFilter
MultiBitSelBloomFilter	system/MultiBitSelBloomFilter.h	/^class MultiBitSelBloomFilter : public AbstractBloomFilter {$/;"	c
MultiGrainBloomFilter	system/MultiGrainBloomFilter.C	/^MultiGrainBloomFilter::MultiGrainBloomFilter(string str) $/;"	f	class:MultiGrainBloomFilter
MultiGrainBloomFilter	system/MultiGrainBloomFilter.h	/^class MultiGrainBloomFilter : public AbstractBloomFilter {$/;"	c
NAND2_TAB	network/orion/SIM_static.c	/^double NAND2_TAB[4] = {0,0,0,0};$/;"	v
NAND2_TAB	network/orion/SIM_static.c	/^double NAND2_TAB[4] = {1.8e-9, 12.4e-9, 8.9e-9, 19.3e-9};$/;"	v
NAND2_TAB	network/orion/SIM_static.c	/^double NAND2_TAB[4] = {111.4e-9, 187.2e-9, 230.7e-9, 306.9e-9};$/;"	v
NAND2_TAB	network/orion/SIM_static.c	/^double NAND2_TAB[4] = {19.7e-9, 51.3e-9, 63.0e-9, 87.6e-9};$/;"	v
NAND2_TAB	network/orion/SIM_static.c	/^double NAND2_TAB[4] = {2.8e-9, 19.6e-9, 10.4e-9, 29.3e-9};$/;"	v
NAND2_TAB	network/orion/SIM_static.c	/^double NAND2_TAB[4] = {303.0e-9, 423.0e-9, 498.3e-9, 626.3e-9};$/;"	v
NAND2_TAB	network/orion/SIM_static.c	/^double NAND2_TAB[4] = {7.8e-9, 24.6e-9, 14.1e-9, 34.3e-9};$/;"	v
NAND2_TAB	network/orion_old/power_static.C	/^double NAND2_TAB[4] = {1.2e-9, 22.6e-9, 11.4e-9, 35.9e-9};$/;"	v
NAND2_TAB	network/orion_old/power_static.C	/^double NAND2_TAB[4] = {19.7e-9, 115.3e-9, 83.0e-9, 267.6e-9};$/;"	v
NAND2_TAB	network/orion_old/power_static.C	/^double NAND2_TAB[4] = {6.4e-10, 20.4e-9, 12.6e-9, 18.4e-9};$/;"	v
NCH	network/orion/SIM_parameter.h	70;"	d
NCH	network/orion_old/SIM_power.h	81;"	d
NCH	network/orion_old/parm_technology.h	407;"	d
NEG_DFF	network/orion/SIM_misc_model.h	/^	NEG_DFF = 1,	\/* negative egde-triggered D flip-flop *\/$/;"	e	enum:__anon38
NEG_DFF	network/orion_old/power_arbiter.h	/^	NEG_DFF = 1,	\/* negative egde-triggered D flip-flop *\/$/;"	e	enum:__anon56
NETCONFIG_DEFAULTS	network/garnet-fixed-pipeline/NetworkHeader.h	74;"	d
NETDEST_H	common/NetDest.h	72;"	d
NETWORK	Makefile	/^NETWORK = simple$/;"	m
NETWORKCONFIG_H	network/garnet-flexible-pipeline/NetworkConfig.h	64;"	d
NETWORK_H	network/Network.h	74;"	d
NETWORK_HEADER_H	network/garnet-fixed-pipeline/NetworkHeader.h	62;"	d
NETWORK_LINK_D_H	network/garnet-fixed-pipeline/NetworkLink_d.h	62;"	d
NETWORK_LINK_H	network/garnet-flexible-pipeline/NetworkLink.h	61;"	d
NET_INTERFACE_D_H	network/garnet-fixed-pipeline/NetworkInterface_d.h	62;"	d
NET_INTERFACE_H	network/garnet-flexible-pipeline/NetworkInterface.h	61;"	d
NEXT_DEPTH	network/orion/SIM_parameter.h	58;"	d
NEXT_DEPTH	network/orion_old/SIM_power.h	71;"	d
NEXT_DEPTH	network/orion_old/parm_technology.h	397;"	d
NMOS_TAB	network/orion/SIM_static.c	/^double NMOS_TAB[1] = {0};$/;"	v
NMOS_TAB	network/orion/SIM_static.c	/^double NMOS_TAB[1] = {115.1e-9};$/;"	v
NMOS_TAB	network/orion/SIM_static.c	/^double NMOS_TAB[1] = {12.2e-9};$/;"	v
NMOS_TAB	network/orion/SIM_static.c	/^double NMOS_TAB[1] = {15.6e-9};$/;"	v
NMOS_TAB	network/orion/SIM_static.c	/^double NMOS_TAB[1] = {18.4e-9};$/;"	v
NMOS_TAB	network/orion/SIM_static.c	/^double NMOS_TAB[1] = {19.9e-9};$/;"	v
NMOS_TAB	network/orion/SIM_static.c	/^double NMOS_TAB[1] = {311.7e-9};$/;"	v
NMOS_TAB	network/orion_old/power_static.C	/^double NMOS_TAB[1] = {118.1e-9};$/;"	v
NMOS_TAB	network/orion_old/power_static.C	/^double NMOS_TAB[1] = {20.5e-9};$/;"	v
NMOS_TAB	network/orion_old/power_static.C	/^double NMOS_TAB[1] = {22.7e-9};$/;"	v
NODEID_H	system/NodeID.h	67;"	d
NONCOUNTING_BLOOM_FILTER_H	system/NonCountingBloomFilter.h	66;"	d
NOR2_TAB	network/orion/SIM_static.c	/^double NOR2_TAB[4] = {29.5e-9, 8.3e-9, 11.1e-9, 0.9e-9};$/;"	v
NOR2_TAB	network/orion/SIM_static.c	/^double NOR2_TAB[4] = {41.5e-9, 13.1e-9, 14.5e-9, 1.4e-9};$/;"	v
NOR2_TAB	network/orion/SIM_static.c	/^double NOR2_TAB[4] = {51.2e-9, 23.9e-9, 19.5e-9, 8.4e-9};$/;"	v
NOR2_TAB	network/orion/SIM_static.c	/^double NOR2_TAB[4] ={0,0,0,0};$/;"	v
NOR2_TAB	network/orion/SIM_static.c	/^double NOR2_TAB[4] ={23.4e-9, 37.6e-9, 67.9e-9, 12.3e-9};$/;"	v
NOR2_TAB	network/orion/SIM_static.c	/^double NOR2_TAB[4] ={289.7e-9, 165.7e-9, 236.9e-9, 141.4e-9};$/;"	v
NOR2_TAB	network/orion/SIM_static.c	/^double NOR2_TAB[4] ={556.0e-9, 393.7e-9, 506.7e-9, 369.7e-9};$/;"	v
NOR2_TAB	network/orion_old/power_static.C	/^double NOR2_TAB[4] ={232.4e-9, 79.6e-9, 127.9e-9, 12.3e-9};$/;"	v
NOR2_TAB	network/orion_old/power_static.C	/^double NOR2_TAB[4] ={40.9e-9, 8.32e-9, 9.2e-9, 2.3e-10};$/;"	v
NOR2_TAB	network/orion_old/power_static.C	/^double NOR2_TAB[4] ={45.1e-9, 11.5e-9, 17.9e-9, 1.8e-9};$/;"	v
NORMAL_MEM	network/orion/SIM_array_model.h	/^	NORMAL_MEM = 1,$/;"	e	enum:__anon29
NORMAL_MEM	network/orion_old/power_array.h	/^	NORMAL_MEM =1,$/;"	e	enum:__anon65
NP_GATE	network/orion/SIM_router_model.h	/^	NP_GATE$/;"	e	enum:__anon54
NP_GATE	network/orion_old/power_crossbar.h	/^	NP_GATE$/;"	e	enum:__anon85
NULL	tester/getopt.C	820;"	d	file:
NUMBER_OF_COMPS	common/Debug.h	/^  NUMBER_OF_COMPS$/;"	e	enum:DebugComponents
NUMBER_WORDS_PER_SET	config/RubyConfig.h	/^const int NUMBER_WORDS_PER_SET = 4;$/;"	v
NUM_FLIT_STAGE_	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum flit_stage {I_, VA_, SA_, ST_, LT_, NUM_FLIT_STAGE_};$/;"	e	enum:flit_stage
NUM_FLIT_TYPE_	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum flit_type {HEAD_, BODY_, TAIL_, HEAD_TAIL_, NUM_FLIT_TYPE_};$/;"	e	enum:flit_type
NUM_VC_STATE_TYPE_	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum VC_state_type {IDLE_, VC_AB_, ACTIVE_, NUM_VC_STATE_TYPE_};$/;"	e	enum:VC_state_type
NVT	network/orion/SIM_parameter.h	80;"	d
N_GATE	network/orion/SIM_router_model.h	/^	N_GATE,$/;"	e	enum:__anon54
N_GATE	network/orion_old/power_crossbar.h	/^	N_GATE,$/;"	e	enum:__anon85
N_ITEM	network/orion/SIM_router.c	376;"	d	file:
N_ITEM	network/orion_old/power_array.C	2136;"	d	file:
N_ONEHOT	network/orion/SIM_permu.h	75;"	d
N_tokens	slicc_interface/RubySlicc_Util.h	/^extern inline int N_tokens()$/;"	f
NetDest	common/NetDest.C	/^NetDest::NetDest()  $/;"	f	class:NetDest
NetDest	common/NetDest.h	/^class NetDest {$/;"	c
NetMsgPtr	slicc_interface/NetworkMessage.h	/^typedef RefCnt<NetworkMessage> NetMsgPtr;$/;"	t
Network	network/Network.h	/^  Network() {}$/;"	f	class:Network
Network	network/Network.h	/^class Network {$/;"	c
NetworkConfig	network/garnet-flexible-pipeline/NetworkConfig.h	/^class NetworkConfig {$/;"	c
NetworkInterface	network/garnet-flexible-pipeline/NetworkInterface.C	/^NetworkInterface::NetworkInterface(int id, int virtual_networks, GarnetNetwork *network_ptr)$/;"	f	class:NetworkInterface
NetworkInterface	network/garnet-flexible-pipeline/NetworkInterface.h	/^class NetworkInterface : public FlexibleConsumer {$/;"	c
NetworkInterface_d	network/garnet-fixed-pipeline/NetworkInterface_d.C	/^NetworkInterface_d::NetworkInterface_d(int id, int virtual_networks, GarnetNetwork_d *network_ptr)$/;"	f	class:NetworkInterface_d
NetworkInterface_d	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^class NetworkInterface_d : public Consumer {$/;"	c
NetworkLink	network/garnet-flexible-pipeline/NetworkLink.C	/^NetworkLink::NetworkLink(int id, int latency, GarnetNetwork *net_ptr)$/;"	f	class:NetworkLink
NetworkLink	network/garnet-flexible-pipeline/NetworkLink.h	/^class NetworkLink : public FlexibleConsumer {$/;"	c
NetworkLink_d	network/garnet-fixed-pipeline/NetworkLink_d.C	/^NetworkLink_d::NetworkLink_d(int id)$/;"	f	class:NetworkLink_d
NetworkLink_d	network/garnet-fixed-pipeline/NetworkLink_d.C	/^NetworkLink_d::NetworkLink_d(int id, int link_latency, GarnetNetwork_d *net_ptr)$/;"	f	class:NetworkLink_d
NetworkLink_d	network/garnet-fixed-pipeline/NetworkLink_d.h	/^class NetworkLink_d : public Consumer {$/;"	c
NetworkMessage	slicc_interface/NetworkMessage.h	/^  NetworkMessage() $/;"	f	class:NetworkMessage
NetworkMessage	slicc_interface/NetworkMessage.h	/^class NetworkMessage : public Message {$/;"	c
NetworkMessage_H	slicc_interface/NetworkMessage.h	67;"	d
No_Verb	common/Debug.h	/^enum VerbosityLevel {No_Verb, Low_Verb, Med_Verb, High_Verb};$/;"	e	enum:VerbosityLevel
NodeID	system/NodeID.h	/^typedef int NodeID;$/;"	t
NodeIDToString	system/NodeID.h	/^string NodeIDToString (NodeID node) { return int_to_string(node); }$/;"	f
NodePersistentTable	system/NodePersistentTable.C	/^NodePersistentTable::NodePersistentTable(AbstractChip* chip_ptr, int version)$/;"	f	class:NodePersistentTable
NodePersistentTable	system/NodePersistentTable.h	/^class NodePersistentTable {$/;"	c
NodePersistentTableEntry	system/NodePersistentTable.C	/^class NodePersistentTableEntry {$/;"	c	file:
NodePersistentTable_H	system/NodePersistentTable.h	65;"	d
NonCountingBloomFilter	system/NonCountingBloomFilter.C	/^NonCountingBloomFilter::NonCountingBloomFilter(string str) $/;"	f	class:NonCountingBloomFilter
NonCountingBloomFilter	system/NonCountingBloomFilter.h	/^class NonCountingBloomFilter : public AbstractBloomFilter {$/;"	c
Non_Stallable	simics/depreceated/SimicsDriver.h	/^  Non_Stallable,     \/* request non-stallable *\/$/;"	e	enum:__anon91
NotPresent	common/BigSet.h	/^enum PresenceBit {NotPresent, Present};$/;"	e	enum:PresenceBit
Not_Ready	simics/depreceated/SimicsDriver.h	/^  Not_Ready,         \/* not ready to handle *\/$/;"	e	enum:__anon91
OBJS	network/orion/Makefile	/^OBJS      = $(SRCS:.c=.o)$/;"	m
OMFLIP_PERMU	network/orion/SIM_permu_model.h	/^	OMFLIP_PERMU = 1,$/;"	e	enum:__anon44
ONE_STAGE_ARB	network/orion/SIM_router_model.h	/^	ONE_STAGE_ARB = 1,$/;"	e	enum:__anon49
OPAL_ATOMIC	interfaces/mf_api.h	/^  OPAL_ATOMIC,$/;"	e	enum:OpalMemop
OPAL_IFETCH	interfaces/mf_api.h	/^  OPAL_IFETCH,$/;"	e	enum:OpalMemop
OPAL_LOAD	interfaces/mf_api.h	/^  OPAL_LOAD,$/;"	e	enum:OpalMemop
OPAL_STORE	interfaces/mf_api.h	/^  OPAL_STORE,$/;"	e	enum:OpalMemop
OPTBIGSET	common/Set.h	71;"	d
OR	common/BigSet.C	/^Set Set::OR(const Set& orSet) const$/;"	f	class:Set
OR	common/NetDest.C	/^NetDest NetDest::OR(const NetDest& orNetDest) const$/;"	f	class:NetDest
OR	common/OptBigSet.C	/^Set Set::OR(const Set& orSet) const$/;"	f	class:Set
OR	common/Set.C	/^Set Set::OR(const Set& orSet) const$/;"	f	class:Set
ORION	Makefile	/^ORION = orion$/;"	m
OTHER_MODEL	network/orion/Makefile	/^OTHER_MODEL  = SIM_misc.c SIM_permu.c$/;"	m
OUTDRV_MAX_MODEL	network/orion/SIM_array_model.h	/^	OUTDRV_MAX_MODEL$/;"	e	enum:__anon31
OUTDRV_MAX_MODEL	network/orion_old/power_array.h	/^	OUTDRV_MAX_MODEL$/;"	e	enum:__anon67
OUTPUT_UNIT_D_H	network/garnet-fixed-pipeline/OutputUnit_d.h	62;"	d
OUT_VC_STATE_D_H	network/garnet-fixed-pipeline/OutVcState_d.h	62;"	d
OUT_VC_STATE_H	network/garnet-flexible-pipeline/OutVcState.h	62;"	d
OpalInterface	interfaces/OpalInterface.C	/^OpalInterface::OpalInterface(System* sys_ptr) {$/;"	f	class:OpalInterface
OpalInterface	interfaces/OpalInterface.h	/^class OpalInterface : public Driver {$/;"	c
OpalInterface_H	interfaces/OpalInterface.h	65;"	d
OpalMemop	interfaces/mf_api.h	/^typedef enum OpalMemop {$/;"	g
OpalMemop_t	interfaces/mf_api.h	/^} OpalMemop_t;$/;"	t	typeref:enum:OpalMemop
Opcode	tester/Instruction.h	/^enum Opcode {$/;"	g
Opcode_BEGIN	tester/Instruction.h	/^  Opcode_BEGIN,$/;"	e	enum:Opcode
Opcode_COMMIT	tester/Instruction.h	/^  Opcode_COMMIT,$/;"	e	enum:Opcode
Opcode_DONE	tester/Instruction.h	/^  Opcode_DONE,$/;"	e	enum:Opcode
Opcode_INC	tester/Instruction.h	/^  Opcode_INC,$/;"	e	enum:Opcode
Opcode_LD	tester/Instruction.h	/^  Opcode_LD,$/;"	e	enum:Opcode
Opcode_NUM_OPCODES	tester/Instruction.h	/^  Opcode_NUM_OPCODES$/;"	e	enum:Opcode
Opcode_ST	tester/Instruction.h	/^  Opcode_ST,$/;"	e	enum:Opcode
OutVcState	network/garnet-flexible-pipeline/OutVcState.C	/^OutVcState::OutVcState(int id)$/;"	f	class:OutVcState
OutVcState	network/garnet-flexible-pipeline/OutVcState.h	/^class OutVcState {$/;"	c
OutVcState_d	network/garnet-fixed-pipeline/OutVcState_d.C	/^OutVcState_d::OutVcState_d(int id)$/;"	f	class:OutVcState_d
OutVcState_d	network/garnet-fixed-pipeline/OutVcState_d.h	/^class OutVcState_d {$/;"	c
OutputUnit_d	network/garnet-fixed-pipeline/OutputUnit_d.C	/^OutputUnit_d::OutputUnit_d(int id, Router_d *router)$/;"	f	class:OutputUnit_d
OutputUnit_d	network/garnet-fixed-pipeline/OutputUnit_d.h	/^class OutputUnit_d : public Consumer {$/;"	c
PARAM	config/RubyConfig.C	184;"	d	file:
PARAM	config/RubyConfig.C	204;"	d	file:
PARAM_ARRAY	config/RubyConfig.C	190;"	d	file:
PARAM_ARRAY	config/RubyConfig.C	210;"	d	file:
PARAM_BOOL	config/RubyConfig.C	187;"	d	file:
PARAM_BOOL	config/RubyConfig.C	207;"	d	file:
PARAM_DOUBLE	config/RubyConfig.C	188;"	d	file:
PARAM_DOUBLE	config/RubyConfig.C	208;"	d	file:
PARAM_STRING	config/RubyConfig.C	189;"	d	file:
PARAM_STRING	config/RubyConfig.C	209;"	d	file:
PARAM_UINT	config/RubyConfig.C	185;"	d	file:
PARAM_UINT	config/RubyConfig.C	205;"	d	file:
PARAM_ULONG	config/RubyConfig.C	186;"	d	file:
PARAM_ULONG	config/RubyConfig.C	206;"	d	file:
PARM	network/orion/SIM_parameter.h	46;"	d
PARM	network/orion_old/SIM_power_test.h	69;"	d
PARM_ADDRESS_BITS	network/orion/SIM_technology.h	55;"	d
PARM_ADDRESS_BITS	network/orion_old/SIM_power_test.h	110;"	d
PARM_ADDRESS_BITS	network/orion_old/SIM_power_test.h	242;"	d
PARM_ADDRESS_BITS	network/orion_old/parm_technology.h	460;"	d
PARM_AF	network/orion/SIM_technology.h	37;"	d
PARM_AF	network/orion_old/SIM_power_test.h	128;"	d
PARM_AF	network/orion_old/SIM_power_test.h	71;"	d
PARM_AF	network/orion_old/parm_technology.h	425;"	d
PARM_AF_TYPE	network/orion_old/SIM_power_test.h	173;"	d
PARM_AF_TYPE	network/orion_old/SIM_power_test.h	86;"	d
PARM_AF_TYPE	network/orion_old/parm_technology.h	440;"	d
PARM_BITOUT	network/orion/SIM_technology.h	43;"	d
PARM_BITOUT	network/orion_old/SIM_power_test.h	158;"	d
PARM_BITOUT	network/orion_old/SIM_power_test.h	81;"	d
PARM_BITOUT	network/orion_old/parm_technology.h	435;"	d
PARM_Cgate	network/orion/SIM_technology.h	104;"	d
PARM_Cgate	network/orion/SIM_technology.h	118;"	d
PARM_Cgate	network/orion/SIM_technology.h	75;"	d
PARM_Cgate	network/orion/SIM_technology.h	90;"	d
PARM_Cgate	network/orion_old/SIM_power_test.h	112;"	d
PARM_Cgate	network/orion_old/SIM_power_test.h	248;"	d
PARM_Cgate	network/orion_old/parm_technology.h	77;"	d
PARM_Cgatepass	network/orion/SIM_technology.h	111;"	d
PARM_Cgatepass	network/orion/SIM_technology.h	68;"	d
PARM_Cgatepass	network/orion/SIM_technology.h	83;"	d
PARM_Cgatepass	network/orion/SIM_technology.h	97;"	d
PARM_Cgatepass	network/orion_old/SIM_power_test.h	182;"	d
PARM_Cgatepass	network/orion_old/SIM_power_test.h	90;"	d
PARM_Cgatepass	network/orion_old/parm_technology.h	71;"	d
PARM_Cndiffarea	network/orion/SIM_technology.h	101;"	d
PARM_Cndiffarea	network/orion/SIM_technology.h	115;"	d
PARM_Cndiffarea	network/orion/SIM_technology.h	72;"	d
PARM_Cndiffarea	network/orion/SIM_technology.h	87;"	d
PARM_Cndiffarea	network/orion_old/SIM_power_test.h	103;"	d
PARM_Cndiffarea	network/orion_old/SIM_power_test.h	221;"	d
PARM_Cndiffarea	network/orion_old/parm_technology.h	76;"	d
PARM_Cndiffovlp	network/orion/SIM_technology.h	106;"	d
PARM_Cndiffovlp	network/orion/SIM_technology.h	120;"	d
PARM_Cndiffovlp	network/orion/SIM_technology.h	77;"	d
PARM_Cndiffovlp	network/orion/SIM_technology.h	92;"	d
PARM_Cndiffovlp	network/orion_old/SIM_power_test.h	101;"	d
PARM_Cndiffovlp	network/orion_old/SIM_power_test.h	215;"	d
PARM_Cndiffovlp	network/orion_old/parm_technology.h	75;"	d
PARM_Cndiffside	network/orion/SIM_technology.h	100;"	d
PARM_Cndiffside	network/orion/SIM_technology.h	114;"	d
PARM_Cndiffside	network/orion/SIM_technology.h	71;"	d
PARM_Cndiffside	network/orion/SIM_technology.h	86;"	d
PARM_Cndiffside	network/orion_old/SIM_power_test.h	161;"	d
PARM_Cndiffside	network/orion_old/SIM_power_test.h	82;"	d
PARM_Cndiffside	network/orion_old/parm_technology.h	69;"	d
PARM_Cnoverlap	network/orion/SIM_technology.h	102;"	d
PARM_Cnoverlap	network/orion/SIM_technology.h	116;"	d
PARM_Cnoverlap	network/orion/SIM_technology.h	73;"	d
PARM_Cnoverlap	network/orion/SIM_technology.h	88;"	d
PARM_Cnoxideovlp	network/orion/SIM_technology.h	107;"	d
PARM_Cnoxideovlp	network/orion/SIM_technology.h	121;"	d
PARM_Cnoxideovlp	network/orion/SIM_technology.h	78;"	d
PARM_Cnoxideovlp	network/orion/SIM_technology.h	93;"	d
PARM_Cnoxideovlp	network/orion_old/SIM_power_test.h	122;"	d
PARM_Cnoxideovlp	network/orion_old/SIM_power_test.h	278;"	d
PARM_Cnoxideovlp	network/orion_old/parm_technology.h	78;"	d
PARM_Cpdiffarea	network/orion/SIM_technology.h	112;"	d
PARM_Cpdiffarea	network/orion/SIM_technology.h	69;"	d
PARM_Cpdiffarea	network/orion/SIM_technology.h	84;"	d
PARM_Cpdiffarea	network/orion/SIM_technology.h	98;"	d
PARM_Cpdiffarea	network/orion_old/SIM_power_test.h	185;"	d
PARM_Cpdiffarea	network/orion_old/SIM_power_test.h	91;"	d
PARM_Cpdiffarea	network/orion_old/parm_technology.h	72;"	d
PARM_Cpdiffovlp	network/orion/SIM_technology.h	105;"	d
PARM_Cpdiffovlp	network/orion/SIM_technology.h	119;"	d
PARM_Cpdiffovlp	network/orion/SIM_technology.h	76;"	d
PARM_Cpdiffovlp	network/orion/SIM_technology.h	91;"	d
PARM_Cpdiffovlp	network/orion_old/SIM_power_test.h	179;"	d
PARM_Cpdiffovlp	network/orion_old/SIM_power_test.h	88;"	d
PARM_Cpdiffovlp	network/orion_old/parm_technology.h	70;"	d
PARM_Cpdiffside	network/orion/SIM_technology.h	113;"	d
PARM_Cpdiffside	network/orion/SIM_technology.h	70;"	d
PARM_Cpdiffside	network/orion/SIM_technology.h	85;"	d
PARM_Cpdiffside	network/orion/SIM_technology.h	99;"	d
PARM_Cpdiffside	network/orion_old/SIM_power_test.h	197;"	d
PARM_Cpdiffside	network/orion_old/SIM_power_test.h	95;"	d
PARM_Cpdiffside	network/orion_old/parm_technology.h	73;"	d
PARM_Cpoverlap	network/orion/SIM_technology.h	103;"	d
PARM_Cpoverlap	network/orion/SIM_technology.h	117;"	d
PARM_Cpoverlap	network/orion/SIM_technology.h	74;"	d
PARM_Cpoverlap	network/orion/SIM_technology.h	89;"	d
PARM_Cpoxideovlp	network/orion/SIM_technology.h	108;"	d
PARM_Cpoxideovlp	network/orion/SIM_technology.h	122;"	d
PARM_Cpoxideovlp	network/orion/SIM_technology.h	79;"	d
PARM_Cpoxideovlp	network/orion/SIM_technology.h	94;"	d
PARM_Cpoxideovlp	network/orion_old/SIM_power_test.h	200;"	d
PARM_Cpoxideovlp	network/orion_old/SIM_power_test.h	96;"	d
PARM_Cpoxideovlp	network/orion_old/parm_technology.h	74;"	d
PARM_FUDGEFACTOR	network/orion/SIM_technology.h	49;"	d
PARM_FUDGEFACTOR	network/orion_old/SIM_power_test.h	209;"	d
PARM_FUDGEFACTOR	network/orion_old/SIM_power_test.h	99;"	d
PARM_FUDGEFACTOR	network/orion_old/parm_technology.h	449;"	d
PARM_Freq	network/orion/SIM_port.h	41;"	d
PARM_Freq	network/orion/SIM_port_NEC.h	41;"	d
PARM_Freq	network/orion/SIM_port_TRIPS.h	40;"	d
PARM_Freq	network/orion/SIM_port_alpha.h	41;"	d
PARM_Freq	network/orion/SIM_port_garnet.h	8;"	d
PARM_Freq	network/orion/SIM_port_ibm.h	41;"	d
PARM_Freq	network/orion/SIM_port_raw.h	40;"	d
PARM_Freq	network/orion_old/parm_technology.h	64;"	d
PARM_GENERIC_LINK_LENGTH	network/orion/SIM_port_garnet.h	122;"	d
PARM_GEN_POWER_FACTOR	network/orion/SIM_technology.h	47;"	d
PARM_GEN_POWER_FACTOR	network/orion_old/SIM_power_test.h	188;"	d
PARM_GEN_POWER_FACTOR	network/orion_old/SIM_power_test.h	92;"	d
PARM_GEN_POWER_FACTOR	network/orion_old/parm_technology.h	443;"	d
PARM_H_tree_clock	network/orion/SIM_port.h	156;"	d
PARM_H_tree_clock	network/orion/SIM_port_NEC.h	156;"	d
PARM_H_tree_clock	network/orion/SIM_port_garnet.h	127;"	d
PARM_LINK_SWITCHING_FACTOR	network/orion/SIM_port_garnet.h	123;"	d
PARM_LSQ_size	network/orion_old/SIM_power_test.h	125;"	d
PARM_LSQ_size	network/orion_old/SIM_power_test.h	287;"	d
PARM_LSQ_size	network/orion_old/parm_technology.h	475;"	d
PARM_MAXN	network/orion/SIM_technology.h	38;"	d
PARM_MAXN	network/orion_old/SIM_power_test.h	131;"	d
PARM_MAXN	network/orion_old/SIM_power_test.h	72;"	d
PARM_MAXN	network/orion_old/parm_technology.h	426;"	d
PARM_MAXSPD	network/orion/SIM_technology.h	40;"	d
PARM_MAXSPD	network/orion_old/SIM_power_test.h	137;"	d
PARM_MAXSPD	network/orion_old/SIM_power_test.h	74;"	d
PARM_MAXSPD	network/orion_old/parm_technology.h	428;"	d
PARM_MAXSUBARRAYS	network/orion/SIM_technology.h	39;"	d
PARM_MAXSUBARRAYS	network/orion_old/SIM_power_test.h	134;"	d
PARM_MAXSUBARRAYS	network/orion_old/SIM_power_test.h	73;"	d
PARM_MAXSUBARRAYS	network/orion_old/parm_technology.h	427;"	d
PARM_MD_NUM_FREGS	network/orion_old/SIM_power_test.h	206;"	d
PARM_MD_NUM_FREGS	network/orion_old/SIM_power_test.h	98;"	d
PARM_MD_NUM_FREGS	network/orion_old/parm_technology.h	448;"	d
PARM_MD_NUM_IREGS	network/orion_old/SIM_power_test.h	152;"	d
PARM_MD_NUM_IREGS	network/orion_old/SIM_power_test.h	79;"	d
PARM_MD_NUM_IREGS	network/orion_old/parm_technology.h	433;"	d
PARM_NORMALIZE_SCALE	network/orion/SIM_technology.h	53;"	d
PARM_NORMALIZE_SCALE	network/orion_old/SIM_power_test.h	107;"	d
PARM_NORMALIZE_SCALE	network/orion_old/SIM_power_test.h	233;"	d
PARM_NORMALIZE_SCALE	network/orion_old/parm_technology.h	174;"	d
PARM_POWER_STATS	network/orion/SIM_port.h	169;"	d
PARM_POWER_STATS	network/orion/SIM_port_NEC.h	169;"	d
PARM_POWER_STATS	network/orion/SIM_port_TRIPS.h	46;"	d
PARM_POWER_STATS	network/orion/SIM_port_alpha.h	47;"	d
PARM_POWER_STATS	network/orion/SIM_port_garnet.h	140;"	d
PARM_POWER_STATS	network/orion/SIM_port_ibm.h	47;"	d
PARM_POWER_STATS	network/orion/SIM_port_raw.h	46;"	d
PARM_POWER_STATS	network/orion_old/SIM_port.h	57;"	d
PARM_RUU_size	network/orion/SIM_technology.h	56;"	d
PARM_RUU_size	network/orion_old/SIM_power_test.h	111;"	d
PARM_RUU_size	network/orion_old/SIM_power_test.h	245;"	d
PARM_RUU_size	network/orion_old/parm_technology.h	461;"	d
PARM_TECH_POINT	network/orion/SIM_port.h	38;"	d
PARM_TECH_POINT	network/orion/SIM_port_NEC.h	38;"	d
PARM_TECH_POINT	network/orion/SIM_port_TRIPS.h	42;"	d
PARM_TECH_POINT	network/orion/SIM_port_alpha.h	43;"	d
PARM_TECH_POINT	network/orion/SIM_port_garnet.h	5;"	d
PARM_TECH_POINT	network/orion/SIM_port_ibm.h	43;"	d
PARM_TECH_POINT	network/orion/SIM_port_raw.h	42;"	d
PARM_TECH_POINT	network/orion_old/parm_technology.h	63;"	d
PARM_TRANSISTOR_TYPE	network/orion/SIM_port.h	39;"	d
PARM_TRANSISTOR_TYPE	network/orion/SIM_port_NEC.h	39;"	d
PARM_TRANSISTOR_TYPE	network/orion/SIM_port_TRIPS.h	43;"	d
PARM_TRANSISTOR_TYPE	network/orion/SIM_port_alpha.h	44;"	d
PARM_TRANSISTOR_TYPE	network/orion/SIM_port_garnet.h	6;"	d
PARM_TRANSISTOR_TYPE	network/orion/SIM_port_ibm.h	44;"	d
PARM_TRANSISTOR_TYPE	network/orion/SIM_port_raw.h	43;"	d
PARM_VC_per_MC	network/orion_old/SIM_port.h	79;"	d
PARM_VSINV	network/orion/SIM_technology.h	46;"	d
PARM_VSINV	network/orion_old/SIM_power_test.h	176;"	d
PARM_VSINV	network/orion_old/SIM_power_test.h	87;"	d
PARM_VSINV	network/orion_old/parm_technology.h	441;"	d
PARM_VTHCOMPINV	network/orion/SIM_technology.h	42;"	d
PARM_VTHCOMPINV	network/orion_old/SIM_power_test.h	149;"	d
PARM_VTHCOMPINV	network/orion_old/SIM_power_test.h	78;"	d
PARM_VTHCOMPINV	network/orion_old/parm_technology.h	432;"	d
PARM_VTHEVALINV	network/orion/SIM_technology.h	61;"	d
PARM_VTHEVALINV	network/orion_old/SIM_power_test.h	117;"	d
PARM_VTHEVALINV	network/orion_old/SIM_power_test.h	263;"	d
PARM_VTHEVALINV	network/orion_old/parm_technology.h	467;"	d
PARM_VTHINV100x60	network/orion/SIM_technology.h	65;"	d
PARM_VTHINV100x60	network/orion_old/SIM_power_test.h	124;"	d
PARM_VTHINV100x60	network/orion_old/SIM_power_test.h	284;"	d
PARM_VTHINV100x60	network/orion_old/parm_technology.h	474;"	d
PARM_VTHMUXDRV1	network/orion/SIM_technology.h	51;"	d
PARM_VTHMUXDRV1	network/orion_old/SIM_power_test.h	104;"	d
PARM_VTHMUXDRV1	network/orion_old/SIM_power_test.h	224;"	d
PARM_VTHMUXDRV1	network/orion_old/parm_technology.h	454;"	d
PARM_VTHMUXDRV2	network/orion/SIM_technology.h	52;"	d
PARM_VTHMUXDRV2	network/orion_old/SIM_power_test.h	106;"	d
PARM_VTHMUXDRV2	network/orion_old/SIM_power_test.h	230;"	d
PARM_VTHMUXDRV2	network/orion_old/parm_technology.h	456;"	d
PARM_VTHMUXDRV3	network/orion/SIM_technology.h	54;"	d
PARM_VTHMUXDRV3	network/orion_old/SIM_power_test.h	109;"	d
PARM_VTHMUXDRV3	network/orion_old/SIM_power_test.h	239;"	d
PARM_VTHMUXDRV3	network/orion_old/parm_technology.h	459;"	d
PARM_VTHNAND60x90	network/orion/SIM_technology.h	48;"	d
PARM_VTHNAND60x90	network/orion_old/SIM_power_test.h	194;"	d
PARM_VTHNAND60x90	network/orion_old/SIM_power_test.h	94;"	d
PARM_VTHNAND60x90	network/orion_old/parm_technology.h	445;"	d
PARM_VTHNOR12x4x1	network/orion/SIM_technology.h	57;"	d
PARM_VTHNOR12x4x1	network/orion_old/SIM_power_test.h	113;"	d
PARM_VTHNOR12x4x1	network/orion_old/SIM_power_test.h	251;"	d
PARM_VTHNOR12x4x1	network/orion_old/parm_technology.h	463;"	d
PARM_VTHNOR12x4x2	network/orion/SIM_technology.h	58;"	d
PARM_VTHNOR12x4x2	network/orion_old/SIM_power_test.h	114;"	d
PARM_VTHNOR12x4x2	network/orion_old/SIM_power_test.h	254;"	d
PARM_VTHNOR12x4x2	network/orion_old/parm_technology.h	464;"	d
PARM_VTHNOR12x4x3	network/orion/SIM_technology.h	60;"	d
PARM_VTHNOR12x4x3	network/orion_old/SIM_power_test.h	116;"	d
PARM_VTHNOR12x4x3	network/orion_old/SIM_power_test.h	260;"	d
PARM_VTHNOR12x4x3	network/orion_old/parm_technology.h	466;"	d
PARM_VTHNOR12x4x4	network/orion/SIM_technology.h	62;"	d
PARM_VTHNOR12x4x4	network/orion_old/SIM_power_test.h	119;"	d
PARM_VTHNOR12x4x4	network/orion_old/SIM_power_test.h	269;"	d
PARM_VTHNOR12x4x4	network/orion_old/parm_technology.h	469;"	d
PARM_VTHOUTDRINV	network/orion/SIM_technology.h	59;"	d
PARM_VTHOUTDRINV	network/orion_old/SIM_power_test.h	115;"	d
PARM_VTHOUTDRINV	network/orion_old/SIM_power_test.h	257;"	d
PARM_VTHOUTDRINV	network/orion_old/parm_technology.h	465;"	d
PARM_VTHOUTDRIVE	network/orion/SIM_technology.h	50;"	d
PARM_VTHOUTDRIVE	network/orion_old/SIM_power_test.h	102;"	d
PARM_VTHOUTDRIVE	network/orion_old/SIM_power_test.h	218;"	d
PARM_VTHOUTDRIVE	network/orion_old/parm_technology.h	452;"	d
PARM_VTHOUTDRNAND	network/orion/SIM_technology.h	64;"	d
PARM_VTHOUTDRNAND	network/orion_old/SIM_power_test.h	123;"	d
PARM_VTHOUTDRNAND	network/orion_old/SIM_power_test.h	281;"	d
PARM_VTHOUTDRNAND	network/orion_old/parm_technology.h	473;"	d
PARM_VTHOUTDRNOR	network/orion/SIM_technology.h	41;"	d
PARM_VTHOUTDRNOR	network/orion_old/SIM_power_test.h	143;"	d
PARM_VTHOUTDRNOR	network/orion_old/SIM_power_test.h	76;"	d
PARM_VTHOUTDRNOR	network/orion_old/parm_technology.h	430;"	d
PARM_VTHSENSEEXTDRV	network/orion_old/SIM_power_test.h	140;"	d
PARM_VTHSENSEEXTDRV	network/orion_old/SIM_power_test.h	75;"	d
PARM_VTHSENSEEXTDRV	network/orion_old/parm_technology.h	429;"	d
PARM_Vdd	network/orion/SIM_port.h	40;"	d
PARM_Vdd	network/orion/SIM_port_NEC.h	40;"	d
PARM_Vdd	network/orion/SIM_port_TRIPS.h	41;"	d
PARM_Vdd	network/orion/SIM_port_alpha.h	42;"	d
PARM_Vdd	network/orion/SIM_port_garnet.h	7;"	d
PARM_Vdd	network/orion/SIM_port_ibm.h	42;"	d
PARM_Vdd	network/orion/SIM_port_raw.h	41;"	d
PARM_amp_Idsat	network/orion/SIM_technology.h	45;"	d
PARM_amp_Idsat	network/orion_old/SIM_power_test.h	170;"	d
PARM_amp_Idsat	network/orion_old/SIM_power_test.h	85;"	d
PARM_amp_Idsat	network/orion_old/parm_technology.h	439;"	d
PARM_amp_model	network/orion/SIM_port.h	128;"	d
PARM_amp_model	network/orion/SIM_port_NEC.h	128;"	d
PARM_amp_model	network/orion/SIM_port_TRIPS.h	141;"	d
PARM_amp_model	network/orion/SIM_port_alpha.h	144;"	d
PARM_amp_model	network/orion/SIM_port_garnet.h	95;"	d
PARM_amp_model	network/orion/SIM_port_ibm.h	146;"	d
PARM_amp_model	network/orion/SIM_port_raw.h	142;"	d
PARM_amp_model	network/orion_old/SIM_port.h	185;"	d
PARM_bitline_model	network/orion/SIM_port.h	116;"	d
PARM_bitline_model	network/orion/SIM_port_NEC.h	116;"	d
PARM_bitline_model	network/orion/SIM_port_TRIPS.h	129;"	d
PARM_bitline_model	network/orion/SIM_port_alpha.h	132;"	d
PARM_bitline_model	network/orion/SIM_port_garnet.h	83;"	d
PARM_bitline_model	network/orion/SIM_port_ibm.h	134;"	d
PARM_bitline_model	network/orion/SIM_port_raw.h	130;"	d
PARM_bitline_model	network/orion_old/SIM_port.h	173;"	d
PARM_bitline_pre_model	network/orion/SIM_port.h	129;"	d
PARM_bitline_pre_model	network/orion/SIM_port_NEC.h	129;"	d
PARM_bitline_pre_model	network/orion/SIM_port_TRIPS.h	142;"	d
PARM_bitline_pre_model	network/orion/SIM_port_alpha.h	145;"	d
PARM_bitline_pre_model	network/orion/SIM_port_garnet.h	96;"	d
PARM_bitline_pre_model	network/orion/SIM_port_ibm.h	147;"	d
PARM_bitline_pre_model	network/orion/SIM_port_raw.h	143;"	d
PARM_bitline_pre_model	network/orion_old/SIM_port.h	186;"	d
PARM_buffering_scheme	network/orion/SIM_port.h	151;"	d
PARM_buffering_scheme	network/orion/SIM_port_NEC.h	151;"	d
PARM_buffering_scheme	network/orion/SIM_port_garnet.h	118;"	d
PARM_cache_class	network/orion/SIM_port.h	58;"	d
PARM_cache_class	network/orion/SIM_port_NEC.h	58;"	d
PARM_cache_class	network/orion/SIM_port_TRIPS.h	73;"	d
PARM_cache_class	network/orion/SIM_port_alpha.h	75;"	d
PARM_cache_class	network/orion/SIM_port_garnet.h	25;"	d
PARM_cache_class	network/orion/SIM_port_ibm.h	75;"	d
PARM_cache_class	network/orion/SIM_port_raw.h	73;"	d
PARM_cache_class	network/orion_old/SIM_port.h	117;"	d
PARM_cache_in_buf	network/orion/SIM_port.h	88;"	d
PARM_cache_in_buf	network/orion/SIM_port_NEC.h	88;"	d
PARM_cache_in_buf	network/orion/SIM_port_TRIPS.h	102;"	d
PARM_cache_in_buf	network/orion/SIM_port_alpha.h	105;"	d
PARM_cache_in_buf	network/orion/SIM_port_garnet.h	55;"	d
PARM_cache_in_buf	network/orion/SIM_port_ibm.h	106;"	d
PARM_cache_in_buf	network/orion/SIM_port_raw.h	103;"	d
PARM_cache_in_buf	network/orion_old/SIM_port.h	146;"	d
PARM_cache_in_buf_rport	network/orion/SIM_port.h	90;"	d
PARM_cache_in_buf_rport	network/orion/SIM_port_NEC.h	90;"	d
PARM_cache_in_buf_rport	network/orion/SIM_port_TRIPS.h	104;"	d
PARM_cache_in_buf_rport	network/orion/SIM_port_alpha.h	107;"	d
PARM_cache_in_buf_rport	network/orion/SIM_port_garnet.h	57;"	d
PARM_cache_in_buf_rport	network/orion/SIM_port_ibm.h	108;"	d
PARM_cache_in_buf_rport	network/orion/SIM_port_raw.h	105;"	d
PARM_cache_in_buf_rport	network/orion_old/SIM_port.h	148;"	d
PARM_cache_in_buf_set	network/orion/SIM_port.h	89;"	d
PARM_cache_in_buf_set	network/orion/SIM_port_NEC.h	89;"	d
PARM_cache_in_buf_set	network/orion/SIM_port_TRIPS.h	103;"	d
PARM_cache_in_buf_set	network/orion/SIM_port_alpha.h	106;"	d
PARM_cache_in_buf_set	network/orion/SIM_port_garnet.h	56;"	d
PARM_cache_in_buf_set	network/orion/SIM_port_ibm.h	107;"	d
PARM_cache_in_buf_set	network/orion/SIM_port_raw.h	104;"	d
PARM_cache_in_buf_set	network/orion_old/SIM_port.h	147;"	d
PARM_cache_in_port	network/orion/SIM_port.h	46;"	d
PARM_cache_in_port	network/orion/SIM_port_NEC.h	46;"	d
PARM_cache_in_port	network/orion/SIM_port_TRIPS.h	61;"	d
PARM_cache_in_port	network/orion/SIM_port_alpha.h	62;"	d
PARM_cache_in_port	network/orion/SIM_port_garnet.h	13;"	d
PARM_cache_in_port	network/orion/SIM_port_ibm.h	62;"	d
PARM_cache_in_port	network/orion/SIM_port_raw.h	61;"	d
PARM_cache_in_port	network/orion_old/SIM_port.h	105;"	d
PARM_cache_out_port	network/orion/SIM_port.h	50;"	d
PARM_cache_out_port	network/orion/SIM_port_NEC.h	50;"	d
PARM_cache_out_port	network/orion/SIM_port_TRIPS.h	65;"	d
PARM_cache_out_port	network/orion/SIM_port_alpha.h	66;"	d
PARM_cache_out_port	network/orion/SIM_port_garnet.h	17;"	d
PARM_cache_out_port	network/orion/SIM_port_ibm.h	66;"	d
PARM_cache_out_port	network/orion/SIM_port_raw.h	65;"	d
PARM_cache_out_port	network/orion_old/SIM_port.h	109;"	d
PARM_cbuf_rport	network/orion/SIM_port.h	109;"	d
PARM_cbuf_rport	network/orion/SIM_port_NEC.h	109;"	d
PARM_cbuf_rport	network/orion/SIM_port_TRIPS.h	122;"	d
PARM_cbuf_rport	network/orion/SIM_port_alpha.h	125;"	d
PARM_cbuf_rport	network/orion/SIM_port_garnet.h	76;"	d
PARM_cbuf_rport	network/orion/SIM_port_ibm.h	127;"	d
PARM_cbuf_rport	network/orion/SIM_port_raw.h	123;"	d
PARM_cbuf_rport	network/orion_old/SIM_port.h	166;"	d
PARM_cbuf_set	network/orion/SIM_port.h	108;"	d
PARM_cbuf_set	network/orion/SIM_port_NEC.h	108;"	d
PARM_cbuf_set	network/orion/SIM_port_TRIPS.h	121;"	d
PARM_cbuf_set	network/orion/SIM_port_alpha.h	124;"	d
PARM_cbuf_set	network/orion/SIM_port_garnet.h	75;"	d
PARM_cbuf_set	network/orion/SIM_port_ibm.h	126;"	d
PARM_cbuf_set	network/orion/SIM_port_raw.h	122;"	d
PARM_cbuf_set	network/orion_old/SIM_port.h	165;"	d
PARM_cbuf_width	network/orion/SIM_port.h	111;"	d
PARM_cbuf_width	network/orion/SIM_port_NEC.h	111;"	d
PARM_cbuf_width	network/orion/SIM_port_TRIPS.h	124;"	d
PARM_cbuf_width	network/orion/SIM_port_alpha.h	127;"	d
PARM_cbuf_width	network/orion/SIM_port_garnet.h	78;"	d
PARM_cbuf_width	network/orion/SIM_port_ibm.h	129;"	d
PARM_cbuf_width	network/orion/SIM_port_raw.h	125;"	d
PARM_cbuf_width	network/orion_old/SIM_port.h	168;"	d
PARM_cbuf_wport	network/orion/SIM_port.h	110;"	d
PARM_cbuf_wport	network/orion/SIM_port_NEC.h	110;"	d
PARM_cbuf_wport	network/orion/SIM_port_TRIPS.h	123;"	d
PARM_cbuf_wport	network/orion/SIM_port_alpha.h	126;"	d
PARM_cbuf_wport	network/orion/SIM_port_garnet.h	77;"	d
PARM_cbuf_wport	network/orion/SIM_port_ibm.h	128;"	d
PARM_cbuf_wport	network/orion/SIM_port_raw.h	124;"	d
PARM_cbuf_wport	network/orion_old/SIM_port.h	167;"	d
PARM_central_buf	network/orion/SIM_port.h	107;"	d
PARM_central_buf	network/orion/SIM_port_NEC.h	107;"	d
PARM_central_buf	network/orion/SIM_port_TRIPS.h	120;"	d
PARM_central_buf	network/orion/SIM_port_alpha.h	123;"	d
PARM_central_buf	network/orion/SIM_port_garnet.h	74;"	d
PARM_central_buf	network/orion/SIM_port_ibm.h	124;"	d
PARM_central_buf	network/orion/SIM_port_raw.h	121;"	d
PARM_central_buf	network/orion_old/SIM_port.h	164;"	d
PARM_col_dec_model	network/orion/SIM_port.h	120;"	d
PARM_col_dec_model	network/orion/SIM_port_NEC.h	120;"	d
PARM_col_dec_model	network/orion/SIM_port_TRIPS.h	133;"	d
PARM_col_dec_model	network/orion/SIM_port_alpha.h	136;"	d
PARM_col_dec_model	network/orion/SIM_port_garnet.h	87;"	d
PARM_col_dec_model	network/orion/SIM_port_ibm.h	138;"	d
PARM_col_dec_model	network/orion/SIM_port_raw.h	134;"	d
PARM_col_dec_model	network/orion_old/SIM_port.h	177;"	d
PARM_col_dec_pre_model	network/orion/SIM_port.h	121;"	d
PARM_col_dec_pre_model	network/orion/SIM_port_NEC.h	121;"	d
PARM_col_dec_pre_model	network/orion/SIM_port_TRIPS.h	134;"	d
PARM_col_dec_pre_model	network/orion/SIM_port_alpha.h	137;"	d
PARM_col_dec_pre_model	network/orion/SIM_port_garnet.h	88;"	d
PARM_col_dec_pre_model	network/orion/SIM_port_ibm.h	139;"	d
PARM_col_dec_pre_model	network/orion/SIM_port_raw.h	135;"	d
PARM_col_dec_pre_model	network/orion_old/SIM_port.h	178;"	d
PARM_connect_type	network/orion/SIM_port.h	71;"	d
PARM_connect_type	network/orion/SIM_port_NEC.h	71;"	d
PARM_connect_type	network/orion/SIM_port_TRIPS.h	86;"	d
PARM_connect_type	network/orion/SIM_port_alpha.h	87;"	d
PARM_connect_type	network/orion/SIM_port_garnet.h	38;"	d
PARM_connect_type	network/orion/SIM_port_ibm.h	88;"	d
PARM_connect_type	network/orion/SIM_port_raw.h	86;"	d
PARM_connect_type	network/orion_old/SIM_port.h	130;"	d
PARM_crossbar_in_len	network/orion/SIM_port.h	73;"	d
PARM_crossbar_in_len	network/orion/SIM_port_NEC.h	73;"	d
PARM_crossbar_in_len	network/orion/SIM_port_TRIPS.h	88;"	d
PARM_crossbar_in_len	network/orion/SIM_port_alpha.h	90;"	d
PARM_crossbar_in_len	network/orion/SIM_port_garnet.h	40;"	d
PARM_crossbar_in_len	network/orion/SIM_port_ibm.h	90;"	d
PARM_crossbar_in_len	network/orion/SIM_port_raw.h	88;"	d
PARM_crossbar_in_len	network/orion_old/SIM_port.h	132;"	d
PARM_crossbar_model	network/orion/SIM_port.h	69;"	d
PARM_crossbar_model	network/orion/SIM_port_NEC.h	69;"	d
PARM_crossbar_model	network/orion/SIM_port_TRIPS.h	84;"	d
PARM_crossbar_model	network/orion/SIM_port_alpha.h	85;"	d
PARM_crossbar_model	network/orion/SIM_port_garnet.h	36;"	d
PARM_crossbar_model	network/orion/SIM_port_ibm.h	86;"	d
PARM_crossbar_model	network/orion/SIM_port_raw.h	84;"	d
PARM_crossbar_model	network/orion_old/SIM_port.h	128;"	d
PARM_crossbar_out_len	network/orion/SIM_port.h	74;"	d
PARM_crossbar_out_len	network/orion/SIM_port_NEC.h	74;"	d
PARM_crossbar_out_len	network/orion/SIM_port_TRIPS.h	89;"	d
PARM_crossbar_out_len	network/orion/SIM_port_alpha.h	91;"	d
PARM_crossbar_out_len	network/orion/SIM_port_garnet.h	41;"	d
PARM_crossbar_out_len	network/orion/SIM_port_ibm.h	91;"	d
PARM_crossbar_out_len	network/orion/SIM_port_raw.h	89;"	d
PARM_crossbar_out_len	network/orion_old/SIM_port.h	133;"	d
PARM_crossover_scaling	network/orion_old/SIM_power_test.h	118;"	d
PARM_crossover_scaling	network/orion_old/SIM_power_test.h	266;"	d
PARM_crossover_scaling	network/orion_old/parm_technology.h	468;"	d
PARM_crsbar_degree	network/orion/SIM_port.h	70;"	d
PARM_crsbar_degree	network/orion/SIM_port_NEC.h	70;"	d
PARM_crsbar_degree	network/orion/SIM_port_TRIPS.h	85;"	d
PARM_crsbar_degree	network/orion/SIM_port_alpha.h	86;"	d
PARM_crsbar_degree	network/orion/SIM_port_garnet.h	37;"	d
PARM_crsbar_degree	network/orion/SIM_port_ibm.h	87;"	d
PARM_crsbar_degree	network/orion/SIM_port_raw.h	85;"	d
PARM_crsbar_degree	network/orion_old/SIM_port.h	129;"	d
PARM_data_end	network/orion/SIM_port.h	127;"	d
PARM_data_end	network/orion/SIM_port_NEC.h	127;"	d
PARM_data_end	network/orion/SIM_port_TRIPS.h	140;"	d
PARM_data_end	network/orion/SIM_port_alpha.h	143;"	d
PARM_data_end	network/orion/SIM_port_garnet.h	94;"	d
PARM_data_end	network/orion/SIM_port_ibm.h	145;"	d
PARM_data_end	network/orion/SIM_port_raw.h	141;"	d
PARM_data_end	network/orion_old/SIM_port.h	184;"	d
PARM_data_width	network/orion_old/SIM_power_test.h	89;"	d
PARM_die_length	network/orion_old/SIM_power_test.h	155;"	d
PARM_die_length	network/orion_old/SIM_power_test.h	80;"	d
PARM_die_length	network/orion_old/parm_technology.h	434;"	d
PARM_exp_in_seg	network/orion/SIM_port.h	79;"	d
PARM_exp_in_seg	network/orion/SIM_port_NEC.h	79;"	d
PARM_exp_in_seg	network/orion/SIM_port_TRIPS.h	94;"	d
PARM_exp_in_seg	network/orion/SIM_port_alpha.h	96;"	d
PARM_exp_in_seg	network/orion/SIM_port_garnet.h	46;"	d
PARM_exp_in_seg	network/orion/SIM_port_ibm.h	96;"	d
PARM_exp_in_seg	network/orion/SIM_port_raw.h	94;"	d
PARM_exp_in_seg	network/orion_old/SIM_port.h	138;"	d
PARM_exp_out_seg	network/orion/SIM_port.h	80;"	d
PARM_exp_out_seg	network/orion/SIM_port_NEC.h	80;"	d
PARM_exp_out_seg	network/orion/SIM_port_TRIPS.h	95;"	d
PARM_exp_out_seg	network/orion/SIM_port_alpha.h	97;"	d
PARM_exp_out_seg	network/orion/SIM_port_garnet.h	47;"	d
PARM_exp_out_seg	network/orion/SIM_port_ibm.h	97;"	d
PARM_exp_out_seg	network/orion/SIM_port_raw.h	95;"	d
PARM_exp_out_seg	network/orion_old/SIM_port.h	139;"	d
PARM_exp_xb_model	network/orion/SIM_port.h	78;"	d
PARM_exp_xb_model	network/orion/SIM_port_NEC.h	78;"	d
PARM_exp_xb_model	network/orion/SIM_port_TRIPS.h	93;"	d
PARM_exp_xb_model	network/orion/SIM_port_alpha.h	95;"	d
PARM_exp_xb_model	network/orion/SIM_port_garnet.h	45;"	d
PARM_exp_xb_model	network/orion/SIM_port_ibm.h	95;"	d
PARM_exp_xb_model	network/orion/SIM_port_raw.h	93;"	d
PARM_exp_xb_model	network/orion_old/SIM_port.h	137;"	d
PARM_flit_width	network/orion/SIM_port.h	53;"	d
PARM_flit_width	network/orion/SIM_port_NEC.h	53;"	d
PARM_flit_width	network/orion/SIM_port_TRIPS.h	68;"	d
PARM_flit_width	network/orion/SIM_port_alpha.h	70;"	d
PARM_flit_width	network/orion/SIM_port_garnet.h	20;"	d
PARM_flit_width	network/orion/SIM_port_ibm.h	70;"	d
PARM_flit_width	network/orion/SIM_port_raw.h	68;"	d
PARM_flit_width	network/orion_old/SIM_port.h	112;"	d
PARM_in_arb_ff_model	network/orion/SIM_port_TRIPS.h	149;"	d
PARM_in_arb_ff_model	network/orion/SIM_port_alpha.h	152;"	d
PARM_in_arb_ff_model	network/orion/SIM_port_ibm.h	154;"	d
PARM_in_arb_ff_model	network/orion/SIM_port_raw.h	150;"	d
PARM_in_arb_ff_model	network/orion_old/SIM_port.h	193;"	d
PARM_in_arb_model	network/orion/SIM_port_TRIPS.h	148;"	d
PARM_in_arb_model	network/orion/SIM_port_alpha.h	151;"	d
PARM_in_arb_model	network/orion/SIM_port_ibm.h	153;"	d
PARM_in_arb_model	network/orion/SIM_port_raw.h	149;"	d
PARM_in_arb_model	network/orion_old/SIM_port.h	192;"	d
PARM_in_buf	network/orion/SIM_port.h	83;"	d
PARM_in_buf	network/orion/SIM_port_NEC.h	83;"	d
PARM_in_buf	network/orion/SIM_port_TRIPS.h	98;"	d
PARM_in_buf	network/orion/SIM_port_alpha.h	101;"	d
PARM_in_buf	network/orion/SIM_port_garnet.h	50;"	d
PARM_in_buf	network/orion/SIM_port_ibm.h	101;"	d
PARM_in_buf	network/orion/SIM_port_raw.h	99;"	d
PARM_in_buf	network/orion_old/SIM_port.h	142;"	d
PARM_in_buf_rport	network/orion/SIM_port.h	85;"	d
PARM_in_buf_rport	network/orion/SIM_port_NEC.h	85;"	d
PARM_in_buf_rport	network/orion/SIM_port_TRIPS.h	100;"	d
PARM_in_buf_rport	network/orion/SIM_port_alpha.h	103;"	d
PARM_in_buf_rport	network/orion/SIM_port_garnet.h	52;"	d
PARM_in_buf_rport	network/orion/SIM_port_ibm.h	104;"	d
PARM_in_buf_rport	network/orion/SIM_port_raw.h	101;"	d
PARM_in_buf_rport	network/orion_old/SIM_port.h	144;"	d
PARM_in_buf_set	network/orion/SIM_port.h	84;"	d
PARM_in_buf_set	network/orion/SIM_port_NEC.h	84;"	d
PARM_in_buf_set	network/orion/SIM_port_TRIPS.h	99;"	d
PARM_in_buf_set	network/orion/SIM_port_alpha.h	102;"	d
PARM_in_buf_set	network/orion/SIM_port_garnet.h	51;"	d
PARM_in_buf_set	network/orion/SIM_port_ibm.h	103;"	d
PARM_in_buf_set	network/orion/SIM_port_raw.h	100;"	d
PARM_in_buf_set	network/orion_old/SIM_port.h	143;"	d
PARM_in_buffer_type	network/orion/SIM_port.h	86;"	d
PARM_in_buffer_type	network/orion/SIM_port_NEC.h	86;"	d
PARM_in_buffer_type	network/orion/SIM_port_garnet.h	53;"	d
PARM_in_port	network/orion/SIM_port.h	45;"	d
PARM_in_port	network/orion/SIM_port_NEC.h	45;"	d
PARM_in_port	network/orion/SIM_port_TRIPS.h	60;"	d
PARM_in_port	network/orion/SIM_port_alpha.h	61;"	d
PARM_in_port	network/orion/SIM_port_garnet.h	12;"	d
PARM_in_port	network/orion/SIM_port_ibm.h	61;"	d
PARM_in_port	network/orion/SIM_port_raw.h	60;"	d
PARM_in_port	network/orion_old/SIM_port.h	104;"	d
PARM_in_share_buf	network/orion/SIM_port.h	62;"	d
PARM_in_share_buf	network/orion/SIM_port_NEC.h	62;"	d
PARM_in_share_buf	network/orion/SIM_port_TRIPS.h	77;"	d
PARM_in_share_buf	network/orion/SIM_port_alpha.h	79;"	d
PARM_in_share_buf	network/orion/SIM_port_garnet.h	29;"	d
PARM_in_share_buf	network/orion/SIM_port_ibm.h	79;"	d
PARM_in_share_buf	network/orion/SIM_port_raw.h	77;"	d
PARM_in_share_buf	network/orion_old/SIM_port.h	121;"	d
PARM_in_share_switch	network/orion/SIM_port.h	65;"	d
PARM_in_share_switch	network/orion/SIM_port_NEC.h	65;"	d
PARM_in_share_switch	network/orion/SIM_port_TRIPS.h	80;"	d
PARM_in_share_switch	network/orion/SIM_port_alpha.h	81;"	d
PARM_in_share_switch	network/orion/SIM_port_garnet.h	32;"	d
PARM_in_share_switch	network/orion/SIM_port_ibm.h	82;"	d
PARM_in_share_switch	network/orion/SIM_port_raw.h	80;"	d
PARM_in_share_switch	network/orion_old/SIM_port.h	124;"	d
PARM_inst_length	network/orion_old/SIM_power_test.h	105;"	d
PARM_inst_length	network/orion_old/SIM_power_test.h	227;"	d
PARM_inst_length	network/orion_old/parm_technology.h	455;"	d
PARM_io_class	network/orion/SIM_port.h	60;"	d
PARM_io_class	network/orion/SIM_port_NEC.h	60;"	d
PARM_io_class	network/orion/SIM_port_TRIPS.h	75;"	d
PARM_io_class	network/orion/SIM_port_alpha.h	77;"	d
PARM_io_class	network/orion/SIM_port_garnet.h	27;"	d
PARM_io_class	network/orion/SIM_port_ibm.h	77;"	d
PARM_io_class	network/orion/SIM_port_raw.h	75;"	d
PARM_io_class	network/orion_old/SIM_port.h	119;"	d
PARM_io_in_buf	network/orion/SIM_port.h	96;"	d
PARM_io_in_buf	network/orion/SIM_port_NEC.h	96;"	d
PARM_io_in_buf	network/orion/SIM_port_TRIPS.h	110;"	d
PARM_io_in_buf	network/orion/SIM_port_alpha.h	113;"	d
PARM_io_in_buf	network/orion/SIM_port_garnet.h	63;"	d
PARM_io_in_buf	network/orion/SIM_port_ibm.h	114;"	d
PARM_io_in_buf	network/orion/SIM_port_raw.h	111;"	d
PARM_io_in_buf	network/orion_old/SIM_port.h	154;"	d
PARM_io_in_buf_rport	network/orion/SIM_port.h	98;"	d
PARM_io_in_buf_rport	network/orion/SIM_port_NEC.h	98;"	d
PARM_io_in_buf_rport	network/orion/SIM_port_TRIPS.h	112;"	d
PARM_io_in_buf_rport	network/orion/SIM_port_alpha.h	115;"	d
PARM_io_in_buf_rport	network/orion/SIM_port_garnet.h	65;"	d
PARM_io_in_buf_rport	network/orion/SIM_port_ibm.h	116;"	d
PARM_io_in_buf_rport	network/orion/SIM_port_raw.h	113;"	d
PARM_io_in_buf_rport	network/orion_old/SIM_port.h	156;"	d
PARM_io_in_buf_set	network/orion/SIM_port.h	97;"	d
PARM_io_in_buf_set	network/orion/SIM_port_NEC.h	97;"	d
PARM_io_in_buf_set	network/orion/SIM_port_TRIPS.h	111;"	d
PARM_io_in_buf_set	network/orion/SIM_port_alpha.h	114;"	d
PARM_io_in_buf_set	network/orion/SIM_port_garnet.h	64;"	d
PARM_io_in_buf_set	network/orion/SIM_port_ibm.h	115;"	d
PARM_io_in_buf_set	network/orion/SIM_port_raw.h	112;"	d
PARM_io_in_buf_set	network/orion_old/SIM_port.h	155;"	d
PARM_io_in_port	network/orion/SIM_port.h	48;"	d
PARM_io_in_port	network/orion/SIM_port_NEC.h	48;"	d
PARM_io_in_port	network/orion/SIM_port_TRIPS.h	63;"	d
PARM_io_in_port	network/orion/SIM_port_alpha.h	64;"	d
PARM_io_in_port	network/orion/SIM_port_garnet.h	15;"	d
PARM_io_in_port	network/orion/SIM_port_ibm.h	64;"	d
PARM_io_in_port	network/orion/SIM_port_raw.h	63;"	d
PARM_io_in_port	network/orion_old/SIM_port.h	107;"	d
PARM_io_out_port	network/orion/SIM_port.h	52;"	d
PARM_io_out_port	network/orion/SIM_port_NEC.h	52;"	d
PARM_io_out_port	network/orion/SIM_port_TRIPS.h	67;"	d
PARM_io_out_port	network/orion/SIM_port_alpha.h	68;"	d
PARM_io_out_port	network/orion/SIM_port_garnet.h	19;"	d
PARM_io_out_port	network/orion/SIM_port_ibm.h	68;"	d
PARM_io_out_port	network/orion/SIM_port_raw.h	67;"	d
PARM_io_out_port	network/orion_old/SIM_port.h	111;"	d
PARM_link_length	network/orion_old/parm_technology.h	375;"	d
PARM_mc_class	network/orion/SIM_port.h	59;"	d
PARM_mc_class	network/orion/SIM_port_NEC.h	59;"	d
PARM_mc_class	network/orion/SIM_port_TRIPS.h	74;"	d
PARM_mc_class	network/orion/SIM_port_alpha.h	76;"	d
PARM_mc_class	network/orion/SIM_port_garnet.h	26;"	d
PARM_mc_class	network/orion/SIM_port_ibm.h	76;"	d
PARM_mc_class	network/orion/SIM_port_raw.h	74;"	d
PARM_mc_class	network/orion_old/SIM_port.h	118;"	d
PARM_mc_in_buf	network/orion/SIM_port.h	92;"	d
PARM_mc_in_buf	network/orion/SIM_port_NEC.h	92;"	d
PARM_mc_in_buf	network/orion/SIM_port_TRIPS.h	106;"	d
PARM_mc_in_buf	network/orion/SIM_port_alpha.h	109;"	d
PARM_mc_in_buf	network/orion/SIM_port_garnet.h	59;"	d
PARM_mc_in_buf	network/orion/SIM_port_ibm.h	110;"	d
PARM_mc_in_buf	network/orion/SIM_port_raw.h	107;"	d
PARM_mc_in_buf	network/orion_old/SIM_port.h	150;"	d
PARM_mc_in_buf_rport	network/orion/SIM_port.h	94;"	d
PARM_mc_in_buf_rport	network/orion/SIM_port_NEC.h	94;"	d
PARM_mc_in_buf_rport	network/orion/SIM_port_TRIPS.h	108;"	d
PARM_mc_in_buf_rport	network/orion/SIM_port_alpha.h	111;"	d
PARM_mc_in_buf_rport	network/orion/SIM_port_garnet.h	61;"	d
PARM_mc_in_buf_rport	network/orion/SIM_port_ibm.h	112;"	d
PARM_mc_in_buf_rport	network/orion/SIM_port_raw.h	109;"	d
PARM_mc_in_buf_rport	network/orion_old/SIM_port.h	152;"	d
PARM_mc_in_buf_set	network/orion/SIM_port.h	93;"	d
PARM_mc_in_buf_set	network/orion/SIM_port_NEC.h	93;"	d
PARM_mc_in_buf_set	network/orion/SIM_port_TRIPS.h	107;"	d
PARM_mc_in_buf_set	network/orion/SIM_port_alpha.h	110;"	d
PARM_mc_in_buf_set	network/orion/SIM_port_garnet.h	60;"	d
PARM_mc_in_buf_set	network/orion/SIM_port_ibm.h	111;"	d
PARM_mc_in_buf_set	network/orion/SIM_port_raw.h	108;"	d
PARM_mc_in_buf_set	network/orion_old/SIM_port.h	151;"	d
PARM_mc_in_port	network/orion/SIM_port.h	47;"	d
PARM_mc_in_port	network/orion/SIM_port_NEC.h	47;"	d
PARM_mc_in_port	network/orion/SIM_port_TRIPS.h	62;"	d
PARM_mc_in_port	network/orion/SIM_port_alpha.h	63;"	d
PARM_mc_in_port	network/orion/SIM_port_garnet.h	14;"	d
PARM_mc_in_port	network/orion/SIM_port_ibm.h	63;"	d
PARM_mc_in_port	network/orion/SIM_port_raw.h	62;"	d
PARM_mc_in_port	network/orion_old/SIM_port.h	106;"	d
PARM_mc_out_port	network/orion/SIM_port.h	51;"	d
PARM_mc_out_port	network/orion/SIM_port_NEC.h	51;"	d
PARM_mc_out_port	network/orion/SIM_port_TRIPS.h	66;"	d
PARM_mc_out_port	network/orion/SIM_port_alpha.h	67;"	d
PARM_mc_out_port	network/orion/SIM_port_garnet.h	18;"	d
PARM_mc_out_port	network/orion/SIM_port_ibm.h	67;"	d
PARM_mc_out_port	network/orion/SIM_port_raw.h	66;"	d
PARM_mc_out_port	network/orion_old/SIM_port.h	110;"	d
PARM_mem_model	network/orion/SIM_port.h	117;"	d
PARM_mem_model	network/orion/SIM_port_NEC.h	117;"	d
PARM_mem_model	network/orion/SIM_port_TRIPS.h	130;"	d
PARM_mem_model	network/orion/SIM_port_alpha.h	133;"	d
PARM_mem_model	network/orion/SIM_port_garnet.h	84;"	d
PARM_mem_model	network/orion/SIM_port_ibm.h	135;"	d
PARM_mem_model	network/orion/SIM_port_raw.h	131;"	d
PARM_mem_model	network/orion_old/SIM_port.h	174;"	d
PARM_mux_model	network/orion/SIM_port.h	122;"	d
PARM_mux_model	network/orion/SIM_port_NEC.h	122;"	d
PARM_mux_model	network/orion/SIM_port_TRIPS.h	135;"	d
PARM_mux_model	network/orion/SIM_port_alpha.h	138;"	d
PARM_mux_model	network/orion/SIM_port_garnet.h	89;"	d
PARM_mux_model	network/orion/SIM_port_ibm.h	140;"	d
PARM_mux_model	network/orion/SIM_port_raw.h	136;"	d
PARM_mux_model	network/orion_old/SIM_port.h	179;"	d
PARM_n_regs	network/orion/SIM_port.h	162;"	d
PARM_n_regs	network/orion/SIM_port_NEC.h	162;"	d
PARM_n_regs	network/orion/SIM_port_TRIPS.h	51;"	d
PARM_n_regs	network/orion/SIM_port_alpha.h	52;"	d
PARM_n_regs	network/orion/SIM_port_garnet.h	133;"	d
PARM_n_regs	network/orion/SIM_port_ibm.h	52;"	d
PARM_n_regs	network/orion/SIM_port_raw.h	51;"	d
PARM_n_regs	network/orion_old/SIM_port.h	62;"	d
PARM_ndbl	network/orion/SIM_port.h	166;"	d
PARM_ndbl	network/orion/SIM_port_NEC.h	166;"	d
PARM_ndbl	network/orion/SIM_port_TRIPS.h	55;"	d
PARM_ndbl	network/orion/SIM_port_alpha.h	56;"	d
PARM_ndbl	network/orion/SIM_port_garnet.h	137;"	d
PARM_ndbl	network/orion/SIM_port_ibm.h	56;"	d
PARM_ndbl	network/orion/SIM_port_raw.h	55;"	d
PARM_ndbl	network/orion_old/SIM_port.h	66;"	d
PARM_ndwl	network/orion/SIM_port.h	165;"	d
PARM_ndwl	network/orion/SIM_port_NEC.h	165;"	d
PARM_ndwl	network/orion/SIM_port_TRIPS.h	54;"	d
PARM_ndwl	network/orion/SIM_port_alpha.h	55;"	d
PARM_ndwl	network/orion/SIM_port_garnet.h	136;"	d
PARM_ndwl	network/orion/SIM_port_ibm.h	55;"	d
PARM_ndwl	network/orion/SIM_port_raw.h	54;"	d
PARM_ndwl	network/orion_old/SIM_port.h	65;"	d
PARM_nspd	network/orion/SIM_port.h	167;"	d
PARM_nspd	network/orion/SIM_port_NEC.h	167;"	d
PARM_nspd	network/orion/SIM_port_TRIPS.h	56;"	d
PARM_nspd	network/orion/SIM_port_alpha.h	57;"	d
PARM_nspd	network/orion/SIM_port_garnet.h	138;"	d
PARM_nspd	network/orion/SIM_port_ibm.h	57;"	d
PARM_nspd	network/orion/SIM_port_raw.h	56;"	d
PARM_nspd	network/orion_old/SIM_port.h	67;"	d
PARM_opcode_length	network/orion_old/SIM_power_test.h	203;"	d
PARM_opcode_length	network/orion_old/SIM_power_test.h	97;"	d
PARM_opcode_length	network/orion_old/parm_technology.h	447;"	d
PARM_out_arb_ff_model	network/orion/SIM_port_TRIPS.h	151;"	d
PARM_out_arb_ff_model	network/orion/SIM_port_alpha.h	154;"	d
PARM_out_arb_ff_model	network/orion/SIM_port_ibm.h	156;"	d
PARM_out_arb_ff_model	network/orion/SIM_port_raw.h	152;"	d
PARM_out_arb_ff_model	network/orion_old/SIM_port.h	195;"	d
PARM_out_arb_model	network/orion/SIM_port_TRIPS.h	150;"	d
PARM_out_arb_model	network/orion/SIM_port_alpha.h	153;"	d
PARM_out_arb_model	network/orion/SIM_port_ibm.h	155;"	d
PARM_out_arb_model	network/orion/SIM_port_raw.h	151;"	d
PARM_out_arb_model	network/orion_old/SIM_port.h	194;"	d
PARM_out_buf	network/orion/SIM_port.h	101;"	d
PARM_out_buf	network/orion/SIM_port_NEC.h	101;"	d
PARM_out_buf	network/orion/SIM_port_TRIPS.h	115;"	d
PARM_out_buf	network/orion/SIM_port_alpha.h	118;"	d
PARM_out_buf	network/orion/SIM_port_garnet.h	68;"	d
PARM_out_buf	network/orion/SIM_port_ibm.h	119;"	d
PARM_out_buf	network/orion/SIM_port_raw.h	116;"	d
PARM_out_buf	network/orion_old/SIM_port.h	159;"	d
PARM_out_buf_set	network/orion/SIM_port.h	102;"	d
PARM_out_buf_set	network/orion/SIM_port_NEC.h	102;"	d
PARM_out_buf_set	network/orion/SIM_port_TRIPS.h	116;"	d
PARM_out_buf_set	network/orion/SIM_port_alpha.h	119;"	d
PARM_out_buf_set	network/orion/SIM_port_garnet.h	69;"	d
PARM_out_buf_set	network/orion/SIM_port_ibm.h	120;"	d
PARM_out_buf_set	network/orion/SIM_port_raw.h	117;"	d
PARM_out_buf_set	network/orion_old/SIM_port.h	160;"	d
PARM_out_buf_wport	network/orion/SIM_port.h	103;"	d
PARM_out_buf_wport	network/orion/SIM_port_NEC.h	103;"	d
PARM_out_buf_wport	network/orion/SIM_port_TRIPS.h	117;"	d
PARM_out_buf_wport	network/orion/SIM_port_alpha.h	120;"	d
PARM_out_buf_wport	network/orion/SIM_port_garnet.h	70;"	d
PARM_out_buf_wport	network/orion/SIM_port_ibm.h	121;"	d
PARM_out_buf_wport	network/orion/SIM_port_raw.h	118;"	d
PARM_out_buf_wport	network/orion_old/SIM_port.h	161;"	d
PARM_out_buffer_type	network/orion/SIM_port.h	104;"	d
PARM_out_buffer_type	network/orion/SIM_port_NEC.h	104;"	d
PARM_out_buffer_type	network/orion/SIM_port_garnet.h	71;"	d
PARM_out_port	network/orion/SIM_port.h	49;"	d
PARM_out_port	network/orion/SIM_port_NEC.h	49;"	d
PARM_out_port	network/orion/SIM_port_TRIPS.h	64;"	d
PARM_out_port	network/orion/SIM_port_alpha.h	65;"	d
PARM_out_port	network/orion/SIM_port_garnet.h	16;"	d
PARM_out_port	network/orion/SIM_port_ibm.h	65;"	d
PARM_out_port	network/orion/SIM_port_raw.h	64;"	d
PARM_out_port	network/orion_old/SIM_port.h	108;"	d
PARM_out_share_buf	network/orion/SIM_port.h	63;"	d
PARM_out_share_buf	network/orion/SIM_port_NEC.h	63;"	d
PARM_out_share_buf	network/orion/SIM_port_TRIPS.h	78;"	d
PARM_out_share_buf	network/orion/SIM_port_alpha.h	80;"	d
PARM_out_share_buf	network/orion/SIM_port_garnet.h	30;"	d
PARM_out_share_buf	network/orion/SIM_port_ibm.h	80;"	d
PARM_out_share_buf	network/orion/SIM_port_raw.h	78;"	d
PARM_out_share_buf	network/orion_old/SIM_port.h	122;"	d
PARM_out_share_switch	network/orion/SIM_port.h	66;"	d
PARM_out_share_switch	network/orion/SIM_port_NEC.h	66;"	d
PARM_out_share_switch	network/orion/SIM_port_TRIPS.h	81;"	d
PARM_out_share_switch	network/orion/SIM_port_alpha.h	82;"	d
PARM_out_share_switch	network/orion/SIM_port_garnet.h	33;"	d
PARM_out_share_switch	network/orion/SIM_port_ibm.h	83;"	d
PARM_out_share_switch	network/orion/SIM_port_raw.h	81;"	d
PARM_out_share_switch	network/orion_old/SIM_port.h	125;"	d
PARM_outdrv_model	network/orion/SIM_port.h	123;"	d
PARM_outdrv_model	network/orion/SIM_port_NEC.h	123;"	d
PARM_outdrv_model	network/orion/SIM_port_TRIPS.h	136;"	d
PARM_outdrv_model	network/orion/SIM_port_alpha.h	139;"	d
PARM_outdrv_model	network/orion/SIM_port_garnet.h	90;"	d
PARM_outdrv_model	network/orion/SIM_port_ibm.h	141;"	d
PARM_outdrv_model	network/orion/SIM_port_raw.h	137;"	d
PARM_outdrv_model	network/orion_old/SIM_port.h	180;"	d
PARM_pipe_depth	network/orion/SIM_port.h	112;"	d
PARM_pipe_depth	network/orion/SIM_port_NEC.h	112;"	d
PARM_pipe_depth	network/orion/SIM_port_TRIPS.h	125;"	d
PARM_pipe_depth	network/orion/SIM_port_alpha.h	128;"	d
PARM_pipe_depth	network/orion/SIM_port_garnet.h	79;"	d
PARM_pipe_depth	network/orion/SIM_port_ibm.h	130;"	d
PARM_pipe_depth	network/orion/SIM_port_raw.h	126;"	d
PARM_pipe_depth	network/orion_old/SIM_port.h	169;"	d
PARM_pipeline_stages	network/orion/SIM_port.h	155;"	d
PARM_pipeline_stages	network/orion/SIM_port_NEC.h	155;"	d
PARM_pipeline_stages	network/orion/SIM_port_garnet.h	126;"	d
PARM_ras_size	network/orion_old/SIM_power_test.h	108;"	d
PARM_ras_size	network/orion_old/SIM_power_test.h	236;"	d
PARM_ras_size	network/orion_old/parm_technology.h	458;"	d
PARM_read_port	network/orion/SIM_port.h	160;"	d
PARM_read_port	network/orion/SIM_port_NEC.h	160;"	d
PARM_read_port	network/orion/SIM_port_TRIPS.h	49;"	d
PARM_read_port	network/orion/SIM_port_alpha.h	50;"	d
PARM_read_port	network/orion/SIM_port_garnet.h	131;"	d
PARM_read_port	network/orion/SIM_port_ibm.h	50;"	d
PARM_read_port	network/orion/SIM_port_raw.h	49;"	d
PARM_read_port	network/orion_old/SIM_port.h	60;"	d
PARM_reg_width	network/orion/SIM_port.h	163;"	d
PARM_reg_width	network/orion/SIM_port_NEC.h	163;"	d
PARM_reg_width	network/orion/SIM_port_TRIPS.h	52;"	d
PARM_reg_width	network/orion/SIM_port_alpha.h	53;"	d
PARM_reg_width	network/orion/SIM_port_garnet.h	134;"	d
PARM_reg_width	network/orion/SIM_port_ibm.h	53;"	d
PARM_reg_width	network/orion/SIM_port_raw.h	52;"	d
PARM_reg_width	network/orion_old/SIM_port.h	63;"	d
PARM_res_fpalu	network/orion_old/SIM_power_test.h	146;"	d
PARM_res_fpalu	network/orion_old/SIM_power_test.h	77;"	d
PARM_res_fpalu	network/orion_old/parm_technology.h	431;"	d
PARM_res_ialu	network/orion/SIM_technology.h	63;"	d
PARM_res_ialu	network/orion_old/SIM_power_test.h	121;"	d
PARM_res_ialu	network/orion_old/SIM_power_test.h	275;"	d
PARM_res_ialu	network/orion_old/parm_technology.h	471;"	d
PARM_res_memport	network/orion_old/SIM_power_test.h	191;"	d
PARM_res_memport	network/orion_old/SIM_power_test.h	93;"	d
PARM_res_memport	network/orion_old/parm_technology.h	444;"	d
PARM_router_diagonal	network/orion/SIM_port.h	157;"	d
PARM_router_diagonal	network/orion/SIM_port_NEC.h	157;"	d
PARM_router_diagonal	network/orion/SIM_port_garnet.h	128;"	d
PARM_row_dec_model	network/orion/SIM_port.h	118;"	d
PARM_row_dec_model	network/orion/SIM_port_NEC.h	118;"	d
PARM_row_dec_model	network/orion/SIM_port_TRIPS.h	131;"	d
PARM_row_dec_model	network/orion/SIM_port_alpha.h	134;"	d
PARM_row_dec_model	network/orion/SIM_port_garnet.h	85;"	d
PARM_row_dec_model	network/orion/SIM_port_ibm.h	136;"	d
PARM_row_dec_model	network/orion/SIM_port_raw.h	132;"	d
PARM_row_dec_model	network/orion_old/SIM_port.h	175;"	d
PARM_row_dec_pre_model	network/orion/SIM_port.h	119;"	d
PARM_row_dec_pre_model	network/orion/SIM_port_NEC.h	119;"	d
PARM_row_dec_pre_model	network/orion/SIM_port_TRIPS.h	132;"	d
PARM_row_dec_pre_model	network/orion/SIM_port_alpha.h	135;"	d
PARM_row_dec_pre_model	network/orion/SIM_port_garnet.h	86;"	d
PARM_row_dec_pre_model	network/orion/SIM_port_ibm.h	137;"	d
PARM_row_dec_pre_model	network/orion/SIM_port_raw.h	133;"	d
PARM_row_dec_pre_model	network/orion_old/SIM_port.h	176;"	d
PARM_ruu_commit_width	network/orion_old/SIM_power_test.h	100;"	d
PARM_ruu_commit_width	network/orion_old/SIM_power_test.h	212;"	d
PARM_ruu_commit_width	network/orion_old/parm_technology.h	450;"	d
PARM_ruu_decode_width	network/orion_old/SIM_power_test.h	164;"	d
PARM_ruu_decode_width	network/orion_old/SIM_power_test.h	83;"	d
PARM_ruu_decode_width	network/orion_old/parm_technology.h	437;"	d
PARM_ruu_issue_width	network/orion/SIM_technology.h	44;"	d
PARM_ruu_issue_width	network/orion_old/SIM_power_test.h	167;"	d
PARM_ruu_issue_width	network/orion_old/SIM_power_test.h	84;"	d
PARM_ruu_issue_width	network/orion_old/parm_technology.h	438;"	d
PARM_shielding	network/orion/SIM_port.h	152;"	d
PARM_shielding	network/orion/SIM_port_NEC.h	152;"	d
PARM_shielding	network/orion/SIM_port_garnet.h	119;"	d
PARM_sw_in_arb_ff_model	network/orion/SIM_port.h	136;"	d
PARM_sw_in_arb_ff_model	network/orion/SIM_port_NEC.h	136;"	d
PARM_sw_in_arb_ff_model	network/orion/SIM_port_garnet.h	103;"	d
PARM_sw_in_arb_ff_model	network/orion_old/SIM_port.h	77;"	d
PARM_sw_in_arb_model	network/orion/SIM_port.h	135;"	d
PARM_sw_in_arb_model	network/orion/SIM_port_NEC.h	135;"	d
PARM_sw_in_arb_model	network/orion/SIM_port_garnet.h	102;"	d
PARM_sw_in_arb_model	network/orion_old/SIM_port.h	75;"	d
PARM_sw_out_arb_ff_model	network/orion/SIM_port.h	138;"	d
PARM_sw_out_arb_ff_model	network/orion/SIM_port_NEC.h	138;"	d
PARM_sw_out_arb_ff_model	network/orion/SIM_port_garnet.h	105;"	d
PARM_sw_out_arb_ff_model	network/orion_old/SIM_port.h	78;"	d
PARM_sw_out_arb_model	network/orion/SIM_port.h	137;"	d
PARM_sw_out_arb_model	network/orion/SIM_port_NEC.h	137;"	d
PARM_sw_out_arb_model	network/orion/SIM_port_garnet.h	104;"	d
PARM_sw_out_arb_model	network/orion_old/SIM_port.h	76;"	d
PARM_trans_type	network/orion/SIM_port.h	72;"	d
PARM_trans_type	network/orion/SIM_port_NEC.h	72;"	d
PARM_trans_type	network/orion/SIM_port_TRIPS.h	87;"	d
PARM_trans_type	network/orion/SIM_port_alpha.h	88;"	d
PARM_trans_type	network/orion/SIM_port_garnet.h	39;"	d
PARM_trans_type	network/orion/SIM_port_ibm.h	89;"	d
PARM_trans_type	network/orion/SIM_port_raw.h	87;"	d
PARM_trans_type	network/orion_old/SIM_port.h	131;"	d
PARM_turnoff_factor	network/orion_old/SIM_power_test.h	120;"	d
PARM_turnoff_factor	network/orion_old/SIM_power_test.h	272;"	d
PARM_turnoff_factor	network/orion_old/parm_technology.h	470;"	d
PARM_v_channel	network/orion/SIM_port.h	57;"	d
PARM_v_channel	network/orion/SIM_port_NEC.h	57;"	d
PARM_v_channel	network/orion/SIM_port_TRIPS.h	71;"	d
PARM_v_channel	network/orion/SIM_port_alpha.h	73;"	d
PARM_v_channel	network/orion/SIM_port_garnet.h	23;"	d
PARM_v_channel	network/orion/SIM_port_ibm.h	73;"	d
PARM_v_channel	network/orion/SIM_port_raw.h	71;"	d
PARM_v_channel	network/orion_old/SIM_port.h	115;"	d
PARM_v_class	network/orion/SIM_port.h	56;"	d
PARM_v_class	network/orion/SIM_port_NEC.h	56;"	d
PARM_v_class	network/orion/SIM_port_TRIPS.h	72;"	d
PARM_v_class	network/orion/SIM_port_alpha.h	74;"	d
PARM_v_class	network/orion/SIM_port_garnet.h	24;"	d
PARM_v_class	network/orion/SIM_port_ibm.h	74;"	d
PARM_v_class	network/orion/SIM_port_raw.h	72;"	d
PARM_v_class	network/orion_old/SIM_port.h	116;"	d
PARM_vc_allocator_type	network/orion/SIM_port.h	141;"	d
PARM_vc_allocator_type	network/orion/SIM_port_NEC.h	141;"	d
PARM_vc_allocator_type	network/orion/SIM_port_garnet.h	108;"	d
PARM_vc_in_arb_ff_model	network/orion/SIM_port.h	143;"	d
PARM_vc_in_arb_ff_model	network/orion/SIM_port_NEC.h	143;"	d
PARM_vc_in_arb_ff_model	network/orion/SIM_port_garnet.h	110;"	d
PARM_vc_in_arb_ff_model	network/orion_old/SIM_port.h	73;"	d
PARM_vc_in_arb_model	network/orion/SIM_port.h	142;"	d
PARM_vc_in_arb_model	network/orion/SIM_port_NEC.h	142;"	d
PARM_vc_in_arb_model	network/orion/SIM_port_garnet.h	109;"	d
PARM_vc_in_arb_model	network/orion_old/SIM_port.h	71;"	d
PARM_vc_out_arb_ff_model	network/orion/SIM_port.h	145;"	d
PARM_vc_out_arb_ff_model	network/orion/SIM_port_NEC.h	145;"	d
PARM_vc_out_arb_ff_model	network/orion/SIM_port_garnet.h	112;"	d
PARM_vc_out_arb_ff_model	network/orion_old/SIM_port.h	74;"	d
PARM_vc_out_arb_model	network/orion/SIM_port.h	144;"	d
PARM_vc_out_arb_model	network/orion/SIM_port_NEC.h	144;"	d
PARM_vc_out_arb_model	network/orion/SIM_port_garnet.h	111;"	d
PARM_vc_out_arb_model	network/orion_old/SIM_port.h	72;"	d
PARM_vc_select_buf_type	network/orion/SIM_port.h	146;"	d
PARM_vc_select_buf_type	network/orion/SIM_port_NEC.h	146;"	d
PARM_vc_select_buf_type	network/orion/SIM_port_garnet.h	113;"	d
PARM_width_spacing	network/orion/SIM_port.h	150;"	d
PARM_width_spacing	network/orion/SIM_port_NEC.h	150;"	d
PARM_width_spacing	network/orion/SIM_port_garnet.h	117;"	d
PARM_wordline_model	network/orion/SIM_port.h	115;"	d
PARM_wordline_model	network/orion/SIM_port_NEC.h	115;"	d
PARM_wordline_model	network/orion/SIM_port_TRIPS.h	128;"	d
PARM_wordline_model	network/orion/SIM_port_alpha.h	131;"	d
PARM_wordline_model	network/orion/SIM_port_garnet.h	82;"	d
PARM_wordline_model	network/orion/SIM_port_ibm.h	133;"	d
PARM_wordline_model	network/orion/SIM_port_raw.h	129;"	d
PARM_wordline_model	network/orion_old/SIM_port.h	172;"	d
PARM_write_port	network/orion/SIM_port.h	161;"	d
PARM_write_port	network/orion/SIM_port_NEC.h	161;"	d
PARM_write_port	network/orion/SIM_port_TRIPS.h	50;"	d
PARM_write_port	network/orion/SIM_port_alpha.h	51;"	d
PARM_write_port	network/orion/SIM_port_garnet.h	132;"	d
PARM_write_port	network/orion/SIM_port_ibm.h	51;"	d
PARM_write_port	network/orion/SIM_port_raw.h	50;"	d
PARM_write_port	network/orion_old/SIM_port.h	61;"	d
PARM_xb_in_seg	network/orion/SIM_port.h	75;"	d
PARM_xb_in_seg	network/orion/SIM_port_NEC.h	75;"	d
PARM_xb_in_seg	network/orion/SIM_port_TRIPS.h	90;"	d
PARM_xb_in_seg	network/orion/SIM_port_alpha.h	92;"	d
PARM_xb_in_seg	network/orion/SIM_port_garnet.h	42;"	d
PARM_xb_in_seg	network/orion/SIM_port_ibm.h	92;"	d
PARM_xb_in_seg	network/orion/SIM_port_raw.h	90;"	d
PARM_xb_in_seg	network/orion_old/SIM_port.h	134;"	d
PARM_xb_out_seg	network/orion/SIM_port.h	76;"	d
PARM_xb_out_seg	network/orion/SIM_port_NEC.h	76;"	d
PARM_xb_out_seg	network/orion/SIM_port_TRIPS.h	91;"	d
PARM_xb_out_seg	network/orion/SIM_port_alpha.h	93;"	d
PARM_xb_out_seg	network/orion/SIM_port_garnet.h	43;"	d
PARM_xb_out_seg	network/orion/SIM_port_ibm.h	93;"	d
PARM_xb_out_seg	network/orion/SIM_port_raw.h	91;"	d
PARM_xb_out_seg	network/orion_old/SIM_port.h	135;"	d
PCH	network/orion/SIM_parameter.h	71;"	d
PCH	network/orion_old/SIM_power.h	82;"	d
PCH	network/orion_old/parm_technology.h	408;"	d
PERFECTCACHEMEMORY_H	system/PerfectCacheMemory.h	67;"	d
PERMUTE	tester/getopt.C	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon93	file:
PERMU_MAX_MODEL	network/orion/SIM_permu_model.h	/^	PERMU_MAX_MODEL$/;"	e	enum:__anon44
PERSISTENTARBITER_H	system/PersistentArbiter.h	67;"	d
PHEntry	simics/depreceated/SimicsHypervisor.h	/^  PHEntry() { $/;"	f	class:PHEntry
PHEntry	simics/depreceated/SimicsHypervisor.h	/^class PHEntry {$/;"	c
PLX_2COM	network/orion/SIM_ALU_model.h	/^enum { PLX_CTR, PLX_IMM, PLX_LOGIC, PLX_SIGN, PLX_SHIFT, PLX_2COM, PLX_ADD, PLX_SUBW,$/;"	e	enum:__anon6
PLX_ADD	network/orion/SIM_ALU_model.h	/^enum { PLX_CTR, PLX_IMM, PLX_LOGIC, PLX_SIGN, PLX_SHIFT, PLX_2COM, PLX_ADD, PLX_SUBW,$/;"	e	enum:__anon6
PLX_ALU	network/orion/SIM_ALU_model.h	/^	PLX_ALU = 1,$/;"	e	enum:__anon5
PLX_AVG	network/orion/SIM_ALU_model.h	/^	PLX_SAT, PLX_AVG, PLX_OUT, PLX_BLK };$/;"	e	enum:__anon6
PLX_BLK	network/orion/SIM_ALU_model.h	/^	PLX_SAT, PLX_AVG, PLX_OUT, PLX_BLK };$/;"	e	enum:__anon6
PLX_CTR	network/orion/SIM_ALU_model.h	/^enum { PLX_CTR, PLX_IMM, PLX_LOGIC, PLX_SIGN, PLX_SHIFT, PLX_2COM, PLX_ADD, PLX_SUBW,$/;"	e	enum:__anon6
PLX_GATE	network/orion/SIM_ALU.c	/^	PLX_NOR2, PLX_NOR3, PLX_NOR4, PLX_NOT, PLX_XOR, PLX_GATE };$/;"	e	enum:__anon3	file:
PLX_IMM	network/orion/SIM_ALU_model.h	/^enum { PLX_CTR, PLX_IMM, PLX_LOGIC, PLX_SIGN, PLX_SHIFT, PLX_2COM, PLX_ADD, PLX_SUBW,$/;"	e	enum:__anon6
PLX_LOGIC	network/orion/SIM_ALU_model.h	/^enum { PLX_CTR, PLX_IMM, PLX_LOGIC, PLX_SIGN, PLX_SHIFT, PLX_2COM, PLX_ADD, PLX_SUBW,$/;"	e	enum:__anon6
PLX_MUX2	network/orion/SIM_ALU.c	/^enum { PLX_MUX2, PLX_MUX3, PLX_MUX4, PLX_PASS, PLX_NAND2, PLX_NAND3, PLX_NAND4,$/;"	e	enum:__anon3	file:
PLX_MUX3	network/orion/SIM_ALU.c	/^enum { PLX_MUX2, PLX_MUX3, PLX_MUX4, PLX_PASS, PLX_NAND2, PLX_NAND3, PLX_NAND4,$/;"	e	enum:__anon3	file:
PLX_MUX4	network/orion/SIM_ALU.c	/^enum { PLX_MUX2, PLX_MUX3, PLX_MUX4, PLX_PASS, PLX_NAND2, PLX_NAND3, PLX_NAND4,$/;"	e	enum:__anon3	file:
PLX_NAND2	network/orion/SIM_ALU.c	/^enum { PLX_MUX2, PLX_MUX3, PLX_MUX4, PLX_PASS, PLX_NAND2, PLX_NAND3, PLX_NAND4,$/;"	e	enum:__anon3	file:
PLX_NAND3	network/orion/SIM_ALU.c	/^enum { PLX_MUX2, PLX_MUX3, PLX_MUX4, PLX_PASS, PLX_NAND2, PLX_NAND3, PLX_NAND4,$/;"	e	enum:__anon3	file:
PLX_NAND4	network/orion/SIM_ALU.c	/^enum { PLX_MUX2, PLX_MUX3, PLX_MUX4, PLX_PASS, PLX_NAND2, PLX_NAND3, PLX_NAND4,$/;"	e	enum:__anon3	file:
PLX_NOR2	network/orion/SIM_ALU.c	/^	PLX_NOR2, PLX_NOR3, PLX_NOR4, PLX_NOT, PLX_XOR, PLX_GATE };$/;"	e	enum:__anon3	file:
PLX_NOR3	network/orion/SIM_ALU.c	/^	PLX_NOR2, PLX_NOR3, PLX_NOR4, PLX_NOT, PLX_XOR, PLX_GATE };$/;"	e	enum:__anon3	file:
PLX_NOR4	network/orion/SIM_ALU.c	/^	PLX_NOR2, PLX_NOR3, PLX_NOR4, PLX_NOT, PLX_XOR, PLX_GATE };$/;"	e	enum:__anon3	file:
PLX_NOT	network/orion/SIM_ALU.c	/^	PLX_NOR2, PLX_NOR3, PLX_NOR4, PLX_NOT, PLX_XOR, PLX_GATE };$/;"	e	enum:__anon3	file:
PLX_OUT	network/orion/SIM_ALU_model.h	/^	PLX_SAT, PLX_AVG, PLX_OUT, PLX_BLK };$/;"	e	enum:__anon6
PLX_PASS	network/orion/SIM_ALU.c	/^enum { PLX_MUX2, PLX_MUX3, PLX_MUX4, PLX_PASS, PLX_NAND2, PLX_NAND3, PLX_NAND4,$/;"	e	enum:__anon3	file:
PLX_SAT	network/orion/SIM_ALU_model.h	/^	PLX_SAT, PLX_AVG, PLX_OUT, PLX_BLK };$/;"	e	enum:__anon6
PLX_SHIFT	network/orion/SIM_ALU_model.h	/^enum { PLX_CTR, PLX_IMM, PLX_LOGIC, PLX_SIGN, PLX_SHIFT, PLX_2COM, PLX_ADD, PLX_SUBW,$/;"	e	enum:__anon6
PLX_SIGN	network/orion/SIM_ALU_model.h	/^enum { PLX_CTR, PLX_IMM, PLX_LOGIC, PLX_SIGN, PLX_SHIFT, PLX_2COM, PLX_ADD, PLX_SUBW,$/;"	e	enum:__anon6
PLX_SUBW	network/orion/SIM_ALU_model.h	/^enum { PLX_CTR, PLX_IMM, PLX_LOGIC, PLX_SIGN, PLX_SHIFT, PLX_2COM, PLX_ADD, PLX_SUBW,$/;"	e	enum:__anon6
PLX_XOR	network/orion/SIM_ALU.c	/^	PLX_NOR2, PLX_NOR3, PLX_NOR4, PLX_NOT, PLX_XOR, PLX_GATE };$/;"	e	enum:__anon3	file:
PMOS_TAB	network/orion/SIM_static.c	/^double PMOS_TAB[1] = {0};$/;"	v
PMOS_TAB	network/orion/SIM_static.c	/^double PMOS_TAB[1] = {11.3e-9};$/;"	v
PMOS_TAB	network/orion/SIM_static.c	/^double PMOS_TAB[1] = {16.6e-9};$/;"	v
PMOS_TAB	network/orion/SIM_static.c	/^double PMOS_TAB[1] = {304.8e-9};$/;"	v
PMOS_TAB	network/orion/SIM_static.c	/^double PMOS_TAB[1] = {35.2e-9};$/;"	v
PMOS_TAB	network/orion/SIM_static.c	/^double PMOS_TAB[1] = {674.3e-9};$/;"	v
PMOS_TAB	network/orion/SIM_static.c	/^double PMOS_TAB[1] = {9.3e-9};$/;"	v
PMOS_TAB	network/orion_old/power_static.C	/^double PMOS_TAB[1] = {135.2e-9};$/;"	v
PMOS_TAB	network/orion_old/power_static.C	/^double PMOS_TAB[1] = {18.0e-9};$/;"	v
PMOS_TAB	network/orion_old/power_static.C	/^double PMOS_TAB[1] = {9.2e-9};$/;"	v
POWER_LL_H_	network/orion_old/power_ll.h	55;"	d
POWER_MODEL	network/orion/Makefile	/^POWER_MODEL	 = SIM_router_power.c$/;"	m
POWER_SCALE	network/orion/SIM_technology_v1.h	299;"	d
POWER_SCALE	network/orion_old/SIM_power.h	361;"	d
POWER_SCALE	network/orion_old/parm_technology.h	479;"	d
PRE_MAX_MODEL	network/orion/SIM_array_model.h	/^	PRE_MAX_MODEL$/;"	e	enum:__anon28
PRE_MAX_MODEL	network/orion_old/power_array.h	/^	PRE_MAX_MODEL$/;"	e	enum:__anon64
PRIORITY_SWITCH_LIMIT	network/simple/PerfectSwitch.C	/^const int PRIORITY_SWITCH_LIMIT = 128;$/;"	v
PRIORITY_SWITCH_LIMIT	network/simple/Throttle.C	/^const int PRIORITY_SWITCH_LIMIT = 128;$/;"	v
PRIV_MODE	simics/depreceated/SimicsDriver.C	79;"	d	file:
PRIV_MODE	simics/depreceated/SimicsDriver.C	82;"	d	file:
PRIV_MODE	simics/depreceated/SimicsProcessor.C	89;"	d	file:
PRIV_MODE	simics/depreceated/SimicsProcessor.C	92;"	d	file:
PROFILER_H	profiler/Profiler.h	82;"	d
PROTOCOL_NAME_H	generated/MI_example/protocol_name.h	4;"	d
PSEUDOLRUPOLICY_H	system/PseudoLRUPolicy.h	3;"	d
P_DATA_T	network/orion/SIM_reg.h	43;"	d
PerfectCacheLineState	system/PerfectCacheMemory.h	/^  PerfectCacheLineState() { m_permission = AccessPermission_NUM; }$/;"	f	class:PerfectCacheLineState
PerfectCacheLineState	system/PerfectCacheMemory.h	/^class PerfectCacheLineState {$/;"	c
PerfectCacheMemory	system/PerfectCacheMemory.h	/^PerfectCacheMemory<ENTRY>::PerfectCacheMemory(AbstractChip* chip_ptr)$/;"	f	class:PerfectCacheMemory
PerfectCacheMemory	system/PerfectCacheMemory.h	/^class PerfectCacheMemory {$/;"	c
PerfectSwitch	network/simple/PerfectSwitch.C	/^PerfectSwitch::PerfectSwitch(SwitchID sid, SimpleNetwork* network_ptr)$/;"	f	class:PerfectSwitch
PerfectSwitch	network/simple/PerfectSwitch.h	/^class PerfectSwitch : public Consumer {$/;"	c
PerfectSwitch_H	network/simple/PerfectSwitch.h	69;"	d
Period	network/orion/SIM_parameter.h	99;"	d
Period	network/orion_old/SIM_power.h	236;"	d
Period	network/orion_old/parm_technology.h	212;"	d
PersistentArbiter	system/PersistentArbiter.C	/^PersistentArbiter::PersistentArbiter(AbstractChip* chip_ptr)$/;"	f	class:PersistentArbiter
PersistentArbiter	system/PersistentArbiter.h	/^class PersistentArbiter {$/;"	c
PersistentArbiterTransitionsPerCycle	config/RubyConfig.h	/^  static int PersistentArbiterTransitionsPerCycle() { return L2CACHE_TRANSITIONS_PER_RUBY_CYCLE; }$/;"	f	class:RubyConfig
PersistentTable	system/PersistentTable.C	/^PersistentTable::PersistentTable(AbstractChip* chip_ptr, int version)$/;"	f	class:PersistentTable
PersistentTable	system/PersistentTable.h	/^class PersistentTable {$/;"	c
PersistentTableEntry	system/PersistentTable.C	/^class PersistentTableEntry {$/;"	c	file:
PersistentTable_H	system/PersistentTable.h	65;"	d
PhysAddress	common/Address.h	/^typedef Address PhysAddress;$/;"	t
Powerfactor	network/orion/SIM_parameter.h	101;"	d
Powerfactor	network/orion_old/SIM_power.h	247;"	d
Powerfactor	network/orion_old/parm_technology.h	264;"	d
PrefetchBit	generated/MI_example/PrefetchBit.h	/^enum PrefetchBit {$/;"	g
PrefetchBit_FIRST	generated/MI_example/PrefetchBit.h	/^  PrefetchBit_FIRST,$/;"	e	enum:PrefetchBit
PrefetchBit_H	generated/MI_example/PrefetchBit.h	6;"	d
PrefetchBit_L1_HW	generated/MI_example/PrefetchBit.h	/^  PrefetchBit_L1_HW,  \/**< This is a L1 hardware prefetch *\/$/;"	e	enum:PrefetchBit
PrefetchBit_L2_HW	generated/MI_example/PrefetchBit.h	/^  PrefetchBit_L2_HW,  \/**< This is a L2 hardware prefetch *\/$/;"	e	enum:PrefetchBit
PrefetchBit_NUM	generated/MI_example/PrefetchBit.h	/^  PrefetchBit_NUM$/;"	e	enum:PrefetchBit
PrefetchBit_No	generated/MI_example/PrefetchBit.h	/^  PrefetchBit_No = PrefetchBit_FIRST,  \/**< No, not a prefetch *\/$/;"	e	enum:PrefetchBit
PrefetchBit_Yes	generated/MI_example/PrefetchBit.h	/^  PrefetchBit_Yes,  \/**< Yes, a prefetch *\/$/;"	e	enum:PrefetchBit
PrefetchBit_to_string	generated/MI_example/PrefetchBit.C	/^string PrefetchBit_to_string(const PrefetchBit& obj)$/;"	f
PresenceBit	common/BigSet.h	/^enum PresenceBit {NotPresent, Present};$/;"	g
Present	common/BigSet.h	/^enum PresenceBit {NotPresent, Present};$/;"	e	enum:PresenceBit
PrintArea	network/orion/NetworkPowerArea.h	/^	inline void PrintArea(ostream &out)$/;"	f	class:RouterPowerArea_d
PrintPower	network/orion/NetworkPowerArea.h	/^	inline void PrintPower(ostream &out, double* total_power, double* static_power, double* dynamic_power)$/;"	f	class:RouterPowerArea_d
PriorityLevel	common/Debug.h	/^enum PriorityLevel {HighPrio, MedPrio, LowPrio};$/;"	g
Profiler	profiler/Profiler.C	/^Profiler::Profiler()$/;"	f	class:Profiler
Profiler	profiler/Profiler.h	/^class Profiler : public Consumer {$/;"	c
Protocol	generated/MI_example/Protocol.h	/^  Protocol() $/;"	f	class:Protocol
Protocol	generated/MI_example/Protocol.h	/^class Protocol :  public AbstractProtocol {$/;"	c
Protocol_H	generated/MI_example/Protocol.h	7;"	d
PseudoLRUPolicy	system/PseudoLRUPolicy.h	/^PseudoLRUPolicy::PseudoLRUPolicy(Index num_sets, Index assoc)$/;"	f	class:PseudoLRUPolicy
PseudoLRUPolicy	system/PseudoLRUPolicy.h	/^class PseudoLRUPolicy : public AbstractReplacementPolicy {$/;"	c
QUEUE_ARBITER	network/orion/SIM_router_model.h	/^	QUEUE_ARBITER,$/;"	e	enum:__anon52
QUEUE_ARBITER	network/orion_old/power_arbiter.h	/^	QUEUE_ARBITER,$/;"	e	enum:__anon55
Queued	simics/depreceated/SimicsProcessor.h	/^    Queued,$/;"	e	enum:SimicsProcessor::CacheRequestStatus
RACEYDRIVER_H	tester/RaceyDriver.h	66;"	d
RC_stage	network/garnet-fixed-pipeline/RoutingUnit_d.C	/^void RoutingUnit_d::RC_stage(flit_d *t_flit, InputUnit_d *in_unit, int invc)$/;"	f	class:RoutingUnit_d
REGISTER	network/orion/SIM_router_model.h	/^	REGISTER,$/;"	e	enum:__anon50
REG_OUTDRV	network/orion/SIM_array_model.h	/^	REG_OUTDRV,$/;"	e	enum:__anon31
REG_OUTDRV	network/orion_old/power_array.h	/^	REG_OUTDRV,$/;"	e	enum:__anon67
REJECT	generated/MI_example/attrlex.c	502;"	d	file:
REQUESTGENERATOR_H	tester/RequestGenerator.h	65;"	d
REQUIRE_ORDER	tester/getopt.C	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon93	file:
RESULT_BUS	network/orion/SIM_misc_model.h	/^	RESULT_BUS = 1,$/;"	e	enum:__anon36
RESULT_BUS	network/orion_old/power_bus.h	/^	RESULT_BUS = 1,$/;"	e	enum:__anon81
RETURN_IN_ORDER	tester/getopt.C	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon93	file:
RISE	network/orion/SIM_parameter.h	68;"	d
RISE	network/orion_old/SIM_power.h	79;"	d
RISE	network/orion_old/parm_technology.h	405;"	d
ROUTER_D_H	network/garnet-fixed-pipeline/Router_d.h	61;"	d
ROUTER_H	network/garnet-flexible-pipeline/Router.h	62;"	d
ROUTER_MODEL	network/orion/Makefile	/^ROUTER_MODEL = SIM_router.c SIM_arbiter.c SIM_crossbar.c $/;"	m
ROUTING_UNIT_D_H	network/garnet-fixed-pipeline/RoutingUnit_d.h	62;"	d
RPAREN	generated/MI_example/attrparse.c	/^     RPAREN = 262$/;"	e	enum:yytokentype	file:
RPAREN	generated/MI_example/attrparse.h	/^     RPAREN = 262$/;"	e	enum:yytokentype
RR_ARBITER	network/orion/SIM_router_model.h	/^	RR_ARBITER = 1,$/;"	e	enum:__anon52
RR_ARBITER	network/orion_old/power_arbiter.h	/^	RR_ARBITER =1,$/;"	e	enum:__anon55
RSCALE	network/orion/SIM_technology_v1.h	108;"	d
RSCALE	network/orion/SIM_technology_v1.h	48;"	d
RSCALE	network/orion/SIM_technology_v1.h	60;"	d
RSCALE	network/orion/SIM_technology_v1.h	72;"	d
RSCALE	network/orion/SIM_technology_v1.h	84;"	d
RSCALE	network/orion/SIM_technology_v1.h	96;"	d
RSCALE	network/orion_old/SIM_power.h	105;"	d
RSCALE	network/orion_old/SIM_power.h	117;"	d
RSCALE	network/orion_old/SIM_power.h	129;"	d
RSCALE	network/orion_old/SIM_power.h	141;"	d
RSCALE	network/orion_old/SIM_power.h	153;"	d
RSCALE	network/orion_old/SIM_power.h	165;"	d
RSCALE	network/orion_old/SIM_power.h	91;"	d
RSCALE	network/orion_old/parm_technology.h	101;"	d
RSCALE	network/orion_old/parm_technology.h	113;"	d
RSCALE	network/orion_old/parm_technology.h	125;"	d
RSCALE	network/orion_old/parm_technology.h	137;"	d
RSCALE	network/orion_old/parm_technology.h	149;"	d
RSCALE	network/orion_old/parm_technology.h	161;"	d
RSCALE	network/orion_old/parm_technology.h	87;"	d
RUBYCONFIG_H	config/RubyConfig.h	68;"	d
RUBYSLICC_INCLUDES_H	slicc_interface/RubySlicc_includes.h	2;"	d
RUBYSLICC_LIFETIMETRACE_INTERFACE_H	slicc_interface/RubySlicc_LifetimeTrace_interface.h	2;"	d
RUBYSLICC_PROFILER_INTERFACE_H	slicc_interface/RubySlicc_Profiler_interface.h	67;"	d
RUBYSLICC_TCPREDICTOR_INTERFACE_H	slicc_interface/RubySlicc_TCpredictor_interface.h	2;"	d
RUBY_COMMAND	depreceated/module/ruby.c	352;"	d	file:
RUBY_DEP	Makefile	/^RUBY_DEP = $(addprefix $(RUBY_OBJ_DIR)\/,$(SRC_C:.c=.d) $(SRC_CPP:.C=.d))$/;"	m
RUBY_LIB_DIR	Makefile	/^RUBY_LIB_DIR := $(HOST_TYPE)\/generated\/$(PROTOCOL)\/lib$/;"	m
RUBY_OBJ	Makefile	/^RUBY_OBJ = $(addprefix $(RUBY_OBJ_DIR)\/,$(SRC_C:.c=.o) $(SRC_CPP:.C=.o))$/;"	m
RUBY_OBJ_DIR	Makefile	/^RUBY_OBJ_DIR := $(HOST_TYPE)\/generated\/$(PROTOCOL)\/obj$/;"	m
RW_BITLINE	network/orion/SIM_array_model.h	/^	RW_BITLINE = 1,$/;"	e	enum:__anon27
RW_BITLINE	network/orion_old/power_array.h	/^	RW_BITLINE =1,$/;"	e	enum:__anon63
RaceyDriver	tester/RaceyDriver.C	/^RaceyDriver::RaceyDriver()$/;"	f	class:RaceyDriver
RaceyDriver	tester/RaceyDriver.h	/^class RaceyDriver : public Driver, public Consumer {$/;"	c
RatCellHeight	network/orion/SIM_technology_v1.h	277;"	d
RatCellHeight	network/orion_old/SIM_power.h	339;"	d
RatCellHeight	network/orion_old/parm_technology.h	356;"	d
RatCellWidth	network/orion/SIM_technology_v1.h	278;"	d
RatCellWidth	network/orion_old/SIM_power.h	340;"	d
RatCellWidth	network/orion_old/parm_technology.h	357;"	d
RatNumShift	network/orion/SIM_technology_v1.h	280;"	d
RatNumShift	network/orion_old/SIM_power.h	342;"	d
RatNumShift	network/orion_old/parm_technology.h	359;"	d
RatShiftRegWidth	network/orion/SIM_technology_v1.h	279;"	d
RatShiftRegWidth	network/orion_old/SIM_power.h	341;"	d
RatShiftRegWidth	network/orion_old/parm_technology.h	358;"	d
Rbitmetal	network/orion/SIM_technology_v1.h	173;"	d
Rbitmetal	network/orion/SIM_technology_v2.h	179;"	d
Rbitmetal	network/orion/SIM_technology_v2.h	510;"	d
Rbitmetal	network/orion_old/SIM_power.h	226;"	d
Rbitmetal	network/orion_old/parm_technology.h	259;"	d
RealAddressToInt	slicc_interface/RubySlicc_Util.h	/^extern inline int RealAddressToInt(Address addr)$/;"	f
RegCellHeight	network/orion/SIM_technology_v1.h	284;"	d
RegCellHeight	network/orion/SIM_technology_v2.h	125;"	d
RegCellHeight	network/orion/SIM_technology_v2.h	456;"	d
RegCellHeight	network/orion_old/SIM_power.h	346;"	d
RegCellHeight	network/orion_old/parm_technology.h	363;"	d
RegCellWidth	network/orion/SIM_technology_v1.h	285;"	d
RegCellWidth	network/orion/SIM_technology_v2.h	126;"	d
RegCellWidth	network/orion/SIM_technology_v2.h	457;"	d
RegCellWidth	network/orion_old/SIM_power.h	347;"	d
RegCellWidth	network/orion_old/parm_technology.h	364;"	d
RequestGenerator	tester/RequestGenerator.C	/^RequestGenerator::RequestGenerator(NodeID node, SyntheticDriver& driver) :$/;"	f	class:RequestGenerator
RequestGenerator	tester/RequestGenerator.h	/^class RequestGenerator : public Consumer {$/;"	c
RequestGeneratorStatus	generated/MI_example/RequestGeneratorStatus.h	/^enum RequestGeneratorStatus {$/;"	g
RequestGeneratorStatus_Before_Swap	generated/MI_example/RequestGeneratorStatus.h	/^  RequestGeneratorStatus_Before_Swap,  \/**< We're about to perform the swap *\/$/;"	e	enum:RequestGeneratorStatus
RequestGeneratorStatus_Done	generated/MI_example/RequestGeneratorStatus.h	/^  RequestGeneratorStatus_Done,  \/**< Done, waiting for end of run *\/$/;"	e	enum:RequestGeneratorStatus
RequestGeneratorStatus_FIRST	generated/MI_example/RequestGeneratorStatus.h	/^  RequestGeneratorStatus_FIRST,$/;"	e	enum:RequestGeneratorStatus
RequestGeneratorStatus_H	generated/MI_example/RequestGeneratorStatus.h	6;"	d
RequestGeneratorStatus_Holding	generated/MI_example/RequestGeneratorStatus.h	/^  RequestGeneratorStatus_Holding,  \/**< We are holding the lock performing the critical section *\/$/;"	e	enum:RequestGeneratorStatus
RequestGeneratorStatus_NUM	generated/MI_example/RequestGeneratorStatus.h	/^  RequestGeneratorStatus_NUM$/;"	e	enum:RequestGeneratorStatus
RequestGeneratorStatus_Release_Pending	generated/MI_example/RequestGeneratorStatus.h	/^  RequestGeneratorStatus_Release_Pending,  \/**< The write for the release is pending *\/$/;"	e	enum:RequestGeneratorStatus
RequestGeneratorStatus_Swap_Pending	generated/MI_example/RequestGeneratorStatus.h	/^  RequestGeneratorStatus_Swap_Pending,  \/**< The swap used for test-and-send is pending *\/$/;"	e	enum:RequestGeneratorStatus
RequestGeneratorStatus_Test_Pending	generated/MI_example/RequestGeneratorStatus.h	/^  RequestGeneratorStatus_Test_Pending,  \/**< Test pending *\/$/;"	e	enum:RequestGeneratorStatus
RequestGeneratorStatus_Thinking	generated/MI_example/RequestGeneratorStatus.h	/^  RequestGeneratorStatus_Thinking = RequestGeneratorStatus_FIRST,  \/**< Doing work between release and next acquire *\/$/;"	e	enum:RequestGeneratorStatus
RequestGeneratorStatus_to_string	generated/MI_example/RequestGeneratorStatus.C	/^string RequestGeneratorStatus_to_string(const RequestGeneratorStatus& obj)$/;"	f
RequestMsg	generated/MI_example/RequestMsg.h	/^  RequestMsg() $/;"	f	class:RequestMsg
RequestMsg	generated/MI_example/RequestMsg.h	/^  RequestMsg(const Address& local_Address, const CoherenceRequestType& local_Type, const MachineID& local_Requestor, const NetDest& local_Destination, const int& local_Acks, const DataBlock& local_DataBlk, const MessageSizeType& local_MessageSize)$/;"	f	class:RequestMsg
RequestMsg	generated/MI_example/RequestMsg.h	/^class RequestMsg :  public NetworkMessage {$/;"	c
RequestMsg_H	generated/MI_example/RequestMsg.h	7;"	d
Resout	network/orion/SIM_technology_v1.h	319;"	d
Resout	network/orion/SIM_technology_v2.h	152;"	d
Resout	network/orion/SIM_technology_v2.h	484;"	d
ResponseMsg	generated/MI_example/ResponseMsg.h	/^  ResponseMsg() $/;"	f	class:ResponseMsg
ResponseMsg	generated/MI_example/ResponseMsg.h	/^  ResponseMsg(const Address& local_Address, const CoherenceResponseType& local_Type, const MachineID& local_Sender, const NetDest& local_Destination, const DataBlock& local_DataBlk, const bool& local_Dirty, const int& local_Acks, const MessageSizeType& local_MessageSize)$/;"	f	class:ResponseMsg
ResponseMsg	generated/MI_example/ResponseMsg.h	/^class ResponseMsg :  public NetworkMessage {$/;"	c
ResponseMsg_H	generated/MI_example/ResponseMsg.h	7;"	d
Reswire	network/orion/SIM_technology_v1.h	317;"	d
Reswire	network/orion/SIM_technology_v2.h	150;"	d
Reswire	network/orion/SIM_technology_v2.h	482;"	d
Retry	simics/depreceated/SimicsProcessor.h	/^    Retry$/;"	e	enum:SimicsProcessor::CacheRequestStatus
Rnchannelon	network/orion/SIM_technology_v1.h	168;"	d
Rnchannelon	network/orion/SIM_technology_v2.h	169;"	d
Rnchannelon	network/orion/SIM_technology_v2.h	172;"	d
Rnchannelon	network/orion/SIM_technology_v2.h	175;"	d
Rnchannelon	network/orion/SIM_technology_v2.h	500;"	d
Rnchannelon	network/orion/SIM_technology_v2.h	503;"	d
Rnchannelon	network/orion/SIM_technology_v2.h	506;"	d
Rnchannelon	network/orion_old/SIM_power.h	221;"	d
Rnchannelon	network/orion_old/parm_technology.h	254;"	d
Rnchannelstatic	network/orion/SIM_technology_v1.h	163;"	d
Rnchannelstatic	network/orion/SIM_technology_v2.h	163;"	d
Rnchannelstatic	network/orion/SIM_technology_v2.h	494;"	d
Rnchannelstatic	network/orion_old/SIM_power.h	216;"	d
Rnchannelstatic	network/orion_old/parm_technology.h	249;"	d
Router	network/garnet-flexible-pipeline/Router.C	/^Router::Router(int id, GarnetNetwork *network_ptr)$/;"	f	class:Router
Router	network/garnet-flexible-pipeline/Router.h	/^class Router : public FlexibleConsumer {$/;"	c
RouterPerformance_d	network/orion/NetworkPowerArea.h	/^} RouterPerformance_d;$/;"	t	typeref:struct:__anon2
RouterPowerArea_d	network/orion/NetworkPowerArea.C	/^RouterPowerArea_d::RouterPowerArea_d() : $/;"	f	class:RouterPowerArea_d
RouterPowerArea_d	network/orion/NetworkPowerArea.C	/^RouterPowerArea_d::RouterPowerArea_d(const RouterPowerArea_d &rp) :$/;"	f	class:RouterPowerArea_d
RouterPowerArea_d	network/orion/NetworkPowerArea.h	/^class RouterPowerArea_d$/;"	c
Router_d	network/garnet-fixed-pipeline/Router_d.C	/^Router_d::Router_d(int id, GarnetNetwork_d *network_ptr)$/;"	f	class:Router_d
Router_d	network/garnet-fixed-pipeline/Router_d.h	/^class Router_d {$/;"	c
RoutingUnit_d	network/garnet-fixed-pipeline/RoutingUnit_d.C	/^RoutingUnit_d::RoutingUnit_d(Router_d *router)$/;"	f	class:RoutingUnit_d
RoutingUnit_d	network/garnet-fixed-pipeline/RoutingUnit_d.h	/^class RoutingUnit_d {$/;"	c
Rpchannelon	network/orion/SIM_technology_v1.h	170;"	d
Rpchannelon	network/orion/SIM_technology_v2.h	170;"	d
Rpchannelon	network/orion/SIM_technology_v2.h	173;"	d
Rpchannelon	network/orion/SIM_technology_v2.h	176;"	d
Rpchannelon	network/orion/SIM_technology_v2.h	501;"	d
Rpchannelon	network/orion/SIM_technology_v2.h	504;"	d
Rpchannelon	network/orion/SIM_technology_v2.h	507;"	d
Rpchannelon	network/orion_old/SIM_power.h	223;"	d
Rpchannelon	network/orion_old/parm_technology.h	256;"	d
Rpchannelstatic	network/orion/SIM_technology_v1.h	166;"	d
Rpchannelstatic	network/orion/SIM_technology_v2.h	166;"	d
Rpchannelstatic	network/orion/SIM_technology_v2.h	497;"	d
Rpchannelstatic	network/orion_old/SIM_power.h	219;"	d
Rpchannelstatic	network/orion_old/parm_technology.h	252;"	d
RubyConfig	config/RubyConfig.h	/^class RubyConfig {$/;"	c
Rwordmetal	network/orion/SIM_technology_v1.h	176;"	d
Rwordmetal	network/orion/SIM_technology_v2.h	180;"	d
Rwordmetal	network/orion/SIM_technology_v2.h	511;"	d
Rwordmetal	network/orion_old/SIM_power.h	229;"	d
Rwordmetal	network/orion_old/parm_technology.h	262;"	d
SA_	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum flit_stage {I_, VA_, SA_, ST_, LT_, NUM_FLIT_STAGE_};$/;"	e	enum:flit_stage
SCALE_BW	network/orion/SIM_technology_v2.h	104;"	d
SCALE_BW	network/orion/SIM_technology_v2.h	56;"	d
SCALE_BW	network/orion/SIM_technology_v2.h	64;"	d
SCALE_BW	network/orion/SIM_technology_v2.h	72;"	d
SCALE_BW	network/orion/SIM_technology_v2.h	80;"	d
SCALE_BW	network/orion/SIM_technology_v2.h	88;"	d
SCALE_BW	network/orion/SIM_technology_v2.h	96;"	d
SCALE_Crs	network/orion/SIM_technology_v2.h	105;"	d
SCALE_Crs	network/orion/SIM_technology_v2.h	57;"	d
SCALE_Crs	network/orion/SIM_technology_v2.h	65;"	d
SCALE_Crs	network/orion/SIM_technology_v2.h	73;"	d
SCALE_Crs	network/orion/SIM_technology_v2.h	81;"	d
SCALE_Crs	network/orion/SIM_technology_v2.h	89;"	d
SCALE_Crs	network/orion/SIM_technology_v2.h	97;"	d
SCALE_H	network/orion/SIM_technology_v2.h	103;"	d
SCALE_H	network/orion/SIM_technology_v2.h	55;"	d
SCALE_H	network/orion/SIM_technology_v2.h	63;"	d
SCALE_H	network/orion/SIM_technology_v2.h	71;"	d
SCALE_H	network/orion/SIM_technology_v2.h	79;"	d
SCALE_H	network/orion/SIM_technology_v2.h	87;"	d
SCALE_H	network/orion/SIM_technology_v2.h	95;"	d
SCALE_M	network/orion/SIM_technology_v1.h	123;"	d
SCALE_M	network/orion/SIM_technology_v2.h	100;"	d
SCALE_M	network/orion/SIM_technology_v2.h	52;"	d
SCALE_M	network/orion/SIM_technology_v2.h	60;"	d
SCALE_M	network/orion/SIM_technology_v2.h	68;"	d
SCALE_M	network/orion/SIM_technology_v2.h	76;"	d
SCALE_M	network/orion/SIM_technology_v2.h	84;"	d
SCALE_M	network/orion/SIM_technology_v2.h	92;"	d
SCALE_M	network/orion_old/SIM_power_test.h	294;"	d
SCALE_M	network/orion_old/SIM_power_test.h	298;"	d
SCALE_M	network/orion_old/SIM_power_test.h	302;"	d
SCALE_M	network/orion_old/SIM_power_test.h	306;"	d
SCALE_M	network/orion_old/parm_technology.h	183;"	d
SCALE_M	network/orion_old/parm_technology.h	187;"	d
SCALE_M	network/orion_old/parm_technology.h	191;"	d
SCALE_M	network/orion_old/parm_technology.h	195;"	d
SCALE_S	network/orion/SIM_technology_v1.h	124;"	d
SCALE_S	network/orion/SIM_technology_v2.h	101;"	d
SCALE_S	network/orion/SIM_technology_v2.h	53;"	d
SCALE_S	network/orion/SIM_technology_v2.h	61;"	d
SCALE_S	network/orion/SIM_technology_v2.h	69;"	d
SCALE_S	network/orion/SIM_technology_v2.h	77;"	d
SCALE_S	network/orion/SIM_technology_v2.h	85;"	d
SCALE_S	network/orion/SIM_technology_v2.h	93;"	d
SCALE_S	network/orion_old/SIM_power_test.h	295;"	d
SCALE_S	network/orion_old/SIM_power_test.h	299;"	d
SCALE_S	network/orion_old/SIM_power_test.h	303;"	d
SCALE_S	network/orion_old/SIM_power_test.h	307;"	d
SCALE_S	network/orion_old/parm_technology.h	184;"	d
SCALE_S	network/orion_old/parm_technology.h	188;"	d
SCALE_S	network/orion_old/parm_technology.h	192;"	d
SCALE_S	network/orion_old/parm_technology.h	196;"	d
SCALE_T	network/orion/SIM_technology_v1.h	122;"	d
SCALE_T	network/orion/SIM_technology_v2.h	51;"	d
SCALE_T	network/orion/SIM_technology_v2.h	59;"	d
SCALE_T	network/orion/SIM_technology_v2.h	67;"	d
SCALE_T	network/orion/SIM_technology_v2.h	75;"	d
SCALE_T	network/orion/SIM_technology_v2.h	83;"	d
SCALE_T	network/orion/SIM_technology_v2.h	91;"	d
SCALE_T	network/orion/SIM_technology_v2.h	99;"	d
SCALE_T	network/orion_old/SIM_power_test.h	293;"	d
SCALE_T	network/orion_old/SIM_power_test.h	297;"	d
SCALE_T	network/orion_old/SIM_power_test.h	301;"	d
SCALE_T	network/orion_old/SIM_power_test.h	305;"	d
SCALE_T	network/orion_old/parm_technology.h	182;"	d
SCALE_T	network/orion_old/parm_technology.h	186;"	d
SCALE_T	network/orion_old/parm_technology.h	190;"	d
SCALE_T	network/orion_old/parm_technology.h	194;"	d
SCALE_W	network/orion/SIM_technology_v2.h	102;"	d
SCALE_W	network/orion/SIM_technology_v2.h	54;"	d
SCALE_W	network/orion/SIM_technology_v2.h	62;"	d
SCALE_W	network/orion/SIM_technology_v2.h	70;"	d
SCALE_W	network/orion/SIM_technology_v2.h	78;"	d
SCALE_W	network/orion/SIM_technology_v2.h	86;"	d
SCALE_W	network/orion/SIM_technology_v2.h	94;"	d
SECOND_STG	network/orion/SIM_permu.h	40;"	d
SEL_MAX_MODEL	network/orion/SIM_misc_model.h	/^	SEL_MAX_MODEL$/;"	e	enum:__anon37
SEQUENCER_H	system/Sequencer.h	65;"	d
SERVICE	simics/depreceated/magic_call.c	161;"	d	file:
SERVICE	simics/depreceated/magic_call.c	167;"	d	file:
SET_H	common/BigSet.h	70;"	d
SET_H	common/OptBigSet.h	73;"	d
SET_H	common/Set.h	82;"	d
SIMICS_API	depreceated/module/Makefile	/^  SIMICS_API = 2.0$/;"	m
SIMICS_API	depreceated/module/Makefile	/^  SIMICS_API = 3.0$/;"	m
SIMICS_CONFLICT_RETRY_TIME	simics/depreceated/SimicsDriver.h	/^static const int SIMICS_CONFLICT_RETRY_TIME = 3;$/;"	v
SIMICS_RETRY_TIME	simics/depreceated/SimicsDriver.h	/^static const int SIMICS_RETRY_TIME = 1;$/;"	v
SIMICS_STALL_TIME	simics/depreceated/SimicsDriver.h	/^static const int SIMICS_STALL_TIME = 2000000000;$/;"	v
SIMICS_check_memory_value	simics/depreceated/interface.C	/^bool SIMICS_check_memory_value(int procID, physical_address_t addr,$/;"	f
SIMICS_current_processor	simics/depreceated/interface.C	/^processor_t * SIMICS_current_processor(){$/;"	f
SIMICS_current_processor_number	simics/depreceated/interface.C	/^int SIMICS_current_processor_number()$/;"	f
SIMICS_disable_processor	simics/depreceated/interface.C	/^void SIMICS_disable_processor( int cpuNumber ) {$/;"	f
SIMICS_disassemble_physical	simics/depreceated/interface.C	/^const char *SIMICS_disassemble_physical( int procID, physical_address_t pa ) {$/;"	f
SIMICS_enable_processor	simics/depreceated/interface.C	/^void SIMICS_enable_processor( int cpuNumber ) {$/;"	f
SIMICS_get_cycle_count	simics/depreceated/interface.C	/^integer_t SIMICS_get_cycle_count(int cpuNumber)$/;"	f
SIMICS_get_insn_count	simics/depreceated/interface.C	/^integer_t SIMICS_get_insn_count(int cpuNumber)$/;"	f
SIMICS_get_npc	simics/depreceated/interface.C	/^Address SIMICS_get_npc(int procID) {$/;"	f
SIMICS_get_opal_interface	simics/depreceated/interface.C	/^mf_opal_api_t *SIMICS_get_opal_interface( void )$/;"	f
SIMICS_get_proc_no	simics/depreceated/interface.C	/^int SIMICS_get_proc_no(conf_object_t *cpu) {$/;"	f
SIMICS_get_proc_ptr	simics/depreceated/interface.C	/^conf_object_t* SIMICS_get_proc_ptr(int cpuNumber) {$/;"	f
SIMICS_get_program_counter	simics/depreceated/interface.C	/^Address SIMICS_get_program_counter(conf_object_t *cpu) {$/;"	f
SIMICS_get_program_counter	simics/depreceated/interface.C	/^Address SIMICS_get_program_counter(int procID) {$/;"	f
SIMICS_get_register_name	simics/depreceated/interface.C	/^const char * SIMICS_get_register_name(int cpuNumber, int reg_num){$/;"	f
SIMICS_get_register_number	simics/depreceated/interface.C	/^int SIMICS_get_register_number(int cpuNumber, const char * reg_name){$/;"	f
SIMICS_install_asi_callback	simics/depreceated/interface.C	/^void SIMICS_install_asi_callback( void )$/;"	f
SIMICS_install_exception_callback	simics/depreceated/interface.C	/^void SIMICS_install_exception_callback( void )$/;"	f
SIMICS_install_timing_model	simics/depreceated/interface.C	/^void SIMICS_install_timing_model( void )$/;"	f
SIMICS_is_ldda	simics/depreceated/interface.C	/^bool SIMICS_is_ldda(const memory_transaction_t *mem_trans) {$/;"	f
SIMICS_number_processors	simics/depreceated/interface.C	/^int SIMICS_number_processors()$/;"	f
SIMICS_post_continue_execution	simics/depreceated/interface.C	/^void SIMICS_post_continue_execution(int procID){$/;"	f
SIMICS_post_disable_processor	simics/depreceated/interface.C	/^void SIMICS_post_disable_processor( int cpuNumber ) {$/;"	f
SIMICS_post_restart_transaction	simics/depreceated/interface.C	/^void SIMICS_post_restart_transaction(int procID){$/;"	f
SIMICS_post_stall_proc	simics/depreceated/interface.C	/^void SIMICS_post_stall_proc(int cpuNumber, int cycles)$/;"	f
SIMICS_print_version	simics/depreceated/interface.C	/^void SIMICS_print_version(ostream& out) {$/;"	f
SIMICS_processor_enabled	simics/depreceated/interface.C	/^bool SIMICS_processor_enabled( int cpuNumber ) {$/;"	f
SIMICS_read_control_register	simics/depreceated/interface.C	/^uinteger_t SIMICS_read_control_register(int cpuNumber, int registerNumber)$/;"	f
SIMICS_read_global_register	simics/depreceated/interface.C	/^uinteger_t SIMICS_read_global_register(int cpuNumber, int globals, int registerNumber)$/;"	f
SIMICS_read_physical_memory	simics/depreceated/interface.C	/^integer_t SIMICS_read_physical_memory( int procID, physical_address_t address,$/;"	f
SIMICS_read_physical_memory_buffer	simics/depreceated/interface.C	/^void SIMICS_read_physical_memory_buffer(int procID, physical_address_t addr,$/;"	f
SIMICS_read_register	simics/depreceated/interface.C	/^uinteger_t SIMICS_read_register(int cpuNumber, int registerNumber)$/;"	f
SIMICS_read_window_register	simics/depreceated/interface.C	/^uinteger_t SIMICS_read_window_register(int cpuNumber, int window, int registerNumber)$/;"	f
SIMICS_remove_asi_callback	simics/depreceated/interface.C	/^void SIMICS_remove_asi_callback( void )$/;"	f
SIMICS_remove_exception_callback	simics/depreceated/interface.C	/^void SIMICS_remove_exception_callback( void )$/;"	f
SIMICS_remove_ruby_callback	simics/depreceated/interface.C	/^void SIMICS_remove_ruby_callback( void )$/;"	f
SIMICS_remove_timing_model	simics/depreceated/interface.C	/^void SIMICS_remove_timing_model( void )$/;"	f
SIMICS_set_next_program_counter	simics/depreceated/interface.C	/^void SIMICS_set_next_program_counter(int procID, Address newNPC) {$/;"	f
SIMICS_set_npc	simics/depreceated/interface.C	/^void SIMICS_set_npc(int procID, Address newNPC) {$/;"	f
SIMICS_set_pc	simics/depreceated/interface.C	/^void SIMICS_set_pc(int procID, Address newPC) {$/;"	f
SIMICS_set_program_counter	simics/depreceated/interface.C	/^void SIMICS_set_program_counter(int procID, Address newPC) {$/;"	f
SIMICS_stall_proc	simics/depreceated/interface.C	/^void SIMICS_stall_proc(int cpuNumber, int cycles)$/;"	f
SIMICS_translate_address	simics/depreceated/interface.C	/^physical_address_t SIMICS_translate_address( int procID, Address address ) {$/;"	f
SIMICS_translate_data_address	simics/depreceated/interface.C	/^physical_address_t SIMICS_translate_data_address( int procID, Address address ) {$/;"	f
SIMICS_unstall_proc	simics/depreceated/interface.C	/^void SIMICS_unstall_proc(int cpuNumber)$/;"	f
SIMICS_unstall_proc	simics/depreceated/interface.C	/^void SIMICS_unstall_proc(int cpuNumber, int cycles)$/;"	f
SIMICS_wakeup_ruby	simics/depreceated/interface.C	/^void SIMICS_wakeup_ruby()$/;"	f
SIMICS_write_control_register	simics/depreceated/interface.C	/^void SIMICS_write_control_register(int cpuNumber, int registerNumber, uinteger_t value)$/;"	f
SIMICS_write_global_register	simics/depreceated/interface.C	/^void SIMICS_write_global_register(int cpuNumber, int globals, int registerNumber, uinteger_t value)$/;"	f
SIMICS_write_physical_memory	simics/depreceated/interface.C	/^void SIMICS_write_physical_memory( int procID, physical_address_t address,$/;"	f
SIMICS_write_physical_memory_buffer	simics/depreceated/interface.C	/^void SIMICS_write_physical_memory_buffer(int procID, physical_address_t addr,$/;"	f
SIMICS_write_register	simics/depreceated/interface.C	/^void SIMICS_write_register(int cpuNumber, int registerNumber, uinteger_t value)$/;"	f
SIMICS_write_window_register	simics/depreceated/interface.C	/^void SIMICS_write_window_register(int cpuNumber, int window, int registerNumber, uinteger_t value)$/;"	f
SIMPLENETWORK_H	network/simple/SimpleNetwork.h	97;"	d
SIM_ALU_init	network/orion/SIM_ALU.c	/^int SIM_ALU_init(SIM_ALU_t *alu, int model, u_int data_width)$/;"	f
SIM_ALU_record	network/orion/SIM_ALU.c	/^int SIM_ALU_record(SIM_ALU_t *alu, LIB_Type_max_uint d1, LIB_Type_max_uint d2, u_int type)$/;"	f
SIM_ALU_report	network/orion/SIM_ALU.c	/^double SIM_ALU_report(SIM_ALU_t *alu)$/;"	f
SIM_ALU_stat_energy	network/orion/SIM_ALU.c	/^double SIM_ALU_stat_energy(SIM_ALU_t *alu, int max)$/;"	f
SIM_ALU_t	network/orion/SIM_ALU.h	/^} SIM_ALU_t;$/;"	t	typeref:struct:__anon4
SIM_ARRAY_NO_MODEL	network/orion/SIM_array_model.h	38;"	d
SIM_ARRAY_NO_MODEL	network/orion_old/power_array.h	58;"	d
SIM_ARRAY_READ	network/orion/SIM_array_internal.h	39;"	d
SIM_ARRAY_READ	network/orion_old/power_array.h	59;"	d
SIM_ARRAY_RECOVER	network/orion/SIM_array_internal.h	42;"	d
SIM_ARRAY_RECOVER	network/orion_old/power_array.h	62;"	d
SIM_ARRAY_RW	network/orion/SIM_array_internal.h	45;"	d
SIM_ARRAY_RW	network/orion_old/power_array.h	65;"	d
SIM_ARRAY_WO	network/orion/SIM_array_internal.h	47;"	d
SIM_ARRAY_WO	network/orion_old/power_array.h	67;"	d
SIM_ARRAY_WRITE	network/orion/SIM_array_internal.h	40;"	d
SIM_ARRAY_WRITE	network/orion_old/power_array.h	60;"	d
SIM_Hamming	network/orion/SIM_util.c	/^u_int SIM_Hamming(LIB_Type_max_uint old_val, LIB_Type_max_uint new_val, LIB_Type_max_uint mask)$/;"	f
SIM_Hamming_group	network/orion/SIM_util.c	/^u_int SIM_Hamming_group(LIB_Type_max_uint d1_new, LIB_Type_max_uint d1_old, LIB_Type_max_uint d2_new, LIB_Type_max_uint d2_old, u_int width, u_int n_grp)$/;"	f
SIM_Hamming_slow	network/orion/SIM_util.c	/^static u_int SIM_Hamming_slow( LIB_Type_max_uint old_val, LIB_Type_max_uint new_val, LIB_Type_max_uint mask )$/;"	f	file:
SIM_NO_MODEL	network/orion/SIM_parameter.h	82;"	d
SIM_NO_MODEL	network/orion_old/SIM_power.h	60;"	d
SIM_NO_MODEL	network/orion_old/parm_technology.h	385;"	d
SIM_amp_model_t	network/orion/SIM_array_model.h	/^} SIM_amp_model_t;$/;"	t	typeref:enum:__anon25
SIM_arbiter_clear_stat	network/orion/SIM_arbiter.c	/^static int SIM_arbiter_clear_stat(SIM_arbiter_t *arb)$/;"	f	file:
SIM_arbiter_init	network/orion/SIM_arbiter.c	/^int SIM_arbiter_init(SIM_arbiter_t *arb, int arbiter_model, int ff_model, u_int req_width, double length, SIM_array_info_t *info)$/;"	f
SIM_arbiter_model_t	network/orion/SIM_router_model.h	/^} SIM_arbiter_model_t;$/;"	t	typeref:enum:__anon52
SIM_arbiter_record	network/orion/SIM_arbiter.c	/^int SIM_arbiter_record(SIM_arbiter_t *arb, LIB_Type_max_uint new_req, LIB_Type_max_uint old_req, u_int new_grant, u_int old_grant)$/;"	f
SIM_arbiter_report	network/orion/SIM_arbiter.c	/^double SIM_arbiter_report(SIM_arbiter_t *arb)$/;"	f
SIM_arbiter_stat_energy	network/orion/SIM_arbiter.c	/^double SIM_arbiter_stat_energy(SIM_arbiter_t *arb, SIM_array_info_t *info, double n_req, int print_depth, char *path, int max_avg)$/;"	f
SIM_arbiter_stat_energy	network/orion_old/NetworkPower.C	/^double SIM_arbiter_stat_energy(power_arbiter *arb, power_array_info *info, double n_req)$/;"	f
SIM_arbiter_t	network/orion/SIM_arbiter.h	/^} SIM_arbiter_t;$/;"	t	typeref:struct:__anon7
SIM_array_amp_clear_stat	network/orion/SIM_array_l.c	/^static int SIM_array_amp_clear_stat(SIM_array_amp_t *amp)$/;"	f	file:
SIM_array_amp_clear_stat	network/orion_old/power_array.C	/^static int SIM_array_amp_clear_stat(power_amp *amp)$/;"	f	file:
SIM_array_amp_energy	network/orion/SIM_array_l.c	/^static double SIM_array_amp_energy( void )$/;"	f	file:
SIM_array_amp_energy	network/orion_old/power_array.C	/^static double SIM_array_amp_energy( void )$/;"	f	file:
SIM_array_amp_init	network/orion/SIM_array_l.c	/^static int SIM_array_amp_init( SIM_array_amp_t *amp, int model )$/;"	f	file:
SIM_array_amp_init	network/orion_old/power_array.C	/^static int SIM_array_amp_init(power_amp *amp, int model )$/;"	f	file:
SIM_array_amp_record	network/orion/SIM_array_l.c	/^int SIM_array_amp_record( SIM_array_amp_t *amp, u_int cols )$/;"	f
SIM_array_amp_record	network/orion_old/power_array.C	/^int SIM_array_amp_record(power_amp *amp, unsigned cols )$/;"	f
SIM_array_amp_report	network/orion/SIM_array_l.c	/^double SIM_array_amp_report( SIM_array_amp_t *amp )$/;"	f
SIM_array_amp_report	network/orion_old/power_array.C	/^double SIM_array_amp_report(power_amp *amp )$/;"	f
SIM_array_amp_t	network/orion/SIM_array_internal.h	/^} SIM_array_amp_t;$/;"	t	typeref:struct:__anon17
SIM_array_bitline_clear_stat	network/orion/SIM_array_l.c	/^static int SIM_array_bitline_clear_stat(SIM_array_bitline_t *bitline)$/;"	f	file:
SIM_array_bitline_clear_stat	network/orion_old/power_array.C	/^static int SIM_array_bitline_clear_stat(power_bitline *bitline)$/;"	f	file:
SIM_array_bitline_init	network/orion/SIM_array_l.c	/^static int SIM_array_bitline_init(SIM_array_bitline_t *bitline, int model, int share_rw, u_int end, u_int rows, double wire_cap, u_int n_share_amp, u_int n_bitline_pre, u_int n_colsel_pre, double pre_size, int outdrv_model)$/;"	f	file:
SIM_array_bitline_init	network/orion_old/power_array.C	/^static int SIM_array_bitline_init(power_bitline *bitline, int model, int share_rw, unsigned end, unsigned rows, double wire_cap, unsigned n_share_amp, unsigned n_bitline_pre, unsigned n_colsel_pre, double pre_size, int outdrv_model)$/;"	f	file:
SIM_array_bitline_record	network/orion/SIM_array_l.c	/^int SIM_array_bitline_record( SIM_array_bitline_t *bitline, int rw, u_int cols, LIB_Type_max_uint old_value, LIB_Type_max_uint new_value )$/;"	f
SIM_array_bitline_record	network/orion_old/power_array.C	/^int SIM_array_bitline_record(power_bitline *bitline, int rw, unsigned cols, unsigned long int old_value, unsigned long int new_value )$/;"	f
SIM_array_bitline_report	network/orion/SIM_array_l.c	/^double SIM_array_bitline_report( SIM_array_bitline_t *bitline )$/;"	f
SIM_array_bitline_report	network/orion_old/power_array.C	/^double SIM_array_bitline_report(power_bitline *bitline )$/;"	f
SIM_array_bitline_t	network/orion/SIM_array_internal.h	/^} SIM_array_bitline_t;$/;"	t	typeref:struct:__anon16
SIM_array_clear_stat	network/orion/SIM_array_l.c	/^int SIM_array_clear_stat(SIM_array_t *arr)$/;"	f
SIM_array_clear_stat	network/orion_old/power_array.C	/^int SIM_array_clear_stat(power_array *arr)$/;"	f
SIM_array_column_read_cap	network/orion/SIM_array_l.c	/^static double SIM_array_column_read_cap(u_int rows, double wire_cap, u_int end, u_int n_share_amp, u_int n_bitline_pre, u_int n_colsel_pre, double pre_size, int outdrv_model)$/;"	f	file:
SIM_array_column_read_cap	network/orion_old/power_array.C	/^static double SIM_array_column_read_cap(unsigned rows, double wire_cap, unsigned end, unsigned n_share_amp, unsigned n_bitline_pre, unsigned n_colsel_pre, double pre_size, int outdrv_model)$/;"	f	file:
SIM_array_column_select_cap	network/orion/SIM_array_l.c	/^static double SIM_array_column_select_cap( void )$/;"	f	file:
SIM_array_column_select_cap	network/orion_old/power_array.C	/^static double SIM_array_column_select_cap( void )$/;"	f	file:
SIM_array_column_write_cap	network/orion/SIM_array_l.c	/^static double SIM_array_column_write_cap( u_int rows, double wire_cap )$/;"	f	file:
SIM_array_column_write_cap	network/orion_old/power_array.C	/^static double SIM_array_column_write_cap( unsigned rows, double wire_cap )$/;"	f	file:
SIM_array_comp_base_cap	network/orion/SIM_array_l.c	/^static double SIM_array_comp_base_cap( void )$/;"	f	file:
SIM_array_comp_base_cap	network/orion_old/power_array.C	/^static double SIM_array_comp_base_cap( void )$/;"	f	file:
SIM_array_comp_bit_match_cap	network/orion/SIM_array_l.c	/^static double SIM_array_comp_bit_match_cap( void )$/;"	f	file:
SIM_array_comp_bit_match_cap	network/orion_old/power_array.C	/^static double SIM_array_comp_bit_match_cap( void )$/;"	f	file:
SIM_array_comp_bit_mismatch_cap	network/orion/SIM_array_l.c	/^static double SIM_array_comp_bit_mismatch_cap( void )$/;"	f	file:
SIM_array_comp_bit_mismatch_cap	network/orion_old/power_array.C	/^static double SIM_array_comp_bit_mismatch_cap( void )$/;"	f	file:
SIM_array_comp_chgaddr_cap	network/orion/SIM_array_l.c	/^static double SIM_array_comp_chgaddr_cap( void )$/;"	f	file:
SIM_array_comp_chgaddr_cap	network/orion_old/power_array.C	/^static double SIM_array_comp_chgaddr_cap( void )$/;"	f	file:
SIM_array_comp_clear_stat	network/orion/SIM_array_l.c	/^static int SIM_array_comp_clear_stat(SIM_array_comp_t *comp)$/;"	f	file:
SIM_array_comp_clear_stat	network/orion_old/power_array.C	/^static int SIM_array_comp_clear_stat(power_comp *comp)$/;"	f	file:
SIM_array_comp_global_record	network/orion/SIM_array_l.c	/^int SIM_array_comp_global_record( SIM_array_comp_t *comp, LIB_Type_max_uint prev_value, LIB_Type_max_uint curr_value, int miss )$/;"	f
SIM_array_comp_global_record	network/orion_old/power_array.C	/^int SIM_array_comp_global_record(power_comp *comp, unsigned long int prev_value, unsigned long int curr_value, int miss )$/;"	f
SIM_array_comp_init	network/orion/SIM_array_l.c	/^static int SIM_array_comp_init( SIM_array_comp_t *comp, int model, u_int n_bits, u_int assoc, u_int n_pre, double matchline_len, double tagline_len )$/;"	f	file:
SIM_array_comp_init	network/orion_old/power_array.C	/^static int SIM_array_comp_init(power_comp *comp, int model, unsigned n_bits, unsigned assoc, unsigned n_pre, double matchline_len, double tagline_len )$/;"	f	file:
SIM_array_comp_local_record	network/orion/SIM_array_l.c	/^int SIM_array_comp_local_record( SIM_array_comp_t *comp, LIB_Type_max_uint prev_tag, LIB_Type_max_uint curr_tag, LIB_Type_max_uint input, int recover )$/;"	f
SIM_array_comp_local_record	network/orion_old/power_array.C	/^int SIM_array_comp_local_record(power_comp *comp, unsigned long int prev_tag, unsigned long int curr_tag, unsigned long int input, int recover )$/;"	f
SIM_array_comp_match_cap	network/orion/SIM_array_l.c	/^static double SIM_array_comp_match_cap( u_int n_bits )$/;"	f	file:
SIM_array_comp_match_cap	network/orion_old/power_array.C	/^static double SIM_array_comp_match_cap( unsigned n_bits )$/;"	f	file:
SIM_array_comp_mismatch_cap	network/orion/SIM_array_l.c	/^static double SIM_array_comp_mismatch_cap( u_int n_pre )$/;"	f	file:
SIM_array_comp_mismatch_cap	network/orion_old/power_array.C	/^static double SIM_array_comp_mismatch_cap( unsigned n_pre )$/;"	f	file:
SIM_array_comp_miss_cap	network/orion/SIM_array_l.c	/^static double SIM_array_comp_miss_cap( u_int assoc )$/;"	f	file:
SIM_array_comp_miss_cap	network/orion_old/power_array.C	/^static double SIM_array_comp_miss_cap( unsigned assoc )$/;"	f	file:
SIM_array_comp_report	network/orion/SIM_array_l.c	/^double SIM_array_comp_report( SIM_array_comp_t *comp )$/;"	f
SIM_array_comp_report	network/orion_old/power_array.C	/^double SIM_array_comp_report(power_comp *comp )$/;"	f
SIM_array_comp_t	network/orion/SIM_array_internal.h	/^} SIM_array_comp_t;$/;"	t	typeref:struct:__anon18
SIM_array_data_read	network/orion/SIM_array_m.c	/^int SIM_array_data_read( SIM_array_info_t *info, SIM_array_t *arr, LIB_Type_max_uint data )$/;"	f
SIM_array_data_write	network/orion/SIM_array_m.c	/^int SIM_array_data_write( SIM_array_info_t *info, SIM_array_t *arr, SIM_array_set_state_t *set, u_int n_item, u_char *data_line, u_char *old_data, u_char *new_data )$/;"	f
SIM_array_dec	network/orion/SIM_array_m.c	/^int SIM_array_dec( SIM_array_info_t *info, SIM_array_t *arr, SIM_array_port_state_t *port, LIB_Type_max_uint row_addr, int rw )$/;"	f
SIM_array_dec_chgaddr_cap	network/orion/SIM_array_l.c	/^static double SIM_array_dec_chgaddr_cap( u_int n_gates )$/;"	f	file:
SIM_array_dec_chgaddr_cap	network/orion_old/power_array.C	/^static double SIM_array_dec_chgaddr_cap( unsigned n_gates )$/;"	f	file:
SIM_array_dec_chgl1_cap	network/orion/SIM_array_l.c	/^static double SIM_array_dec_chgl1_cap( u_int n_in_1st, u_int n_in_2nd, u_int n_gates )$/;"	f	file:
SIM_array_dec_chgl1_cap	network/orion_old/power_array.C	/^static double SIM_array_dec_chgl1_cap( unsigned n_in_1st, unsigned n_in_2nd, unsigned n_gates )$/;"	f	file:
SIM_array_dec_clear_stat	network/orion/SIM_array_l.c	/^static int SIM_array_dec_clear_stat(SIM_array_dec_t *dec)$/;"	f	file:
SIM_array_dec_clear_stat	network/orion_old/power_array.C	/^static int SIM_array_dec_clear_stat(power_decoder *dec)$/;"	f	file:
SIM_array_dec_init	network/orion/SIM_array_l.c	/^static int SIM_array_dec_init( SIM_array_dec_t *dec, int model, u_int n_bits )$/;"	f	file:
SIM_array_dec_init	network/orion_old/power_array.C	/^static int SIM_array_dec_init(power_decoder *dec, int model, unsigned n_bits )$/;"	f	file:
SIM_array_dec_record	network/orion/SIM_array_l.c	/^int SIM_array_dec_record( SIM_array_dec_t *dec, LIB_Type_max_uint prev_addr, LIB_Type_max_uint curr_addr )$/;"	f
SIM_array_dec_record	network/orion_old/power_array.C	/^int SIM_array_dec_record(power_decoder *dec, unsigned long int prev_addr, unsigned long int curr_addr )$/;"	f
SIM_array_dec_report	network/orion/SIM_array_l.c	/^double SIM_array_dec_report( SIM_array_dec_t *dec )$/;"	f
SIM_array_dec_report	network/orion_old/power_array.C	/^double SIM_array_dec_report(power_decoder *dec )$/;"	f
SIM_array_dec_select_cap	network/orion/SIM_array_l.c	/^static double SIM_array_dec_select_cap( u_int n_input )$/;"	f	file:
SIM_array_dec_select_cap	network/orion_old/power_array.C	/^static double SIM_array_dec_select_cap( unsigned n_input )$/;"	f	file:
SIM_array_dec_t	network/orion/SIM_array_internal.h	/^} SIM_array_dec_t;$/;"	t	typeref:struct:__anon14
SIM_array_info_t	network/orion/SIM_array.h	/^} SIM_array_info_t;$/;"	t	typeref:struct:__anon9
SIM_array_init	network/orion/SIM_array_l.c	/^int SIM_array_init(SIM_array_info_t *info, int is_fifo, u_int n_read_port, u_int n_write_port, u_int n_entry, u_int line_width, int outdrv, int arr_buf_type)$/;"	f
SIM_array_mem_cap	network/orion/SIM_array_l.c	/^static double SIM_array_mem_cap( u_int read_ports, u_int write_ports, int share_rw, u_int end )$/;"	f	file:
SIM_array_mem_cap	network/orion_old/power_array.C	/^static double SIM_array_mem_cap( unsigned read_ports, unsigned write_ports, int share_rw, unsigned end )$/;"	f	file:
SIM_array_mem_clear_stat	network/orion/SIM_array_l.c	/^static int SIM_array_mem_clear_stat(SIM_array_mem_t *mem)$/;"	f	file:
SIM_array_mem_clear_stat	network/orion_old/power_array.C	/^static int SIM_array_mem_clear_stat(power_mem *mem)$/;"	f	file:
SIM_array_mem_init	network/orion/SIM_array_l.c	/^static int SIM_array_mem_init( SIM_array_mem_t *mem, int model, u_int read_ports, u_int write_ports, int share_rw, u_int end )$/;"	f	file:
SIM_array_mem_init	network/orion_old/power_array.C	/^static int SIM_array_mem_init(power_mem *mem, int model, unsigned read_ports, unsigned write_ports, int share_rw, unsigned end )$/;"	f	file:
SIM_array_mem_record	network/orion/SIM_array_l.c	/^int SIM_array_mem_record( SIM_array_mem_t *mem, LIB_Type_max_uint prev_value, LIB_Type_max_uint curr_value, u_int width )$/;"	f
SIM_array_mem_record	network/orion_old/power_array.C	/^int SIM_array_mem_record(power_mem *mem, unsigned long int prev_value, unsigned long int curr_value, unsigned width )$/;"	f
SIM_array_mem_report	network/orion/SIM_array_l.c	/^double SIM_array_mem_report( SIM_array_mem_t *mem )$/;"	f
SIM_array_mem_report	network/orion_old/power_array.C	/^double SIM_array_mem_report(power_mem *mem )$/;"	f
SIM_array_mem_t	network/orion/SIM_array_internal.h	/^} SIM_array_mem_t;$/;"	t	typeref:struct:__anon19
SIM_array_mux_chgaddr_cap	network/orion/SIM_array_l.c	/^static double SIM_array_mux_chgaddr_cap( void )$/;"	f	file:
SIM_array_mux_chgaddr_cap	network/orion_old/power_array.C	/^static double SIM_array_mux_chgaddr_cap( void )$/;"	f	file:
SIM_array_mux_clear_stat	network/orion/SIM_array_l.c	/^static int SIM_array_mux_clear_stat(SIM_array_mux_t *mux)$/;"	f	file:
SIM_array_mux_clear_stat	network/orion_old/power_array.C	/^static int SIM_array_mux_clear_stat(power_mux *mux)$/;"	f	file:
SIM_array_mux_init	network/orion/SIM_array_l.c	/^static int SIM_array_mux_init( SIM_array_mux_t *mux, int model, u_int n_gates, u_int assoc )$/;"	f	file:
SIM_array_mux_init	network/orion_old/power_array.C	/^static int SIM_array_mux_init(power_mux *mux, int model, unsigned n_gates, unsigned assoc )$/;"	f	file:
SIM_array_mux_mismatch_cap	network/orion/SIM_array_l.c	/^static double SIM_array_mux_mismatch_cap( u_int n_nor_gates )$/;"	f	file:
SIM_array_mux_mismatch_cap	network/orion_old/power_array.C	/^static double SIM_array_mux_mismatch_cap( unsigned n_nor_gates )$/;"	f	file:
SIM_array_mux_record	network/orion/SIM_array_l.c	/^int SIM_array_mux_record( SIM_array_mux_t *mux, LIB_Type_max_uint prev_addr, LIB_Type_max_uint curr_addr, int miss )$/;"	f
SIM_array_mux_record	network/orion_old/power_array.C	/^int SIM_array_mux_record(power_mux *mux, unsigned long int prev_addr, unsigned long int curr_addr, int miss )$/;"	f
SIM_array_mux_report	network/orion/SIM_array_l.c	/^double SIM_array_mux_report( SIM_array_mux_t *mux )$/;"	f
SIM_array_mux_report	network/orion_old/power_array.C	/^double SIM_array_mux_report(power_mux *mux )$/;"	f
SIM_array_mux_t	network/orion/SIM_array_internal.h	/^} SIM_array_mux_t;$/;"	t	typeref:struct:__anon20
SIM_array_n_pre_drain	network/orion/SIM_array_l.c	/^u_int SIM_array_n_pre_drain( int model )$/;"	f
SIM_array_n_pre_gate	network/orion/SIM_array_l.c	/^u_int SIM_array_n_pre_gate( int model )$/;"	f
SIM_array_out_t	network/orion/SIM_array_internal.h	/^} SIM_array_out_t;$/;"	t	typeref:struct:__anon21
SIM_array_outdrv_chgdata_cap	network/orion/SIM_array_l.c	/^static double SIM_array_outdrv_chgdata_cap( void )$/;"	f	file:
SIM_array_outdrv_chgdata_cap	network/orion_old/power_array.C	/^static double SIM_array_outdrv_chgdata_cap( void )$/;"	f	file:
SIM_array_outdrv_clear_stat	network/orion/SIM_array_l.c	/^static int SIM_array_outdrv_clear_stat(SIM_array_out_t *outdrv)$/;"	f	file:
SIM_array_outdrv_clear_stat	network/orion_old/power_array.C	/^static int SIM_array_outdrv_clear_stat(power_out *outdrv)$/;"	f	file:
SIM_array_outdrv_global_record	network/orion/SIM_array_l.c	/^int SIM_array_outdrv_global_record( SIM_array_out_t *outdrv, LIB_Type_max_uint data )$/;"	f
SIM_array_outdrv_global_record	network/orion_old/power_array.C	/^int SIM_array_outdrv_global_record(power_out *outdrv, unsigned long int data )$/;"	f
SIM_array_outdrv_init	network/orion/SIM_array_l.c	/^static int SIM_array_outdrv_init( SIM_array_out_t *outdrv, int model, u_int item_width )$/;"	f	file:
SIM_array_outdrv_init	network/orion_old/power_array.C	/^static int SIM_array_outdrv_init(power_out *outdrv, int model, unsigned item_width )$/;"	f	file:
SIM_array_outdrv_local_record	network/orion/SIM_array_l.c	/^int SIM_array_outdrv_local_record( SIM_array_out_t *outdrv, LIB_Type_max_uint prev_data, LIB_Type_max_uint curr_data, int recover )$/;"	f
SIM_array_outdrv_local_record	network/orion_old/power_array.C	/^int SIM_array_outdrv_local_record(power_out *outdrv, unsigned long int prev_data, unsigned long int curr_data, int recover )$/;"	f
SIM_array_outdrv_outdata_cap	network/orion/SIM_array_l.c	/^static double SIM_array_outdrv_outdata_cap( u_int value )$/;"	f	file:
SIM_array_outdrv_outdata_cap	network/orion_old/power_array.C	/^static double SIM_array_outdrv_outdata_cap( unsigned value )$/;"	f	file:
SIM_array_outdrv_report	network/orion/SIM_array_l.c	/^double SIM_array_outdrv_report( SIM_array_out_t *outdrv )$/;"	f
SIM_array_outdrv_report	network/orion_old/power_array.C	/^double SIM_array_outdrv_report(power_out *outdrv )$/;"	f
SIM_array_outdrv_select_cap	network/orion/SIM_array_l.c	/^static double SIM_array_outdrv_select_cap( u_int data_width )$/;"	f	file:
SIM_array_outdrv_select_cap	network/orion_old/power_array.C	/^static double SIM_array_outdrv_select_cap( unsigned data_width )$/;"	f	file:
SIM_array_output	network/orion/SIM_array_m.c	/^int SIM_array_output( SIM_array_info_t *info, SIM_array_t *arr, u_int data_size, u_int length, void *data_out, void *data_all )$/;"	f
SIM_array_port_state_init	network/orion/SIM_array_m.c	/^int SIM_array_port_state_init( SIM_array_info_t *info, SIM_array_port_state_t *port )$/;"	f
SIM_array_port_state_init	network/orion_old/power_array.C	/^int SIM_array_port_state_init(power_array_info *info, SIM_array_port_state_t *port )$/;"	f
SIM_array_port_state_t	network/orion/SIM_array.h	/^} SIM_array_port_state_t;$/;"	t	typeref:struct:__anon10
SIM_array_port_state_t	network/orion_old/power_array.h	/^} SIM_array_port_state_t;$/;"	t	typeref:struct:__anon77
SIM_array_power_init	network/orion/SIM_array_l.c	/^int SIM_array_power_init( SIM_array_info_t *info, SIM_array_t *arr)$/;"	f
SIM_array_power_report	network/orion/SIM_array_l.c	/^double SIM_array_power_report(SIM_array_info_t *info, SIM_array_t *arr)$/;"	f
SIM_array_pre_cap	network/orion/SIM_array_l.c	/^double SIM_array_pre_cap( double width, double length )$/;"	f
SIM_array_pre_cap	network/orion_old/power_array.C	/^static double SIM_array_pre_cap( double width, double length )$/;"	f	file:
SIM_array_pre_clear_stat	network/orion/SIM_array_l.c	/^static int SIM_array_pre_clear_stat(SIM_array_pre_t *pre)$/;"	f	file:
SIM_array_pre_clear_stat	network/orion_old/power_array.C	/^static int SIM_array_pre_clear_stat(power_arr_pre *pre)$/;"	f	file:
SIM_array_pre_init	network/orion/SIM_array_l.c	/^static int SIM_array_pre_init( SIM_array_pre_t *pre, int model, double pre_size )$/;"	f	file:
SIM_array_pre_init	network/orion_old/power_array.C	/^static int SIM_array_pre_init(power_arr_pre *pre, int model, double pre_size )$/;"	f	file:
SIM_array_pre_record	network/orion/SIM_array_l.c	/^int SIM_array_pre_record( SIM_array_pre_t *pre, LIB_Type_max_uint n_charge )$/;"	f
SIM_array_pre_record	network/orion_old/power_array.C	/^int SIM_array_pre_record(power_arr_pre *pre, unsigned long int n_charge )$/;"	f
SIM_array_pre_report	network/orion/SIM_array_l.c	/^double SIM_array_pre_report( SIM_array_pre_t *pre )$/;"	f
SIM_array_pre_report	network/orion_old/power_array.C	/^double SIM_array_pre_report(power_arr_pre *pre )$/;"	f
SIM_array_pre_t	network/orion/SIM_array_internal.h	/^} SIM_array_pre_t;$/;"	t	typeref:struct:__anon22
SIM_array_set_state_init	network/orion/SIM_array_m.c	/^int SIM_array_set_state_init( SIM_array_info_t *info, SIM_array_set_state_t *set )$/;"	f
SIM_array_set_state_init	network/orion_old/power_array.C	/^int SIM_array_set_state_init( power_array_info *info, SIM_array_set_state_t *set )$/;"	f
SIM_array_set_state_t	network/orion/SIM_array.h	/^} SIM_array_set_state_t;$/;"	t	typeref:struct:__anon11
SIM_array_set_state_t	network/orion_old/power_array.h	/^} SIM_array_set_state_t;$/;"	t	typeref:struct:__anon78
SIM_array_share_column_read_cap	network/orion/SIM_array_l.c	/^static double SIM_array_share_column_read_cap( u_int rows, double wire_cap, u_int n_share_amp, u_int n_bitline_pre, u_int n_colsel_pre, double pre_size )$/;"	f	file:
SIM_array_share_column_read_cap	network/orion_old/power_array.C	/^static double SIM_array_share_column_read_cap( unsigned rows, double wire_cap, unsigned n_share_amp, unsigned n_bitline_pre, unsigned n_colsel_pre, double pre_size )$/;"	f	file:
SIM_array_share_column_write_cap	network/orion/SIM_array_l.c	/^static double SIM_array_share_column_write_cap( u_int rows, double wire_cap, u_int n_share_amp, u_int n_bitline_pre, double pre_size ) $/;"	f	file:
SIM_array_share_column_write_cap	network/orion_old/power_array.C	/^static double SIM_array_share_column_write_cap( unsigned rows, double wire_cap, unsigned n_share_amp, unsigned n_bitline_pre, double pre_size ) $/;"	f	file:
SIM_array_stat_energy	network/orion/SIM_array_m.c	/^double SIM_array_stat_energy(SIM_array_info_t *info, SIM_array_t *arr, double n_read, double n_write, int print_depth, char *path, int max_avg)$/;"	f
SIM_array_t	network/orion/SIM_array.h	/^} SIM_array_t;$/;"	t	typeref:struct:__anon8
SIM_array_tag_compare	network/orion/SIM_array_m.c	/^int SIM_array_tag_compare( SIM_array_info_t *info, SIM_array_t *arr, SIM_array_port_state_t *port, LIB_Type_max_uint tag_input, LIB_Type_max_uint col_addr, SIM_array_set_state_t *set )$/;"	f
SIM_array_tag_read	network/orion/SIM_array_m.c	/^int SIM_array_tag_read( SIM_array_info_t *info, SIM_array_t *arr, SIM_array_set_state_t *set )$/;"	f
SIM_array_tag_update	network/orion/SIM_array_m.c	/^int SIM_array_tag_update( SIM_array_info_t *info, SIM_array_t *arr, SIM_array_port_state_t *port, SIM_array_set_state_t *set )$/;"	f
SIM_array_wordline_cap	network/orion/SIM_array_l.c	/^static double SIM_array_wordline_cap( u_int cols, double wire_cap, double tx_width )$/;"	f	file:
SIM_array_wordline_cap	network/orion_old/power_array.C	/^static double SIM_array_wordline_cap( unsigned cols, double wire_cap, double tx_width )$/;"	f	file:
SIM_array_wordline_clear_stat	network/orion/SIM_array_l.c	/^static int SIM_array_wordline_clear_stat(SIM_array_wordline_t *wordline)$/;"	f	file:
SIM_array_wordline_clear_stat	network/orion_old/power_array.C	/^static int SIM_array_wordline_clear_stat(power_wordline *wordline)$/;"	f	file:
SIM_array_wordline_init	network/orion/SIM_array_l.c	/^static int SIM_array_wordline_init( SIM_array_wordline_t *wordline, int model, int share_rw, u_int cols, double wire_cap, u_int end )$/;"	f	file:
SIM_array_wordline_init	network/orion_old/power_array.C	/^static int SIM_array_wordline_init(power_wordline *wordline, int model, int share_rw, unsigned cols, double wire_cap, unsigned end )$/;"	f	file:
SIM_array_wordline_record	network/orion/SIM_array_l.c	/^int SIM_array_wordline_record( SIM_array_wordline_t *wordline, int rw, LIB_Type_max_uint n_switch )$/;"	f
SIM_array_wordline_record	network/orion_old/power_array.C	/^int SIM_array_wordline_record(power_wordline *wordline, int rw, unsigned long int n_switch )$/;"	f
SIM_array_wordline_report	network/orion/SIM_array_l.c	/^double SIM_array_wordline_report( SIM_array_wordline_t *wordline )$/;"	f
SIM_array_wordline_report	network/orion_old/power_array.C	/^double SIM_array_wordline_report(power_wordline *wordline )$/;"	f
SIM_array_wordline_t	network/orion/SIM_array_internal.h	/^} SIM_array_wordline_t;$/;"	t	typeref:struct:__anon15
SIM_bitline_delay	network/orion/SIM_time.c	/^double SIM_bitline_delay(int C, int A, int B, int Ndwl, int Ndbl, int Nspd, double inrisetime, double *outrisetime)$/;"	f
SIM_bitline_model_t	network/orion/SIM_array_model.h	/^} SIM_bitline_model_t;$/;"	t	typeref:enum:__anon27
SIM_bitline_tag_delay	network/orion/SIM_time.c	/^double SIM_bitline_tag_delay(int C, int A, int B, int Ntwl, int Ntbl, int Ntspd, double inrisetime, double *outrisetime)$/;"	f
SIM_break_simulation	simics/simics_api_dummy.c	/^void SIM_break_simulation(const char * msg){ assert(0); } $/;"	f
SIM_buf_power_data_read	network/orion/SIM_router.c	/^int SIM_buf_power_data_read(SIM_array_info_t *info, SIM_array_t *arr, LIB_Type_max_uint data)$/;"	f
SIM_buf_power_data_read	network/orion_old/power_array.C	/^int SIM_buf_power_data_read(power_array_info *info, power_array *arr, unsigned long int data)$/;"	f
SIM_buf_power_data_write	network/orion/SIM_router.c	/^int SIM_buf_power_data_write(SIM_array_info_t *info, SIM_array_t *arr, u_char *data_line, u_char *old_data, u_char *new_data)$/;"	f
SIM_buf_power_data_write	network/orion_old/power_array.C	/^int SIM_buf_power_data_write(power_array_info *info, power_array *arr, char *data_line, char *old_data, char *new_data)$/;"	f
SIM_buffer_model_t	network/orion/SIM_router_model.h	/^} SIM_buffer_model_t;$/;"	t	typeref:enum:__anon50
SIM_bus_bitwidth	network/orion/SIM_misc.c	/^static int SIM_bus_bitwidth(int encoding, u_int data_width, u_int grp_width)$/;"	f	file:
SIM_bus_bitwidth	network/orion_old/power_bus.C	/^static int SIM_bus_bitwidth(int encoding, unsigned data_width, unsigned grp_width)$/;"	f	file:
SIM_bus_init	network/orion/SIM_misc.c	/^int SIM_bus_init(SIM_bus_t *bus, int model, int encoding, u_int width, u_int grp_width, u_int n_snd, u_int n_rcv, double length, double time)$/;"	f
SIM_bus_record	network/orion/SIM_misc.c	/^int SIM_bus_record(SIM_bus_t *bus, LIB_Type_max_uint old_state, LIB_Type_max_uint new_state)$/;"	f
SIM_bus_report	network/orion/SIM_misc.c	/^double SIM_bus_report(SIM_bus_t *bus)$/;"	f
SIM_bus_stat_energy	network/orion_old/NetworkPower.C	/^double SIM_bus_stat_energy(power_bus *bus, double e_link)$/;"	f
SIM_bus_state	network/orion/SIM_misc.c	/^LIB_Type_max_uint SIM_bus_state(SIM_bus_t *bus, LIB_Type_max_uint old_data, LIB_Type_max_uint old_state, LIB_Type_max_uint new_data)$/;"	f
SIM_bus_state	network/orion_old/power_bus.C	/^unsigned long int SIM_bus_state(power_bus *bus, unsigned long int old_data, unsigned long int old_state, unsigned long int new_data)$/;"	f
SIM_bus_t	network/orion/SIM_misc.h	/^} SIM_bus_t;$/;"	t	typeref:struct:__anon33
SIM_c_get_mem_op_value_buf	simics/simics_api_dummy.c	/^void SIM_c_get_mem_op_value_buf(generic_transaction_t *mem_op, char *buf) { assert(0); return; };$/;"	f
SIM_c_set_mem_op_value_buf	simics/simics_api_dummy.c	/^void SIM_c_set_mem_op_value_buf(generic_transaction_t *mem_op, char *buf) { assert(0); return; };$/;"	f
SIM_calculate_time	network/orion/SIM_time.c	/^void SIM_calculate_time(time_result_type *result, time_parameter_type *parameters)$/;"	f
SIM_cam_comp_mismatch_cap	network/orion/SIM_cam.c	/^double SIM_cam_comp_mismatch_cap( u_int n_bits, u_int n_pre, double matchline_len )$/;"	f
SIM_cam_comp_mismatch_cap	network/orion_old/power_array.C	/^double SIM_cam_comp_mismatch_cap( unsigned n_bits, unsigned n_pre, double matchline_len )$/;"	f
SIM_cam_comp_miss_cap	network/orion/SIM_cam.c	/^double SIM_cam_comp_miss_cap( u_int assoc )$/;"	f
SIM_cam_comp_miss_cap	network/orion_old/power_array.C	/^double SIM_cam_comp_miss_cap( unsigned assoc )$/;"	f
SIM_cam_comp_tagline_cap	network/orion/SIM_cam.c	/^double SIM_cam_comp_tagline_cap( u_int rows, double taglinelength )$/;"	f
SIM_cam_comp_tagline_cap	network/orion_old/power_array.C	/^double SIM_cam_comp_tagline_cap( unsigned rows, double taglinelength )$/;"	f
SIM_cam_data_mem_cap	network/orion/SIM_cam.c	/^double SIM_cam_data_mem_cap( u_int read_ports, u_int write_ports )$/;"	f
SIM_cam_data_mem_cap	network/orion_old/power_array.C	/^double SIM_cam_data_mem_cap( unsigned read_ports, unsigned write_ports )$/;"	f
SIM_cam_tag_mem_cap	network/orion/SIM_cam.c	/^double SIM_cam_tag_mem_cap( u_int read_ports, u_int write_ports, int share_rw, u_int end, int only_write )$/;"	f
SIM_cam_tag_mem_cap	network/orion_old/power_array.C	/^double SIM_cam_tag_mem_cap( unsigned read_ports, unsigned write_ports, int share_rw, unsigned end, int only_write )$/;"	f
SIM_cam_wordline_cap	network/orion/SIM_cam.c	/^double SIM_cam_wordline_cap( u_int cols, double wire_cap, double tx_width )$/;"	f
SIM_cam_wordline_cap	network/orion_old/power_array.C	/^double SIM_cam_wordline_cap( unsigned cols, double wire_cap, double tx_width )$/;"	f
SIM_clear_exception	simics/simics_api_dummy.c	/^sim_exception_t SIM_clear_exception(void) { assert(0); return 0; };$/;"	f
SIM_comp_model_t	network/orion/SIM_array_model.h	/^} SIM_comp_model_t;$/;"	t	typeref:enum:__anon30
SIM_compare_time	network/orion/SIM_time.c	/^double SIM_compare_time(int C, int A, int Ntbl, int Ntspd, double inputtime, double *outputtime)$/;"	f
SIM_conf_object_to_processor	simics/simics_api_dummy.c	/^processor_t *SIM_conf_object_to_processor(conf_object_t* obj) { assert(0); return 0; };$/;"	f
SIM_connect_t	network/orion/SIM_router_model.h	/^} SIM_connect_t;$/;"	t	typeref:enum:__anon53
SIM_cpu_enabled	simics/simics_api_dummy.c	/^int  SIM_cpu_enabled(conf_object_t *p)       { assert(0); };$/;"	f
SIM_crossbar_ctr_cap	network/orion/SIM_crossbar.c	/^static double SIM_crossbar_ctr_cap(double length, u_int data_width, int prev_ctr, int next_ctr, u_int degree, int connect_type, int trans_type)$/;"	f	file:
SIM_crossbar_in_cap	network/orion/SIM_crossbar.c	/^static double SIM_crossbar_in_cap(double wire_cap, u_int n_out, double n_seg, int connect_type, int trans_type, double *Nsize)$/;"	f	file:
SIM_crossbar_init	network/orion/SIM_crossbar.c	/^int SIM_crossbar_init(SIM_crossbar_t *crsbar, int model, u_int n_in, u_int n_out, u_int in_seg, u_int out_seg, u_int data_width, u_int degree, int connect_type, int trans_type, double in_len, double out_len, double *req_len)$/;"	f
SIM_crossbar_int_cap	network/orion/SIM_crossbar.c	/^static double SIM_crossbar_int_cap(u_int degree, int connect_type, int trans_type)$/;"	f	file:
SIM_crossbar_io_cap	network/orion/SIM_crossbar.c	/^static double SIM_crossbar_io_cap(double length)$/;"	f	file:
SIM_crossbar_model_t	network/orion/SIM_router_model.h	/^} SIM_crossbar_model_t;$/;"	t	typeref:enum:__anon51
SIM_crossbar_out_cap	network/orion/SIM_crossbar.c	/^static double SIM_crossbar_out_cap(double length, u_int n_in, double n_seg, int connect_type, int trans_type, double *Nsize)$/;"	f	file:
SIM_crossbar_record	network/orion/SIM_crossbar.c	/^int SIM_crossbar_record(SIM_crossbar_t *xb, int io, LIB_Type_max_uint new_data, LIB_Type_max_uint old_data, u_int new_port, u_int old_port)$/;"	f
SIM_crossbar_report	network/orion/SIM_crossbar.c	/^double SIM_crossbar_report(SIM_crossbar_t *crsbar)$/;"	f
SIM_crossbar_stat_energy	network/orion/SIM_crossbar.c	/^double SIM_crossbar_stat_energy(SIM_crossbar_t *crsbar, int print_depth, char *path, int max_avg, double n_data)$/;"	f
SIM_crossbar_stat_energy	network/orion_old/NetworkPower.C	/^double SIM_crossbar_stat_energy(power_crossbar *crsbar, double n_data)$/;"	f
SIM_crossbar_t	network/orion/SIM_crossbar.h	/^} SIM_crossbar_t;$/;"	t	typeref:struct:__anon32
SIM_current_processor	simics/simics_api_dummy.c	/^processor_t *SIM_current_processor(void) { assert(0); return 0; };$/;"	f
SIM_cycle_count	simics/simics_api_dummy.c	/^cycles_t SIM_cycle_count(conf_object_t *p) { assert(0); return 0; };$/;"	f
SIM_dataoutput_delay	network/orion/SIM_time.c	/^double SIM_dataoutput_delay(int C, int B, int A, int Ndbl, int Nspd, int Ndwl,$/;"	f
SIM_dec_model_t	network/orion/SIM_array_model.h	/^} SIM_dec_model_t;$/;"	t	typeref:enum:__anon23
SIM_decoder_delay	network/orion/SIM_time.c	/^double SIM_decoder_delay(int C, int B, int A, int Ndwl, int Ndbl, int Nspd, int Ntwl, int Ntbl, int Ntspd, double *Tdecdrive,$/;"	f
SIM_decoder_tag_delay	network/orion/SIM_time.c	/^double SIM_decoder_tag_delay(int C, int B, int A, int Ndwl, int Ndbl, int Nspd, int Ntwl, int Ntbl, int Ntspd, $/;"	f
SIM_disable_processor	simics/simics_api_dummy.c	/^void SIM_disable_processor(conf_object_t *p) { assert(0); };$/;"	f
SIM_disassemble	simics/simics_api_dummy.c	/^const char *SIM_disassemble(processor_t *cpu_ptr, physical_address_t pa, int type) { assert(0); return 0; };$/;"	f
SIM_draincap	network/orion/SIM_time.c	/^double SIM_draincap(double width, int nchannel, int stack)$/;"	f
SIM_driver_size	network/orion/SIM_util.c	/^double SIM_driver_size(double driving_cap, double desiredrisetime)$/;"	f
SIM_dump_tech_para	network/orion/SIM_util.c	/^int SIM_dump_tech_para(void)$/;"	f
SIM_enable_processor	simics/simics_api_dummy.c	/^void SIM_enable_processor(conf_object_t *p) { assert(0); };$/;"	f
SIM_ff_t	network/orion/SIM_misc.h	/^} SIM_ff_t;$/;"	t	typeref:struct:__anon35
SIM_flush	simics/simics_api_dummy.c	/^int SIM_flush(void) { assert(0); return 0; };$/;"	f
SIM_fpfp_clear_stat	network/orion/SIM_misc.c	/^int SIM_fpfp_clear_stat(SIM_ff_t *ff)$/;"	f
SIM_fpfp_clear_stat	network/orion_old/power_arbiter.C	/^int SIM_fpfp_clear_stat(power_ff *ff)$/;"	f
SIM_fpfp_clock_cap	network/orion/SIM_misc.c	/^static double SIM_fpfp_clock_cap(void)$/;"	f	file:
SIM_fpfp_clock_cap	network/orion_old/power_arbiter.C	/^static double SIM_fpfp_clock_cap(void)$/;"	f	file:
SIM_fpfp_init	network/orion/SIM_misc.c	/^int SIM_fpfp_init(SIM_ff_t *ff, int model, double load)$/;"	f
SIM_fpfp_init	network/orion_old/power_arbiter.C	/^int SIM_fpfp_init(power_ff *ff, int model, double load)$/;"	f
SIM_fpfp_node_cap	network/orion/SIM_misc.c	/^static double SIM_fpfp_node_cap(u_int fan_in, u_int fan_out)$/;"	f	file:
SIM_fpfp_node_cap	network/orion_old/power_arbiter.C	/^static double SIM_fpfp_node_cap(unsigned fan_in, unsigned fan_out)$/;"	f	file:
SIM_fpfp_report	network/orion/SIM_misc.c	/^double SIM_fpfp_report(SIM_ff_t *ff)$/;"	f
SIM_fpfp_report	network/orion_old/power_arbiter.C	/^double SIM_fpfp_report(power_ff *ff)$/;"	f
SIM_free_attribute	simics/simics_api_dummy.c	/^void SIM_free_attribute(attr_value_t *value) { assert(0); };$/;"	f
SIM_gatecap	network/orion/SIM_time.c	/^double SIM_gatecap(double width,double wirelength)$/;"	f
SIM_gatecappass	network/orion/SIM_time.c	/^double SIM_gatecappass(double width, double wirelength)$/;"	f
SIM_generic_bus_cap	network/orion/SIM_misc.c	/^static double SIM_generic_bus_cap(u_int n_snd, u_int n_rcv, double length, double time)$/;"	f	file:
SIM_generic_bus_cap	network/orion_old/power_bus.C	/^static double SIM_generic_bus_cap(unsigned n_snd, unsigned n_rcv, double length, double time)$/;"	f	file:
SIM_get_attribute	simics/simics_api_dummy.c	/^attr_value_t SIM_get_attribute(conf_object_t *object, const char *name) { assert(0); };$/;"	f
SIM_get_exception_name	simics/simics_api_dummy.c	/^const char * SIM_get_exception_name( processor_t * p, int exc ) { assert(0); return 0;};$/;"	f
SIM_get_interface	simics/simics_api_dummy.c	/^interface_t *SIM_get_interface(conf_object const *object, const char *interface_name) { assert(0); return 0; };$/;"	f
SIM_get_object	simics/simics_api_dummy.c	/^conf_object_t *SIM_get_object(const char *name) { assert(0); return 0; };$/;"	f
SIM_get_pending_exception	simics/simics_api_dummy.c	/^sim_exception_t SIM_get_pending_exception(void) { assert(0); return 0; };$/;"	f
SIM_get_proc_no	simics/simics_api_dummy.c	/^int SIM_get_proc_no(const processor_t *cpu_ptr) { assert(0); return 0; };$/;"	f
SIM_get_program_counter	simics/simics_api_dummy.c	/^la_t SIM_get_program_counter(processor_t *cpu) { assert(0); return 0; };$/;"	f
SIM_get_register_name	simics/simics_api_dummy.c	/^const char * SIM_get_register_name(processor_t *cpu_ptr, int reg_num){ assert(0); return 0; }$/;"	f
SIM_get_register_number	simics/simics_api_dummy.c	/^int SIM_get_register_number(processor_t *cpu_ptr, const char * register_name){ assert(0); return 0; }$/;"	f
SIM_grp_in_cap	network/orion/SIM_permu.c	/^static double SIM_grp_in_cap(void)$/;"	f	file:
SIM_grp_lin_cap	network/orion/SIM_permu.c	/^static double SIM_grp_lin_cap(u_int stg)$/;"	f	file:
SIM_grp_oin_cap	network/orion/SIM_permu.c	/^static double SIM_grp_oin_cap(u_int stg)$/;"	f	file:
SIM_grp_out_cap	network/orion/SIM_permu.c	/^static double SIM_grp_out_cap(void)$/;"	f	file:
SIM_grp_record	network/orion/SIM_permu.c	/^inline static int SIM_grp_record(SIM_grp_t *grp, LIB_Type_max_uint in, LIB_Type_max_uint op, int reset)$/;"	f	file:
SIM_grp_record_test	network/orion/SIM_permu.c	/^inline static LIB_Type_max_uint SIM_grp_record_test(SIM_grp_t *grp, LIB_Type_max_uint in, LIB_Type_max_uint op)$/;"	f	file:
SIM_grp_reset	network/orion/SIM_permu.c	/^static int SIM_grp_reset(SIM_grp_t *grp)$/;"	f	file:
SIM_grp_rin_cap	network/orion/SIM_permu.c	/^static double SIM_grp_rin_cap(u_int stg)$/;"	f	file:
SIM_grp_stg	network/orion/SIM_permu.c	/^inline static LIB_Type_max_uint SIM_grp_stg(LIB_Type_max_uint zin, u_int *lin, u_int width, u_int stg, int zw)$/;"	f	file:
SIM_grp_t	network/orion/SIM_permu.h	/^} SIM_grp_t;$/;"	t	typeref:struct:__anon41
SIM_grp_zin_cap	network/orion/SIM_permu.c	/^static double SIM_grp_zin_cap(u_int stg)$/;"	f	file:
SIM_hap_add_callback	simics/simics_api_dummy.c	/^hap_handle_t SIM_hap_add_callback(const char *id, str_hap_func_t cb, lang_void *data) { assert(0); return 0; };$/;"	f
SIM_hap_delete_callback_id	simics/simics_api_dummy.c	/^void SIM_hap_delete_callback_id(hap_type_t hap, hap_handle_t hdl) { assert (0); return; };$/;"	f
SIM_hap_get_number	simics/simics_api_dummy.c	/^hap_type_t SIM_hap_get_number(const char *id) { assert(0); return 0; };$/;"	f
SIM_horowitz	network/orion/SIM_time.c	/^double SIM_horowitz(double inputramptime, double tf, double vs1, double vs2, int rise)$/;"	f
SIM_init	network/orion/SIM_util.c	/^int SIM_init(void)$/;"	f
SIM_iwin_sel_anyreq_cap	network/orion/SIM_misc.c	/^static double SIM_iwin_sel_anyreq_cap(u_int width)$/;"	f	file:
SIM_iwin_sel_chgreq_cap	network/orion/SIM_misc.c	/^static double SIM_iwin_sel_chgreq_cap(void)$/;"	f	file:
SIM_iwin_sel_enc_cap	network/orion/SIM_misc.c	/^static double SIM_iwin_sel_enc_cap(u_int level)$/;"	f	file:
SIM_iwin_sel_grant_cap	network/orion/SIM_misc.c	/^static double SIM_iwin_sel_grant_cap(u_int width)$/;"	f	file:
SIM_iwin_sel_init	network/orion/SIM_misc.c	/^static int SIM_iwin_sel_init(SIM_sel_t *sel, int model, u_int width)$/;"	f	file:
SIM_iwin_sel_record	network/orion/SIM_misc.c	/^int SIM_iwin_sel_record(SIM_sel_t *sel, u_int req, int en, int last_level)$/;"	f
SIM_iwin_sel_report	network/orion/SIM_misc.c	/^double SIM_iwin_sel_report(SIM_sel_t *sel)$/;"	f
SIM_last_error	simics/simics_api_dummy.c	/^const char *SIM_last_error(void) { assert(0); return 0; };$/;"	f
SIM_logical_to_physical	simics/simics_api_dummy.c	/^physical_address_t SIM_logical_to_physical(conf_object *cpu_ptr, data_or_instr_t data_or_instr, logical_address_t address) { assert(0); return 0; };$/;"	f
SIM_logtwo	network/orion/SIM_util.c	/^u_int SIM_logtwo(LIB_Type_max_uint x)$/;"	f
SIM_matrix_arbiter_grant_cap	network/orion/SIM_arbiter.c	/^static double SIM_matrix_arbiter_grant_cap(u_int req_width)$/;"	f	file:
SIM_matrix_arbiter_int_cap	network/orion/SIM_arbiter.c	/^static double SIM_matrix_arbiter_int_cap()$/;"	f	file:
SIM_matrix_arbiter_pri_cap	network/orion/SIM_arbiter.c	/^static double SIM_matrix_arbiter_pri_cap(u_int req_width)$/;"	f	file:
SIM_matrix_arbiter_req_cap	network/orion/SIM_arbiter.c	/^static double SIM_matrix_arbiter_req_cap(u_int req_width, double length)$/;"	f	file:
SIM_mem_model_t	network/orion/SIM_array_model.h	/^} SIM_mem_model_t;$/;"	t	typeref:enum:__anon29
SIM_mux_driver_delay	network/orion/SIM_time.c	/^double SIM_mux_driver_delay(int C, int B, int A, int Ndbl, int Nspd, int Ndwl, int Ntbl, int Ntspd, double inputtime, double *outputtime)$/;"	f
SIM_mux_model_t	network/orion/SIM_array_model.h	/^} SIM_mux_model_t;$/;"	t	typeref:enum:__anon24
SIM_number_processors	simics/simics_api_dummy.c	/^void SIM_number_processors() { assert(0); return; };$/;"	f
SIM_omflip_ctr_cap	network/orion/SIM_permu.c	/^static double SIM_omflip_ctr_cap(u_int n_ctr, double length)$/;"	f	file:
SIM_omflip_flip	network/orion/SIM_permu.c	/^inline static LIB_Type_max_uint SIM_omflip_flip(LIB_Type_max_uint in, u_int width, int pass, LIB_Type_max_uint ctr)$/;"	f	file:
SIM_omflip_in_cap	network/orion/SIM_permu.c	/^static double SIM_omflip_in_cap(double length)$/;"	f	file:
SIM_omflip_int_cap	network/orion/SIM_permu.c	/^static double SIM_omflip_int_cap(void)$/;"	f	file:
SIM_omflip_omega	network/orion/SIM_permu.c	/^inline static LIB_Type_max_uint SIM_omflip_omega(LIB_Type_max_uint in, u_int width, LIB_Type_max_uint mask, int pass, LIB_Type_max_uint ctr)$/;"	f	file:
SIM_omflip_out_cap	network/orion/SIM_permu.c	/^static double SIM_omflip_out_cap(void)$/;"	f	file:
SIM_omflip_record	network/orion/SIM_permu.c	/^inline static int SIM_omflip_record(SIM_omflip_t *omflip, LIB_Type_max_uint in, u_int mode, LIB_Type_max_uint op, int reset)$/;"	f	file:
SIM_omflip_record_test	network/orion/SIM_permu.c	/^inline static LIB_Type_max_uint SIM_omflip_record_test(SIM_omflip_t *omflip, LIB_Type_max_uint in, u_int mode, LIB_Type_max_uint op)$/;"	f	file:
SIM_omflip_reset	network/orion/SIM_permu.c	/^static int SIM_omflip_reset(SIM_omflip_t *omflip)$/;"	f	file:
SIM_omflip_stg_cap	network/orion/SIM_permu.c	/^static double SIM_omflip_stg_cap(double length)$/;"	f	file:
SIM_omflip_t	network/orion/SIM_permu.h	/^} SIM_omflip_t;$/;"	t	typeref:struct:__anon40
SIM_organizational_parameters_valid	network/orion/SIM_time.c	/^int SIM_organizational_parameters_valid(int rows, int cols, int Ndwl, int Ndbl, int Nspd, int Ntwl, int Ntbl, int Ntspd)$/;"	f
SIM_outdrv_model_t	network/orion/SIM_array_model.h	/^} SIM_outdrv_model_t;$/;"	t	typeref:enum:__anon31
SIM_permu_init	network/orion/SIM_permu.c	/^int SIM_permu_init(SIM_permu_t *permu, int model, u_int data_width)$/;"	f
SIM_permu_max_energy	network/orion/SIM_permu.c	/^double SIM_permu_max_energy(SIM_permu_t *permu)$/;"	f
SIM_permu_record	network/orion/SIM_permu.c	/^int SIM_permu_record(SIM_permu_t *permu, LIB_Type_max_uint in, u_int mode, LIB_Type_max_uint op, int reset)$/;"	f
SIM_permu_record_test	network/orion/SIM_permu.c	/^LIB_Type_max_uint SIM_permu_record_test(SIM_permu_t *permu, LIB_Type_max_uint in, u_int mode, LIB_Type_max_uint op)$/;"	f
SIM_permu_report	network/orion/SIM_permu.c	/^double SIM_permu_report(SIM_permu_t *permu)$/;"	f
SIM_permu_t	network/orion/SIM_permu.h	/^} SIM_permu_t;$/;"	t	typeref:struct:__anon42
SIM_power_ALU_model_t	network/orion/SIM_ALU_model.h	/^} SIM_power_ALU_model_t;$/;"	t	typeref:enum:__anon5
SIM_power_Hamming	network/orion_old/power_utils.C	/^unsigned SIM_power_Hamming(unsigned long int old_val, unsigned long int new_val, unsigned long int mask)$/;"	f
SIM_power_Hamming_group	network/orion_old/power_utils.C	/^unsigned SIM_power_Hamming_group(unsigned long int d1_new, unsigned long int d1_old, unsigned long int d2_new, unsigned long int d2_old, unsigned width, unsigned n_grp)$/;"	f
SIM_power_Hamming_slow	network/orion_old/power_utils.C	/^static unsigned SIM_power_Hamming_slow( unsigned long int old_val, unsigned long int new_val, unsigned long int mask )$/;"	f	file:
SIM_power_array_data_read	network/orion_old/power_array.C	/^int SIM_power_array_data_read( power_array_info *info, power_array *arr, unsigned long int data )$/;"	f
SIM_power_array_data_write	network/orion_old/power_array.C	/^int SIM_power_array_data_write( power_array_info *info, power_array *arr, SIM_array_set_state_t *set, unsigned n_item, char *data_line, char *old_data, char *new_data )$/;"	f
SIM_power_array_dec	network/orion_old/power_array.C	/^int SIM_power_array_dec( power_array_info *info, power_array *arr, SIM_array_port_state_t *port, unsigned long int row_addr, int rw )$/;"	f
SIM_power_array_tag_read	network/orion_old/power_array.C	/^int SIM_power_array_tag_read( power_array_info *info, power_array *arr, SIM_array_set_state_t *set )$/;"	f
SIM_power_bus_enc_t	network/orion/SIM_misc_model.h	/^} SIM_power_bus_enc_t;$/;"	t	typeref:enum:__anon39
SIM_power_bus_model_t	network/orion/SIM_misc_model.h	/^} SIM_power_bus_model_t;$/;"	t	typeref:enum:__anon36
SIM_power_draincap	network/orion_old/power_ll.C	/^double SIM_power_draincap(double width,int nchannel,int stack)  \/* returns drain cap in Farads *\/$/;"	f
SIM_power_driver_size	network/orion_old/power_ll.C	/^double SIM_power_driver_size(double driving_cap, double desiredrisetime)$/;"	f
SIM_power_ff_model_t	network/orion/SIM_misc_model.h	/^} SIM_power_ff_model_t;$/;"	t	typeref:enum:__anon38
SIM_power_gatecap	network/orion_old/power_ll.C	/^double SIM_power_gatecap(double width,double wirelength) \/* returns gate capacitance in Farads *\/$/;"	f
SIM_power_gatecappass	network/orion_old/power_ll.C	/^double SIM_power_gatecappass(double width,double wirelength) \/* returns gate capacitance in Farads *\/$/;"	f
SIM_power_horowitz	network/orion_old/power_ll.C	/^double SIM_power_horowitz(double inputramptime,double tf,double vs1,double vs2,int rise)$/;"	f
SIM_power_init	network/orion_old/power_utils.C	/^int SIM_power_init(void)$/;"	f
SIM_power_logtwo	network/orion_old/power_utils.C	/^unsigned SIM_power_logtwo(unsigned long int x)$/;"	f
SIM_power_permu_model_t	network/orion/SIM_permu_model.h	/^} SIM_power_permu_model_t;$/;"	t	typeref:enum:__anon44
SIM_power_restowidth	network/orion_old/power_ll.C	/^double SIM_power_restowidth(double res,int nchannel)  \/* returns width in um *\/$/;"	f
SIM_power_sel_model_t	network/orion/SIM_misc_model.h	/^} SIM_power_sel_model_t;$/;"	t	typeref:enum:__anon37
SIM_power_transreson	network/orion_old/power_ll.C	/^double SIM_power_transreson(double width,int nchannel,int stack)  \/* returns resistance in ohms *\/$/;"	f
SIM_power_transresswitch	network/orion_old/power_ll.C	/^double SIM_power_transresswitch(double width,int nchannel,int stack)  \/* returns resistance in ohms *\/$/;"	f
SIM_pre_model_t	network/orion/SIM_array_model.h	/^} SIM_pre_model_t;$/;"	t	typeref:enum:__anon28
SIM_precharge_delay	network/orion/SIM_time.c	/^double SIM_precharge_delay(double worddata)$/;"	f
SIM_print_stat_energy	network/orion/SIM_util.c	/^int SIM_print_stat_energy(char *path, double Energy, int print_flag)$/;"	f
SIM_printf	simics/simics_api_dummy.c	/^void SIM_printf(const char *format, va_list ap){ assert(0); }$/;"	f
SIM_proc_no_2_ptr	simics/simics_api_dummy.c	/^processor_t *SIM_proc_no_2_ptr(int cpu_nr) { assert(0); return 0; };$/;"	f
SIM_processor_to_conf_object	simics/simics_api_dummy.c	/^conf_object_t *SIM_processor_to_conf_object(processor_t* p) { assert(0); return 0; };$/;"	f
SIM_read_control_register	simics/simics_api_dummy.c	/^ireg_t SIM_read_control_register(processor_t *cpu_ptr, int reg) { assert(0); return 0; };$/;"	f
SIM_read_fp_register_d	simics/simics_api_dummy.c	/^double SIM_read_fp_register_d(processor_t *cpu_ptr, int reg) { assert(0); return 0; };$/;"	f
SIM_read_fp_register_x	simics/simics_api_dummy.c	/^uint64 SIM_read_fp_register_x(processor_t *cpu_ptr, int reg) { assert(0); return 0; };$/;"	f
SIM_read_global_register	simics/simics_api_dummy.c	/^ireg_t SIM_read_global_register(processor_t *cpu_ptr, int globals, int reg) { assert(0); return 0; };$/;"	f
SIM_read_phys_memory	simics/simics_api_dummy.c	/^integer_t SIM_read_phys_memory(conf_object *cpu, physical_address_t address, int len) { assert(0); return 0; };$/;"	f
SIM_read_register	simics/simics_api_dummy.c	/^integer_t SIM_read_register(processor_t *cpu_ptr, int registerNumber) { assert(0); return 0; };$/;"	f
SIM_read_window_register	simics/simics_api_dummy.c	/^ireg_t SIM_read_window_register(processor_t *cpu_ptr, int window, int reg) { assert(0); return 0; };$/;"	f
SIM_reg_port_state_init	network/orion/SIM_reg.c	/^static int SIM_reg_port_state_init(SIM_power_array_info_t *info, SIM_reg_port_state_t *port, u_int n_port)$/;"	f	file:
SIM_reg_port_state_t	network/orion/SIM_reg.h	/^} SIM_reg_port_state_t;$/;"	t	typeref:struct:__anon45
SIM_reg_stat_energy	network/orion_old/NetworkPower.C	/^double SIM_reg_stat_energy(power_array_info *info, power_array *arr, double n_read, double n_write)$/;"	f
SIM_res_path	network/orion/SIM_util.c	/^int SIM_res_path(char *path, u_int id)$/;"	f
SIM_restowidth	network/orion/SIM_time.c	/^double SIM_restowidth(double res, int nchannel)$/;"	f
SIM_resultbus_cap	network/orion/SIM_misc.c	/^static double SIM_resultbus_cap(void)$/;"	f	file:
SIM_resultbus_cap	network/orion_old/power_bus.C	/^static double SIM_resultbus_cap(void)$/;"	f	file:
SIM_router_area	network/orion/SIM_router_area.c	/^double SIM_router_area(SIM_router_area_t *router_area)$/;"	f
SIM_router_area_init	network/orion/SIM_router_area.c	/^int SIM_router_area_init(SIM_router_info_t *info, SIM_router_area_t *router_area)$/;"	f
SIM_router_area_t	network/orion/SIM_router.h	/^} SIM_router_area_t;$/;"	t	typeref:struct:__anon46
SIM_router_info_t	network/orion/SIM_router.h	/^} SIM_router_info_t;$/;"	t	typeref:struct:__anon48
SIM_router_init	network/orion/SIM_router.c	/^int SIM_router_init(SIM_router_info_t *info, SIM_router_power_t *router_power, SIM_router_area_t *router_area)$/;"	f
SIM_router_power_init	network/orion/SIM_router_power.c	/^int SIM_router_power_init(SIM_router_info_t *info, SIM_router_power_t *router)$/;"	f
SIM_router_power_report	network/orion/SIM_router_power.c	/^int SIM_router_power_report(SIM_router_info_t *info, SIM_router_power_t *router)$/;"	f
SIM_router_power_t	network/orion/SIM_router.h	/^} SIM_router_power_t;$/;"	t	typeref:struct:__anon47
SIM_router_stat_energy	network/orion/SIM_router_power.c	/^double SIM_router_stat_energy(SIM_router_info_t *info, SIM_router_power_t *router, int print_depth, char *path, int max_avg, double e_fin, int plot_flag, double freq)$/;"	f
SIM_rr_arbiter_carry_cap	network/orion/SIM_arbiter.c	/^static double SIM_rr_arbiter_carry_cap()$/;"	f	file:
SIM_rr_arbiter_carry_in_cap	network/orion/SIM_arbiter.c	/^static double SIM_rr_arbiter_carry_in_cap()$/;"	f	file:
SIM_rr_arbiter_grant_cap	network/orion/SIM_arbiter.c	/^static double SIM_rr_arbiter_grant_cap()$/;"	f	file:
SIM_rr_arbiter_pri_cap	network/orion/SIM_arbiter.c	/^static double SIM_rr_arbiter_pri_cap()$/;"	f	file:
SIM_rr_arbiter_req_cap	network/orion/SIM_arbiter.c	/^static double SIM_rr_arbiter_req_cap(double length)$/;"	f	file:
SIM_sel_t	network/orion/SIM_misc.h	/^} SIM_sel_t;$/;"	t	typeref:struct:__anon34
SIM_selb_delay_tag_path	network/orion/SIM_time.c	/^double SIM_selb_delay_tag_path(double inrisetime, double *outrisetime)$/;"	f
SIM_sense_amp_delay	network/orion/SIM_time.c	/^double SIM_sense_amp_delay(double inrisetime,double *outrisetime)$/;"	f
SIM_sense_amp_tag_delay	network/orion/SIM_time.c	/^double SIM_sense_amp_tag_delay(double inrisetime, double *outrisetime)$/;"	f
SIM_set_attribute	simics/simics_api_dummy.c	/^set_error_t SIM_set_attribute(conf_object_t *object, char const *name, attr_value_t *value) { assert(0); return 0; };$/;"	f
SIM_set_program_counter	simics/simics_api_dummy.c	/^void SIM_set_program_counter(conf_object_t *cpu, logical_address_t pc){assert(0);};$/;"	f
SIM_squarify	network/orion/SIM_util.c	/^int SIM_squarify( int rows, int cols )$/;"	f
SIM_stacked_post	simics/simics_api_dummy.c	/^  void SIM_stacked_post(conf_object_t *obj, event_handler_t, lang_void *arg){};$/;"	f
SIM_stall	simics/simics_api_dummy.c	/^void SIM_stall(conf_object_t *obj, cycles_t stall) { assert(0); return; };$/;"	f
SIM_stall_count	simics/simics_api_dummy.c	/^cycles_t SIM_stall_count(conf_object_t *obj) { assert(0); return 0; };$/;"	f
SIM_stall_cycle	simics/simics_api_dummy.c	/^void SIM_stall_cycle(conf_object_t *obj, cycles_t stall) { assert(0); return; };$/;"	f
SIM_stalled_until	simics/simics_api_dummy.c	/^cycles_t SIM_stalled_until(conf_object_t *p) { assert(0); return 0; };$/;"	f
SIM_step_count	simics/simics_api_dummy.c	/^pc_step_t SIM_step_count(conf_object_t *p) { assert(0); return 0; };$/;"	f
SIM_step_next_occurrence	simics/simics_api_dummy.c	/^  pc_step_t SIM_step_next_occurrence( conf_object_t * obj, event_handler_t, lang_void * arg){ assert(0); return 0;};$/;"	f
SIM_strcat	network/orion/SIM_util.c	/^char *SIM_strcat(char *dest, const char *src)$/;"	f
SIM_strlen	network/orion/SIM_util.c	/^u_int SIM_strlen(char *s)$/;"	f
SIM_time_clean	simics/simics_api_dummy.c	/^void SIM_time_clean(conf_object_t *obj, sync_t t, event_handler_t handler, lang_void * arg) { assert(0); return; };$/;"	f
SIM_time_post_cycle	simics/simics_api_dummy.c	/^void SIM_time_post_cycle(conf_object_t * obj, cycles_t delta, sync_t sync, event_handler_t handler, lang_void * arg) { assert(0); return; };$/;"	f
SIM_total_clockEnergy	network/orion/SIM_clock.c	/^double SIM_total_clockEnergy(SIM_router_info_t *info, SIM_router_power_t *router)$/;"	f
SIM_trans_t	network/orion/SIM_router_model.h	/^} SIM_trans_t;$/;"	t	typeref:enum:__anon54
SIM_transreson	network/orion/SIM_time.c	/^double SIM_transreson(double width, int nchannel, int stack)$/;"	f
SIM_transresswitch	network/orion/SIM_time.c	/^double SIM_transresswitch(double width, int nchannel, int stack)$/;"	f
SIM_valid_driver_delay	network/orion/SIM_time.c	/^double SIM_valid_driver_delay(int C, int A, int Ntbl, int Ntspd, double inputtime)$/;"	f
SIM_vc_allocator_model_t	network/orion/SIM_router_model.h	/^}SIM_vc_allocator_model_t;$/;"	t	typeref:enum:__anon49
SIM_version	simics/simics_api_dummy.c	/^const char *SIM_version(void) { return 0; };$/;"	f
SIM_wordline_delay	network/orion/SIM_time.c	/^double SIM_wordline_delay(int B, int A, int Ndwl, int Nspd, double inrisetime, double *outrisetime)$/;"	f
SIM_wordline_model_t	network/orion/SIM_array_model.h	/^} SIM_wordline_model_t;$/;"	t	typeref:enum:__anon26
SIM_wordline_tag_delay	network/orion/SIM_time.c	/^double SIM_wordline_tag_delay(int C, int A, int Ntspd, int Ntwl, double inrisetime, double *outrisetime)$/;"	f
SIM_write_control_register	simics/simics_api_dummy.c	/^void SIM_write_control_register(processor_t *cpu_ptr, int reg, ireg_t value) { assert(0); return; };$/;"	f
SIM_write_fp_register_x	simics/simics_api_dummy.c	/^void SIM_write_fp_register_x(processor_t *cpu_ptr, int reg, uint64 value) { assert(0); return; };$/;"	f
SIM_write_global_register	simics/simics_api_dummy.c	/^void SIM_write_global_register(processor_t *cpu_ptr, int globals, int reg, ireg_t value) { assert(0); return; };$/;"	f
SIM_write_phys_memory	simics/simics_api_dummy.c	/^void SIM_write_phys_memory(conf_object *cpu, physical_address_t address, integer_t value, int len) { assert(0); };$/;"	f
SIM_write_register	simics/simics_api_dummy.c	/^void SIM_write_register(processor_t *cpu_ptr, int registerNumber, integer_t value){ assert(0); };$/;"	f
SIM_write_window_register	simics/simics_api_dummy.c	/^void SIM_write_window_register(processor_t *cpu_ptr, int window, int reg, ireg_t value) { assert(0); return; };$/;"	f
SINGLE_BITLINE	network/orion/SIM_array_model.h	/^	SINGLE_BITLINE = 1,$/;"	e	enum:__anon28
SINGLE_BITLINE	network/orion_old/power_array.h	/^	SINGLE_BITLINE =1,$/;"	e	enum:__anon64
SINGLE_OTHER	network/orion/SIM_array_model.h	/^	SINGLE_OTHER,$/;"	e	enum:__anon28
SINGLE_OTHER	network/orion_old/power_array.h	/^	SINGLE_OTHER,$/;"	e	enum:__anon64
SLASHCOMMENT	generated/MI_example/attrlex.c	615;"	d	file:
SLICC_UTIL_H	slicc_interface/RubySlicc_Util.h	67;"	d
SPECIFIEDGENERATOR_H	tester/SpecifiedGenerator.h	65;"	d
SRAM	network/orion/SIM_router_model.h	/^	SRAM = 1,$/;"	e	enum:__anon50
SRCS	network/orion/Makefile	/^SRCS         = $(ARRAY_MODEL) $(ROUTER_MODEL) $(POWER_MODEL) $(ALU_MODEL) $(OTHER_MODEL) \\$/;"	m
SRC_C	Makefile	/^SRC_C = \\$/;"	m
SRC_CPP	Makefile	/^	SRC_CPP := \\$/;"	m
SRC_CPP	Makefile	/^SRC_CPP := \\$/;"	m
SRC_FILES	depreceated/module/Makefile	/^SRC_FILES = ruby.c$/;"	m
SRC_GENERATED	Makefile	/^SRC_GENERATED := $(notdir $(shell ls $(GENERATED_DIR)\/*.C))$/;"	m
SSCALE	network/orion/SIM_technology_v1.h	101;"	d
SSCALE	network/orion/SIM_technology_v1.h	113;"	d
SSCALE	network/orion/SIM_technology_v1.h	53;"	d
SSCALE	network/orion/SIM_technology_v1.h	65;"	d
SSCALE	network/orion/SIM_technology_v1.h	77;"	d
SSCALE	network/orion/SIM_technology_v1.h	89;"	d
SSCALE	network/orion_old/SIM_power.h	110;"	d
SSCALE	network/orion_old/SIM_power.h	122;"	d
SSCALE	network/orion_old/SIM_power.h	134;"	d
SSCALE	network/orion_old/SIM_power.h	146;"	d
SSCALE	network/orion_old/SIM_power.h	158;"	d
SSCALE	network/orion_old/SIM_power.h	170;"	d
SSCALE	network/orion_old/SIM_power.h	96;"	d
SSCALE	network/orion_old/parm_technology.h	106;"	d
SSCALE	network/orion_old/parm_technology.h	118;"	d
SSCALE	network/orion_old/parm_technology.h	130;"	d
SSCALE	network/orion_old/parm_technology.h	142;"	d
SSCALE	network/orion_old/parm_technology.h	154;"	d
SSCALE	network/orion_old/parm_technology.h	166;"	d
SSCALE	network/orion_old/parm_technology.h	92;"	d
STAGGERED	network/orion/SIM_link_model.h	50;"	d
STATIC_MODEL	network/orion/Makefile	/^STATIC_MODEL = SIM_static.c$/;"	m
STRING	generated/MI_example/attrparse.c	/^     STRING = 258,$/;"	e	enum:yytokentype	file:
STRING	generated/MI_example/attrparse.h	/^     STRING = 258,$/;"	e	enum:yytokentype
ST_	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum flit_stage {I_, VA_, SA_, ST_, LT_, NUM_FLIT_STAGE_};$/;"	e	enum:flit_stage
SWIDTH_DSPACE	network/orion/SIM_link_model.h	44;"	d
SWIDTH_SSPACE	network/orion/SIM_link_model.h	43;"	d
SWITCHING_FACTOR	network/orion_old/parm_technology.h	60;"	d
SWITCH_D_H	network/garnet-fixed-pipeline/Switch_d.h	62;"	d
SW_ALLOCATOR_D_H	network/garnet-fixed-pipeline/SWallocator_d.h	62;"	d
SWallocator_d	network/garnet-fixed-pipeline/SWallocator_d.C	/^SWallocator_d::SWallocator_d(Router_d *router)$/;"	f	class:SWallocator_d
SWallocator_d	network/garnet-fixed-pipeline/SWallocator_d.h	/^class SWallocator_d : public Consumer {$/;"	c
SYNTHETICDRIVER_H	tester/SyntheticDriver.h	65;"	d
SYSTEM_H	system/System.h	69;"	d
SearchMechanism	generated/MI_example/SearchMechanism.h	/^enum SearchMechanism {$/;"	g
SearchMechanism_BloomFilter	generated/MI_example/SearchMechanism.h	/^  SearchMechanism_BloomFilter,  \/**<  *\/$/;"	e	enum:SearchMechanism
SearchMechanism_FIRST	generated/MI_example/SearchMechanism.h	/^  SearchMechanism_FIRST,$/;"	e	enum:SearchMechanism
SearchMechanism_H	generated/MI_example/SearchMechanism.h	6;"	d
SearchMechanism_NUM	generated/MI_example/SearchMechanism.h	/^  SearchMechanism_NUM$/;"	e	enum:SearchMechanism
SearchMechanism_None	generated/MI_example/SearchMechanism.h	/^  SearchMechanism_None,  \/**<  *\/$/;"	e	enum:SearchMechanism
SearchMechanism_PartialTag	generated/MI_example/SearchMechanism.h	/^  SearchMechanism_PartialTag,  \/**<  *\/$/;"	e	enum:SearchMechanism
SearchMechanism_Perfect	generated/MI_example/SearchMechanism.h	/^  SearchMechanism_Perfect = SearchMechanism_FIRST,  \/**<  *\/$/;"	e	enum:SearchMechanism
SearchMechanism_Random	generated/MI_example/SearchMechanism.h	/^  SearchMechanism_Random,  \/**<  *\/$/;"	e	enum:SearchMechanism
SearchMechanism_to_string	generated/MI_example/SearchMechanism.C	/^string SearchMechanism_to_string(const SearchMechanism& obj)$/;"	f
SenseEnergyFactor	network/orion/SIM_technology_v1.h	190;"	d
SenseEnergyFactor	network/orion/SIM_technology_v2.h	47;"	d
SenseEnergyFactor	network/orion_old/SIM_power.h	253;"	d
SenseEnergyFactor	network/orion_old/parm_technology.h	270;"	d
SensePowerfactor	network/orion/SIM_technology_v1.h	189;"	d
SensePowerfactor	network/orion/SIM_technology_v2.h	46;"	d
SensePowerfactor	network/orion_old/SIM_power.h	252;"	d
SensePowerfactor	network/orion_old/parm_technology.h	269;"	d
SensePowerfactor2	network/orion/SIM_technology_v1.h	188;"	d
SensePowerfactor2	network/orion/SIM_technology_v2.h	45;"	d
SensePowerfactor2	network/orion_old/SIM_power.h	251;"	d
SensePowerfactor2	network/orion_old/parm_technology.h	268;"	d
SensePowerfactor3	network/orion/SIM_technology_v1.h	187;"	d
SensePowerfactor3	network/orion/SIM_technology_v2.h	44;"	d
SensePowerfactor3	network/orion_old/SIM_power.h	250;"	d
SensePowerfactor3	network/orion_old/parm_technology.h	267;"	d
Sequencer	system/Sequencer.C	/^Sequencer::Sequencer(AbstractChip* chip_ptr, int version) {$/;"	f	class:Sequencer
Sequencer	system/Sequencer.h	/^class Sequencer : public Consumer {$/;"	c
SequencerStatus	generated/MI_example/SequencerStatus.h	/^enum SequencerStatus {$/;"	g
SequencerStatus_FIRST	generated/MI_example/SequencerStatus.h	/^  SequencerStatus_FIRST,$/;"	e	enum:SequencerStatus
SequencerStatus_H	generated/MI_example/SequencerStatus.h	6;"	d
SequencerStatus_Idle	generated/MI_example/SequencerStatus.h	/^  SequencerStatus_Idle = SequencerStatus_FIRST,  \/**< Idle *\/$/;"	e	enum:SequencerStatus
SequencerStatus_NUM	generated/MI_example/SequencerStatus.h	/^  SequencerStatus_NUM$/;"	e	enum:SequencerStatus
SequencerStatus_Pending	generated/MI_example/SequencerStatus.h	/^  SequencerStatus_Pending,  \/**< Pending *\/$/;"	e	enum:SequencerStatus
SequencerStatus_to_string	generated/MI_example/SequencerStatus.C	/^string SequencerStatus_to_string(const SequencerStatus& obj)$/;"	f
Serving	simics/depreceated/SimicsProcessor.h	/^    Serving,$/;"	e	enum:SimicsProcessor::CacheRequestStatus
Set	common/BigSet.C	/^Set::Set()$/;"	f	class:Set
Set	common/BigSet.C	/^Set::Set(int size)$/;"	f	class:Set
Set	common/BigSet.h	/^class Set {$/;"	c
Set	common/OptBigSet.C	/^Set::Set()$/;"	f	class:Set
Set	common/OptBigSet.C	/^Set::Set(const Set& obj) {$/;"	f	class:Set
Set	common/OptBigSet.C	/^Set::Set(int size)$/;"	f	class:Set
Set	common/OptBigSet.h	/^class Set {$/;"	c
Set	common/Set.C	/^Set::Set()$/;"	f	class:Set
Set	common/Set.C	/^Set::Set(int size)$/;"	f	class:Set
Set	common/Set.h	/^class Set {$/;"	c
SetArea	network/orion/NetworkPowerArea.h	/^	inline void SetArea(const double inbuf, const double xbar, const double vc, const double sw)$/;"	f	class:RouterPowerArea_d
SetPower	network/orion/NetworkPowerArea.h	/^	inline void SetPower(const double dib, const double sib, const double dxb, const double sxb, const double dvc, const double svc, const double dsw, const double ssw, const double dc, const double sc)$/;"	f	class:RouterPowerArea_d
SimicsDriver	simics/depreceated/SimicsDriver.C	/^SimicsDriver::SimicsDriver(System* sys_ptr) {$/;"	f	class:SimicsDriver
SimicsDriver	simics/depreceated/SimicsDriver.h	/^class SimicsDriver : public Driver {$/;"	c
SimicsDriver_H	simics/depreceated/SimicsDriver.h	82;"	d
SimicsHypervisor	simics/depreceated/SimicsHypervisor.C	/^SimicsHypervisor::SimicsHypervisor(System* sys_ptr, Vector<SimicsProcessor*> processors) {$/;"	f	class:SimicsHypervisor
SimicsHypervisor	simics/depreceated/SimicsHypervisor.h	/^class SimicsHypervisor {$/;"	c
SimicsHypervisor_H	simics/depreceated/SimicsHypervisor.h	58;"	d
SimicsProcessor	simics/depreceated/SimicsProcessor.C	/^SimicsProcessor::SimicsProcessor(System* sys_ptr, int proc) {$/;"	f	class:SimicsProcessor
SimicsProcessor	simics/depreceated/SimicsProcessor.h	/^class SimicsProcessor {$/;"	c
SimicsProcessor_H	simics/depreceated/SimicsProcessor.h	84;"	d
SimpleNetwork	network/simple/SimpleNetwork.C	/^SimpleNetwork::SimpleNetwork(int nodes)$/;"	f	class:SimpleNetwork
SimpleNetwork	network/simple/SimpleNetwork.h	/^class SimpleNetwork : public Network {$/;"	c
SpecifiedGenerator	tester/SpecifiedGenerator.C	/^SpecifiedGenerator::SpecifiedGenerator()$/;"	f	class:SpecifiedGenerator
SpecifiedGenerator	tester/SpecifiedGenerator.h	/^class SpecifiedGenerator : public Consumer {$/;"	c
SpecifiedGeneratorType	generated/MI_example/SpecifiedGeneratorType.h	/^enum SpecifiedGeneratorType {$/;"	g
SpecifiedGeneratorType_DetermGETXGenerator	generated/MI_example/SpecifiedGeneratorType.h	/^  SpecifiedGeneratorType_DetermGETXGenerator = SpecifiedGeneratorType_FIRST,  \/**< deterministic GETX Tester *\/$/;"	e	enum:SpecifiedGeneratorType
SpecifiedGeneratorType_DetermInvGenerator	generated/MI_example/SpecifiedGeneratorType.h	/^  SpecifiedGeneratorType_DetermInvGenerator,  \/**< deterministic all shared then invalidate Tester *\/$/;"	e	enum:SpecifiedGeneratorType
SpecifiedGeneratorType_DetermSeriesGETSGenerator	generated/MI_example/SpecifiedGeneratorType.h	/^  SpecifiedGeneratorType_DetermSeriesGETSGenerator,  \/**< deterministic Series of GETSs Tester for prefetcher tuning *\/$/;"	e	enum:SpecifiedGeneratorType
SpecifiedGeneratorType_FIRST	generated/MI_example/SpecifiedGeneratorType.h	/^  SpecifiedGeneratorType_FIRST,$/;"	e	enum:SpecifiedGeneratorType
SpecifiedGeneratorType_H	generated/MI_example/SpecifiedGeneratorType.h	6;"	d
SpecifiedGeneratorType_NUM	generated/MI_example/SpecifiedGeneratorType.h	/^  SpecifiedGeneratorType_NUM$/;"	e	enum:SpecifiedGeneratorType
SpecifiedGeneratorType_to_string	generated/MI_example/SpecifiedGeneratorType.C	/^string SpecifiedGeneratorType_to_string(const SpecifiedGeneratorType& obj)$/;"	f
StallCycle	simics/depreceated/SimicsDriver.h	/^typedef struct { MemoryTransactionResult result; int cycles; } StallCycle;$/;"	t	typeref:struct:__anon92
StoreBuffer	system/StoreBuffer.C	/^StoreBuffer::StoreBuffer(AbstractChip* chip_ptr, int version) :$/;"	f	class:StoreBuffer
StoreBuffer	system/StoreBuffer.h	/^class StoreBuffer : public Consumer {$/;"	c
StoreBufferEntry	system/StoreBuffer.C	/^  StoreBufferEntry() {} \/\/ So we can allocate a vector of StoreBufferEntries$/;"	f	struct:StoreBufferEntry
StoreBufferEntry	system/StoreBuffer.C	/^  StoreBufferEntry(const SubBlock& block, CacheRequestType type, const Address& pc, AccessModeType access_mode, int size, int thread) : m_subblock(block) {$/;"	f	struct:StoreBufferEntry
StoreBufferEntry	system/StoreBuffer.C	/^struct StoreBufferEntry {$/;"	s	file:
StoreBuffer_H	system/StoreBuffer.h	65;"	d
StoreCache	system/StoreCache.C	/^StoreCache::StoreCache()$/;"	f	class:StoreCache
StoreCache	system/StoreCache.h	/^class StoreCache {$/;"	c
StoreCacheEntry	system/StoreCache.C	/^  StoreCacheEntry() { $/;"	f	struct:StoreCacheEntry
StoreCacheEntry	system/StoreCache.C	/^struct StoreCacheEntry {$/;"	s	file:
StoreCache_H	system/StoreCache.h	65;"	d
StoreTrace	profiler/StoreTrace.C	/^StoreTrace::StoreTrace(const Address& addr) :$/;"	f	class:StoreTrace
StoreTrace	profiler/StoreTrace.h	/^  StoreTrace() { }$/;"	f	class:StoreTrace
StoreTrace	profiler/StoreTrace.h	/^class StoreTrace {$/;"	c
StoreTrace_H	profiler/StoreTrace.h	65;"	d
SubBlock	common/SubBlock.C	/^SubBlock::SubBlock(const Address& addr, const Address& logicalAddress, int size)$/;"	f	class:SubBlock
SubBlock	common/SubBlock.C	/^SubBlock::SubBlock(const Address& addr, int size)$/;"	f	class:SubBlock
SubBlock	common/SubBlock.h	/^  SubBlock() { } $/;"	f	class:SubBlock
SubBlock	common/SubBlock.h	/^class SubBlock {$/;"	c
SubBlock_H	common/SubBlock.h	63;"	d
Switch	network/simple/Switch.C	/^Switch::Switch(SwitchID sid, SimpleNetwork* network_ptr)$/;"	f	class:Switch
Switch	network/simple/Switch.h	/^class Switch {$/;"	c
SwitchID	common/Global.h	/^typedef int SwitchID;$/;"	t
Switch_H	network/simple/Switch.h	72;"	d
Switch_d	network/garnet-fixed-pipeline/Switch_d.C	/^Switch_d::Switch_d(Router_d *router)$/;"	f	class:Switch_d
Switch_d	network/garnet-fixed-pipeline/Switch_d.h	/^class Switch_d : public Consumer {$/;"	c
SyntheticDriver	tester/SyntheticDriver.C	/^SyntheticDriver::SyntheticDriver(System* sys_ptr) $/;"	f	class:SyntheticDriver
SyntheticDriver	tester/SyntheticDriver.h	/^class SyntheticDriver : public Driver, public Consumer {$/;"	c
System	system/System.C	/^System::System()$/;"	f	class:System
System	system/System.h	/^class System {$/;"	c
TAIL_	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum flit_type {HEAD_, BODY_, TAIL_, HEAD_TAIL_, NUM_FLIT_TYPE_};$/;"	e	enum:flit_type
TBETABLE_H	system/TBETable.h	67;"	d
TBETable	system/TBETable.h	/^TBETable<ENTRY>::TBETable(AbstractChip* chip_ptr)$/;"	f	class:TBETable
TBETable	system/TBETable.h	/^class TBETable {$/;"	c
TBE_TABLE_MEMBER_VARIABLE	common/Global.h	88;"	d
TCPREDICTOR_H	system/TCpredictor.h	2;"	d
TCpredictorAddrfixed	system/TCpredictor.C	/^TCpredictorAddrfixed::TCpredictorAddrfixed() {$/;"	f	class:TCpredictorAddrfixed
TCpredictorAddrfixed	system/TCpredictor.h	/^class TCpredictorAddrfixed : public TCpredictorBase {$/;"	c
TCpredictorBase	system/TCpredictor.h	/^class TCpredictorBase {$/;"	c
TCpredictorContainer	system/TCpredictor.C	/^TCpredictorContainer::TCpredictorContainer(int numL2Banks) {$/;"	f	class:TCpredictorContainer
TCpredictorContainer	system/TCpredictor.h	/^class TCpredictorContainer : public Consumer {$/;"	c
TCpredictorGlobal	system/TCpredictor.C	/^TCpredictorGlobal::TCpredictorGlobal() {$/;"	f	class:TCpredictorGlobal
TCpredictorGlobal	system/TCpredictor.h	/^class TCpredictorGlobal : public TCpredictorBase {$/;"	c
TCpredictorPCAdaptive	system/TCpredictor.C	/^TCpredictorPCAdaptive::TCpredictorPCAdaptive() {$/;"	f	class:TCpredictorPCAdaptive
TCpredictorPCAdaptive	system/TCpredictor.h	/^class TCpredictorPCAdaptive : public TCpredictorBase {$/;"	c
TCpredictorPCSampler	system/TCpredictor.C	/^TCpredictorPCSampler::TCpredictorPCSampler(Consumer* container) {$/;"	f	class:TCpredictorPCSampler
TCpredictorPCSampler	system/TCpredictor.h	/^class TCpredictorPCSampler : public TCpredictorBase {$/;"	c
TCpredictorPCfixed	system/TCpredictor.C	/^TCpredictorPCfixed::TCpredictorPCfixed() {$/;"	f	class:TCpredictorPCfixed
TCpredictorPCfixed	system/TCpredictor.h	/^class TCpredictorPCfixed : public TCpredictorBase {$/;"	c
TCpredictorPerL2	system/TCpredictor.C	/^TCpredictorPerL2::TCpredictorPerL2(int numL2Banks) {$/;"	f	class:TCpredictorPerL2
TCpredictorPerL2	system/TCpredictor.h	/^class TCpredictorPerL2 : public TCpredictorBase {$/;"	c
TESTER_H	tester/Tester.h	65;"	d
TESTER_MAX_DEPTH	tester/depreceated/XactRequestGenerator.h	/^const int TESTER_MAX_DEPTH = 16;$/;"	v
TESTFRAMEWORK_H	tester/test_framework.h	65;"	d
TEST_EXEC	network/orion/Makefile	/^TEST_EXEC   = $(TEST_SRCS:.c=)$/;"	m
TEST_LENGTH	network/orion_old/SIM_power_test.h	290;"	d
TEST_LENGTH	network/orion_old/parm_technology.h	179;"	d
TEST_SRCS	network/orion/Makefile	/^TEST_SRCS   = orion_router_power.c orion_router_area.c orion_link.c test_permu.c test_alu.c dump_para.c $/;"	m
THEntry	simics/depreceated/SimicsHypervisor.h	/^  THEntry(TransactionInterfaceManager* xact_mgr) { $/;"	f	class:THEntry
THEntry	simics/depreceated/SimicsHypervisor.h	/^class THEntry {$/;"	c
THIRD_STG	network/orion/SIM_permu.h	41;"	d
THROTTLE_H	network/simple/Throttle.h	70;"	d
TIMERTABLE_H	system/TimerTable.h	67;"	d
TOPOLOGY_H	network/simple/Topology.h	75;"	d
TRACERECORD_H	recorder/TraceRecord.h	67;"	d
TRACER_H	recorder/Tracer.h	66;"	d
TRANS_ENC	network/orion/SIM_misc_model.h	/^	TRANS_ENC,	\/* transition encoding *\/$/;"	e	enum:__anon39
TRANS_ENC	network/orion_old/power_bus.h	/^	TRANS_ENC,	\/* transition encoding *\/$/;"	e	enum:__anon82
TRANS_GATE	network/orion/SIM_router_model.h	/^	TRANS_GATE,	\/* transmission gate connection *\/$/;"	e	enum:__anon53
TRANS_GATE	network/orion_old/power_crossbar.h	/^	TRANS_GATE,$/;"	e	enum:__anon84
TRISTATE_GATE	network/orion/SIM_router_model.h	/^	TRISTATE_GATE,	\/* tri-state gate connection *\/$/;"	e	enum:__anon53
TRISTATE_GATE	network/orion_old/power_crossbar.h	/^	TRISTATE_GATE$/;"	e	enum:__anon84
TRUE	network/orion/SIM_parameter.h	66;"	d
TWO	network/orion/SIM_util.c	62;"	d	file:
TWO	network/orion_old/power_utils.C	82;"	d	file:
TWO_LEVEL_CACHE	common/Global.h	/^const bool TWO_LEVEL_CACHE = false;$/;"	v
TWO_LEVEL_CACHE	common/Global.h	/^const bool TWO_LEVEL_CACHE = true;$/;"	v
TWO_STAGE_ARB	network/orion/SIM_router_model.h	/^	TWO_STAGE_ARB,$/;"	e	enum:__anon49
TaglineSpacing	network/orion/SIM_technology_v1.h	290;"	d
TaglineSpacing	network/orion/SIM_technology_v2.h	425;"	d
TaglineSpacing	network/orion/SIM_technology_v2.h	757;"	d
TaglineSpacing	network/orion_old/SIM_power.h	352;"	d
TaglineSpacing	network/orion_old/parm_technology.h	369;"	d
TestConsumer1	eventqueue/EventQueue_tester.C	/^  TestConsumer1(int description) { m_description = description; }$/;"	f	class:TestConsumer1
TestConsumer1	eventqueue/EventQueue_tester.C	/^class TestConsumer1 : public Consumer {$/;"	c	file:
TestConsumer2	eventqueue/EventQueue_tester.C	/^  TestConsumer2(int description) { m_description = description; }$/;"	f	class:TestConsumer2
TestConsumer2	eventqueue/EventQueue_tester.C	/^class TestConsumer2 : public Consumer {$/;"	c	file:
Tester	tester/Tester.C	/^Tester::Tester(System* sys_ptr)$/;"	f	class:Tester
Tester	tester/Tester.h	/^class Tester : public Driver, public Consumer {$/;"	c
TesterStatus	generated/MI_example/TesterStatus.h	/^enum TesterStatus {$/;"	g
TesterStatus_Action_Pending	generated/MI_example/TesterStatus.h	/^  TesterStatus_Action_Pending,  \/**< Action Pending *\/$/;"	e	enum:TesterStatus
TesterStatus_Check_Pending	generated/MI_example/TesterStatus.h	/^  TesterStatus_Check_Pending,  \/**< Check Pending *\/$/;"	e	enum:TesterStatus
TesterStatus_FIRST	generated/MI_example/TesterStatus.h	/^  TesterStatus_FIRST,$/;"	e	enum:TesterStatus
TesterStatus_H	generated/MI_example/TesterStatus.h	6;"	d
TesterStatus_Idle	generated/MI_example/TesterStatus.h	/^  TesterStatus_Idle = TesterStatus_FIRST,  \/**< Idle *\/$/;"	e	enum:TesterStatus
TesterStatus_NUM	generated/MI_example/TesterStatus.h	/^  TesterStatus_NUM$/;"	e	enum:TesterStatus
TesterStatus_Ready	generated/MI_example/TesterStatus.h	/^  TesterStatus_Ready,  \/**< Ready *\/$/;"	e	enum:TesterStatus
TesterStatus_to_string	generated/MI_example/TesterStatus.C	/^string TesterStatus_to_string(const TesterStatus& obj)$/;"	f
Thread0Initialized	tester/RaceyDriver.h	/^  bool Thread0Initialized() {$/;"	f	class:RaceyDriver
Throttle	network/simple/Throttle.C	/^Throttle::Throttle(NodeID node, int link_latency, int link_bandwidth_multiplier)$/;"	f	class:Throttle
Throttle	network/simple/Throttle.C	/^Throttle::Throttle(int sID, NodeID node, int link_latency, int link_bandwidth_multiplier)$/;"	f	class:Throttle
Throttle	network/simple/Throttle.h	/^class Throttle : public Consumer {$/;"	c
Time	common/Global.h	/^typedef int64 Time;$/;"	t
TimerTable	system/TimerTable.C	/^TimerTable::TimerTable(Chip* chip_ptr)$/;"	f	class:TimerTable
TimerTable	system/TimerTable.h	/^class TimerTable {$/;"	c
ToGpusimDram_empty	gpusim_ruby/gpusim_ruby.C	/^bool gpusim_ruby::ToGpusimDram_empty(unsigned partition_id) {$/;"	f	class:gpusim_ruby
ToGpusimDram_empty	interfaces/GpusimInterface.C	/^bool GpusimInterface::ToGpusimDram_empty(unsigned partition_id) {$/;"	f	class:GpusimInterface
ToGpusimDram_pop	gpusim_ruby/gpusim_ruby.C	/^void gpusim_ruby::ToGpusimDram_pop(unsigned partition_id) {$/;"	f	class:gpusim_ruby
ToGpusimDram_pop	interfaces/GpusimInterface.C	/^void GpusimInterface::ToGpusimDram_pop(unsigned partition_id) {$/;"	f	class:GpusimInterface
ToGpusimDram_top	gpusim_ruby/gpusim_ruby.C	/^ruby_dram_req_info gpusim_ruby::ToGpusimDram_top(unsigned partition_id) {$/;"	f	class:gpusim_ruby
ToGpusimDram_top	interfaces/GpusimInterface.C	/^MsgPtr* GpusimInterface::ToGpusimDram_top(unsigned partition_id) {$/;"	f	class:GpusimInterface
Topology	network/simple/Topology.C	/^Topology::Topology(Network* network_ptr, int number_of_nodes)$/;"	f	class:Topology
Topology	network/simple/Topology.h	/^class Topology {$/;"	c
TopologyType	generated/MI_example/TopologyType.h	/^enum TopologyType {$/;"	g
TopologyType_CROSSBAR	generated/MI_example/TopologyType.h	/^  TopologyType_CROSSBAR = TopologyType_FIRST,  \/**< One node per chip, single switch crossbar *\/$/;"	e	enum:TopologyType
TopologyType_FILE_SPECIFIED	generated/MI_example/TopologyType.h	/^  TopologyType_FILE_SPECIFIED,  \/**< described by the file NETWORK_FILE *\/$/;"	e	enum:TopologyType
TopologyType_FIRST	generated/MI_example/TopologyType.h	/^  TopologyType_FIRST,$/;"	e	enum:TopologyType
TopologyType_GPGPUSIM_CROSSBAR	generated/MI_example/TopologyType.h	/^  TopologyType_GPGPUSIM_CROSSBAR,  \/**< Crossbar for GPGPUSim. One switch per cluster *\/$/;"	e	enum:TopologyType
TopologyType_H	generated/MI_example/TopologyType.h	6;"	d
TopologyType_HIERARCHICAL_SWITCH	generated/MI_example/TopologyType.h	/^  TopologyType_HIERARCHICAL_SWITCH,  \/**< One node per chip, totally ordered hierarchical tree switched network *\/$/;"	e	enum:TopologyType
TopologyType_NUM	generated/MI_example/TopologyType.h	/^  TopologyType_NUM$/;"	e	enum:TopologyType
TopologyType_PT_TO_PT	generated/MI_example/TopologyType.h	/^  TopologyType_PT_TO_PT,  \/**< One node per chip, Point to Point Network *\/$/;"	e	enum:TopologyType
TopologyType_TORUS_2D	generated/MI_example/TopologyType.h	/^  TopologyType_TORUS_2D,  \/**< One node per chip, 2D torus *\/$/;"	e	enum:TopologyType
TopologyType_to_string	generated/MI_example/TopologyType.C	/^string TopologyType_to_string(const TopologyType& obj)$/;"	f
TraceRecord	recorder/TraceRecord.C	/^TraceRecord::TraceRecord(NodeID id, const Address& data_addr, const Address& pc_addr, CacheRequestType type, Time time) $/;"	f	class:TraceRecord
TraceRecord	recorder/TraceRecord.C	/^TraceRecord::TraceRecord(const TraceRecord& obj)$/;"	f	class:TraceRecord
TraceRecord	recorder/TraceRecord.h	/^  TraceRecord() { m_node_num = 0; m_time = 0; m_type = CacheRequestType_NULL; }$/;"	f	class:TraceRecord
TraceRecord	recorder/TraceRecord.h	/^class TraceRecord {$/;"	c
Tracer	recorder/Tracer.C	/^Tracer::Tracer()$/;"	f	class:Tracer
Tracer	recorder/Tracer.h	/^class Tracer {$/;"	c
TransientRequestType	generated/MI_example/TransientRequestType.h	/^enum TransientRequestType {$/;"	g
TransientRequestType_FIRST	generated/MI_example/TransientRequestType.h	/^  TransientRequestType_FIRST,$/;"	e	enum:TransientRequestType
TransientRequestType_H	generated/MI_example/TransientRequestType.h	6;"	d
TransientRequestType_LocalTransient	generated/MI_example/TransientRequestType.h	/^  TransientRequestType_LocalTransient,  \/**<  *\/$/;"	e	enum:TransientRequestType
TransientRequestType_NUM	generated/MI_example/TransientRequestType.h	/^  TransientRequestType_NUM$/;"	e	enum:TransientRequestType
TransientRequestType_OffChip	generated/MI_example/TransientRequestType.h	/^  TransientRequestType_OffChip,  \/**<  *\/$/;"	e	enum:TransientRequestType
TransientRequestType_OnChip	generated/MI_example/TransientRequestType.h	/^  TransientRequestType_OnChip,  \/**<  *\/$/;"	e	enum:TransientRequestType
TransientRequestType_Undefined	generated/MI_example/TransientRequestType.h	/^  TransientRequestType_Undefined = TransientRequestType_FIRST,  \/**<  *\/$/;"	e	enum:TransientRequestType
TransientRequestType_to_string	generated/MI_example/TransientRequestType.C	/^string TransientRequestType_to_string(const TransientRequestType& obj)$/;"	f
TransitionResult	generated/MI_example/TransitionResult.h	/^enum TransitionResult {$/;"	g
TransitionResult_FIRST	generated/MI_example/TransitionResult.h	/^  TransitionResult_FIRST,$/;"	e	enum:TransitionResult
TransitionResult_H	generated/MI_example/TransitionResult.h	6;"	d
TransitionResult_NUM	generated/MI_example/TransitionResult.h	/^  TransitionResult_NUM$/;"	e	enum:TransitionResult
TransitionResult_ProtocolStall	generated/MI_example/TransitionResult.h	/^  TransitionResult_ProtocolStall,  \/**< Protocol specified stall *\/$/;"	e	enum:TransitionResult
TransitionResult_ResourceStall	generated/MI_example/TransitionResult.h	/^  TransitionResult_ResourceStall,  \/**< Stalled due to insufficient resources *\/$/;"	e	enum:TransitionResult
TransitionResult_Valid	generated/MI_example/TransitionResult.h	/^  TransitionResult_Valid = TransitionResult_FIRST,  \/**< Valid transition *\/$/;"	e	enum:TransitionResult
TransitionResult_to_string	generated/MI_example/TransitionResult.C	/^string TransitionResult_to_string(const TransitionResult& obj)$/;"	f
TranslateRubyToSimics	simics/depreceated/ContiguousAddressTranslator.C	/^uint64 ContiguousAddressTranslator::TranslateRubyToSimics( uint64 addr ) const {$/;"	f	class:ContiguousAddressTranslator
TranslateRubyToSimics	simics/depreceated/ContiguousAddressTranslator.h	/^  uint64 TranslateRubyToSimics( const Address& addr ) const { return TranslateRubyToSimics( addr.getAddress() ); }$/;"	f	class:ContiguousAddressTranslator
TranslateSimicsToRuby	simics/depreceated/ContiguousAddressTranslator.C	/^uint64 ContiguousAddressTranslator::TranslateSimicsToRuby( uint64 addr ) const {$/;"	f	class:ContiguousAddressTranslator
TranslateSimicsToRuby	simics/depreceated/ContiguousAddressTranslator.h	/^  uint64 TranslateSimicsToRuby( const Address& addr ) const { return TranslateSimicsToRuby( addr.getAddress() ); }$/;"	f	class:ContiguousAddressTranslator
Trap	simics/depreceated/SimicsProcessor.h	/^    Trap,$/;"	e	enum:SimicsProcessor::CacheRequestStatus
TriggerMsg	generated/MI_example/TriggerMsg.h	/^  TriggerMsg() $/;"	f	class:TriggerMsg
TriggerMsg	generated/MI_example/TriggerMsg.h	/^  TriggerMsg(const Address& local_Address, const TriggerType& local_Type)$/;"	f	class:TriggerMsg
TriggerMsg	generated/MI_example/TriggerMsg.h	/^class TriggerMsg :  public Message {$/;"	c
TriggerMsg_H	generated/MI_example/TriggerMsg.h	7;"	d
TriggerType	generated/MI_example/TriggerType.h	/^enum TriggerType {$/;"	g
TriggerType_ALL_ACKS	generated/MI_example/TriggerType.h	/^  TriggerType_ALL_ACKS = TriggerType_FIRST,  \/**< See corresponding event *\/$/;"	e	enum:TriggerType
TriggerType_FIRST	generated/MI_example/TriggerType.h	/^  TriggerType_FIRST,$/;"	e	enum:TriggerType
TriggerType_H	generated/MI_example/TriggerType.h	6;"	d
TriggerType_NUM	generated/MI_example/TriggerType.h	/^  TriggerType_NUM$/;"	e	enum:TriggerType
TriggerType_to_string	generated/MI_example/TriggerType.C	/^string TriggerType_to_string(const TriggerType& obj)$/;"	f
UINT16_MAX	generated/MI_example/attrlex.c	100;"	d	file:
UINT32_MAX	generated/MI_example/attrlex.c	103;"	d	file:
UINT8_MAX	generated/MI_example/attrlex.c	97;"	d	file:
Unhandled	simics/depreceated/SimicsDriver.h	/^  Unhandled,         \/* request not handled by ruby *\/$/;"	e	enum:__anon91
Usage	simics/depreceated/magic_call.c	/^void Usage( void )$/;"	f
VA_	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum flit_stage {I_, VA_, SA_, ST_, LT_, NUM_FLIT_STAGE_};$/;"	e	enum:flit_stage
VC_AB_	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum VC_state_type {IDLE_, VC_AB_, ACTIVE_, NUM_VC_STATE_TYPE_};$/;"	e	enum:VC_state_type
VC_ALLOCATOR_D_H	network/garnet-fixed-pipeline/VCallocator_d.h	62;"	d
VC_ALLOCATOR_MAX_MODEL	network/orion/SIM_router_model.h	/^	VC_ALLOCATOR_MAX_MODEL$/;"	e	enum:__anon49
VC_ARBITER_H	network/garnet-flexible-pipeline/VCarbiter.h	62;"	d
VC_SELECT	network/orion/SIM_router_model.h	/^	VC_SELECT,$/;"	e	enum:__anon49
VC_state_type	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum VC_state_type {IDLE_, VC_AB_, ACTIVE_, NUM_VC_STATE_TYPE_};$/;"	g
VCallocator_d	network/garnet-fixed-pipeline/VCallocator_d.C	/^VCallocator_d::VCallocator_d(Router_d *router)$/;"	f	class:VCallocator_d
VCallocator_d	network/garnet-fixed-pipeline/VCallocator_d.h	/^class VCallocator_d : public Consumer {$/;"	c
VCarbiter	network/garnet-flexible-pipeline/VCarbiter.C	/^VCarbiter::VCarbiter(Router *router)$/;"	f	class:VCarbiter
VCarbiter	network/garnet-flexible-pipeline/VCarbiter.h	/^class VCarbiter : public Consumer{$/;"	c
VIRTUAL_CHANNEL_D_H	network/garnet-fixed-pipeline/VirtualChannel_d.h	62;"	d
VPATH	Makefile	/^VPATH = ${NETWORK_VPATH}:${GARNET_VPATH}:.:${GARNET_DETAIL_VPATH}:${ORION_VPATH}:$(GEMS_ROOT)\/common:$(GEMS_ROOT)\/common\/gzstream:buffers:common:slicc_interface:profiler:config:eventqueue:system:interfaces:simics:tester:gpusim_ruby:recorder:log_tm:rock:$(GENERATED_DIR):$(GEMS_ROOT)\/common\/ioutil:network$/;"	m
VSCALE	network/orion/SIM_technology_v1.h	111;"	d
VSCALE	network/orion/SIM_technology_v1.h	51;"	d
VSCALE	network/orion/SIM_technology_v1.h	63;"	d
VSCALE	network/orion/SIM_technology_v1.h	75;"	d
VSCALE	network/orion/SIM_technology_v1.h	87;"	d
VSCALE	network/orion/SIM_technology_v1.h	99;"	d
VSCALE	network/orion_old/SIM_power.h	108;"	d
VSCALE	network/orion_old/SIM_power.h	120;"	d
VSCALE	network/orion_old/SIM_power.h	132;"	d
VSCALE	network/orion_old/SIM_power.h	144;"	d
VSCALE	network/orion_old/SIM_power.h	156;"	d
VSCALE	network/orion_old/SIM_power.h	168;"	d
VSCALE	network/orion_old/SIM_power.h	94;"	d
VSCALE	network/orion_old/parm_technology.h	104;"	d
VSCALE	network/orion_old/parm_technology.h	116;"	d
VSCALE	network/orion_old/parm_technology.h	128;"	d
VSCALE	network/orion_old/parm_technology.h	140;"	d
VSCALE	network/orion_old/parm_technology.h	152;"	d
VSCALE	network/orion_old/parm_technology.h	164;"	d
VSCALE	network/orion_old/parm_technology.h	90;"	d
VTSCALE	network/orion/SIM_technology_v1.h	100;"	d
VTSCALE	network/orion/SIM_technology_v1.h	112;"	d
VTSCALE	network/orion/SIM_technology_v1.h	52;"	d
VTSCALE	network/orion/SIM_technology_v1.h	64;"	d
VTSCALE	network/orion/SIM_technology_v1.h	76;"	d
VTSCALE	network/orion/SIM_technology_v1.h	88;"	d
VTSCALE	network/orion_old/SIM_power.h	109;"	d
VTSCALE	network/orion_old/SIM_power.h	121;"	d
VTSCALE	network/orion_old/SIM_power.h	133;"	d
VTSCALE	network/orion_old/SIM_power.h	145;"	d
VTSCALE	network/orion_old/SIM_power.h	157;"	d
VTSCALE	network/orion_old/SIM_power.h	169;"	d
VTSCALE	network/orion_old/SIM_power.h	95;"	d
VTSCALE	network/orion_old/parm_technology.h	105;"	d
VTSCALE	network/orion_old/parm_technology.h	117;"	d
VTSCALE	network/orion_old/parm_technology.h	129;"	d
VTSCALE	network/orion_old/parm_technology.h	141;"	d
VTSCALE	network/orion_old/parm_technology.h	153;"	d
VTSCALE	network/orion_old/parm_technology.h	165;"	d
VTSCALE	network/orion_old/parm_technology.h	91;"	d
Vbitpre	network/orion/SIM_technology_v1.h	183;"	d
Vbitpre	network/orion/SIM_technology_v2.h	41;"	d
Vbitpre	network/orion_old/SIM_power.h	243;"	d
Vbitpre	network/orion_old/parm_technology.h	420;"	d
Vbitsense	network/orion/SIM_technology_v1.h	185;"	d
Vbitsense	network/orion/SIM_technology_v2.h	42;"	d
Vbitsense	network/orion_old/SIM_power.h	245;"	d
Vbitsense	network/orion_old/parm_technology.h	422;"	d
Vdd	network/orion/SIM_parameter.h	98;"	d
Vdd	network/orion_old/SIM_power.h	232;"	d
Vdd	network/orion_old/parm_technology.h	209;"	d
VerbosityLevel	common/Debug.h	/^enum VerbosityLevel {No_Verb, Low_Verb, Med_Verb, High_Verb};$/;"	g
VirtAddress	common/Address.h	/^typedef Address VirtAddress;$/;"	t
VirtualChannel_d	network/garnet-fixed-pipeline/VirtualChannel_d.C	/^VirtualChannel_d::VirtualChannel_d(int id)$/;"	f	class:VirtualChannel_d
VirtualChannel_d	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^class VirtualChannel_d {$/;"	c
Vt	network/orion/SIM_technology_v1.h	184;"	d
Vt	network/orion/SIM_technology_v2.h	183;"	d
Vt	network/orion/SIM_technology_v2.h	185;"	d
Vt	network/orion/SIM_technology_v2.h	187;"	d
Vt	network/orion/SIM_technology_v2.h	514;"	d
Vt	network/orion/SIM_technology_v2.h	516;"	d
Vt	network/orion/SIM_technology_v2.h	518;"	d
Vt	network/orion_old/SIM_power.h	244;"	d
Vt	network/orion_old/parm_technology.h	421;"	d
WARNING_MESSAGE_FLAG	common/Debug.h	/^const bool WARNING_MESSAGE_FLAG = true;$/;"	v
WARN_ERROR_TIME	slicc_interface/RubySlicc_Util.h	/^extern inline void WARN_ERROR_TIME(Time time)$/;"	f
WARN_EXPR	common/Debug.h	233;"	d
WARN_MSG	common/Debug.h	217;"	d
WATCH_ADDR	interfaces/GpusimInterface.C	164;"	d	file:
WBIT	network/orion/SIM_permu.h	74;"	d
WIRE_LAYER_TYPE	network/orion/SIM_port.h	149;"	d
WIRE_LAYER_TYPE	network/orion/SIM_port_NEC.h	149;"	d
WIRE_LAYER_TYPE	network/orion/SIM_port_garnet.h	116;"	d
WORDLINE_MAX_MODEL	network/orion/SIM_array_model.h	/^	WORDLINE_MAX_MODEL$/;"	e	enum:__anon26
WORDLINE_MAX_MODEL	network/orion_old/power_array.h	/^	WORDLINE_MAX_MODEL$/;"	e	enum:__anon62
WO_BITLINE	network/orion/SIM_array_model.h	/^	WO_BITLINE,$/;"	e	enum:__anon27
WO_BITLINE	network/orion_old/power_array.h	/^	WO_BITLINE,$/;"	e	enum:__anon63
WSelEnn	network/orion/SIM_technology_v1.h	260;"	d
WSelEnn	network/orion/SIM_technology_v2.h	259;"	d
WSelEnn	network/orion/SIM_technology_v2.h	335;"	d
WSelEnn	network/orion/SIM_technology_v2.h	411;"	d
WSelEnn	network/orion/SIM_technology_v2.h	591;"	d
WSelEnn	network/orion/SIM_technology_v2.h	667;"	d
WSelEnn	network/orion/SIM_technology_v2.h	743;"	d
WSelEnn	network/orion_old/SIM_power.h	322;"	d
WSelEnn	network/orion_old/parm_technology.h	339;"	d
WSelEnp	network/orion/SIM_technology_v1.h	261;"	d
WSelEnp	network/orion/SIM_technology_v2.h	260;"	d
WSelEnp	network/orion/SIM_technology_v2.h	336;"	d
WSelEnp	network/orion/SIM_technology_v2.h	412;"	d
WSelEnp	network/orion/SIM_technology_v2.h	592;"	d
WSelEnp	network/orion/SIM_technology_v2.h	668;"	d
WSelEnp	network/orion/SIM_technology_v2.h	744;"	d
WSelEnp	network/orion_old/SIM_power.h	323;"	d
WSelEnp	network/orion_old/parm_technology.h	340;"	d
WSelORn	network/orion/SIM_technology_v1.h	256;"	d
WSelORn	network/orion/SIM_technology_v2.h	255;"	d
WSelORn	network/orion/SIM_technology_v2.h	331;"	d
WSelORn	network/orion/SIM_technology_v2.h	407;"	d
WSelORn	network/orion/SIM_technology_v2.h	587;"	d
WSelORn	network/orion/SIM_technology_v2.h	663;"	d
WSelORn	network/orion/SIM_technology_v2.h	739;"	d
WSelORn	network/orion_old/SIM_power.h	318;"	d
WSelORn	network/orion_old/parm_technology.h	335;"	d
WSelORprequ	network/orion/SIM_technology_v1.h	257;"	d
WSelORprequ	network/orion/SIM_technology_v2.h	256;"	d
WSelORprequ	network/orion/SIM_technology_v2.h	332;"	d
WSelORprequ	network/orion/SIM_technology_v2.h	408;"	d
WSelORprequ	network/orion/SIM_technology_v2.h	588;"	d
WSelORprequ	network/orion/SIM_technology_v2.h	664;"	d
WSelORprequ	network/orion/SIM_technology_v2.h	740;"	d
WSelORprequ	network/orion_old/SIM_power.h	319;"	d
WSelORprequ	network/orion_old/parm_technology.h	336;"	d
WSelPn	network/orion/SIM_technology_v1.h	258;"	d
WSelPn	network/orion/SIM_technology_v2.h	257;"	d
WSelPn	network/orion/SIM_technology_v2.h	333;"	d
WSelPn	network/orion/SIM_technology_v2.h	409;"	d
WSelPn	network/orion/SIM_technology_v2.h	589;"	d
WSelPn	network/orion/SIM_technology_v2.h	665;"	d
WSelPn	network/orion/SIM_technology_v2.h	741;"	d
WSelPn	network/orion_old/SIM_power.h	320;"	d
WSelPn	network/orion_old/parm_technology.h	337;"	d
WSelPp	network/orion/SIM_technology_v1.h	259;"	d
WSelPp	network/orion/SIM_technology_v2.h	258;"	d
WSelPp	network/orion/SIM_technology_v2.h	334;"	d
WSelPp	network/orion/SIM_technology_v2.h	410;"	d
WSelPp	network/orion/SIM_technology_v2.h	590;"	d
WSelPp	network/orion/SIM_technology_v2.h	666;"	d
WSelPp	network/orion/SIM_technology_v2.h	742;"	d
WSelPp	network/orion_old/SIM_power.h	321;"	d
WSelPp	network/orion_old/parm_technology.h	338;"	d
Walu2NANDn	network/orion/SIM_ALU.h	43;"	d
Walu2NANDp	network/orion/SIM_ALU.h	42;"	d
Walu2NORn	network/orion/SIM_ALU.h	49;"	d
Walu2NORp	network/orion/SIM_ALU.h	48;"	d
Walu3NANDn	network/orion/SIM_ALU.h	45;"	d
Walu3NANDp	network/orion/SIM_ALU.h	44;"	d
Walu3NORn	network/orion/SIM_ALU.h	51;"	d
Walu3NORp	network/orion/SIM_ALU.h	50;"	d
Walu4NANDn	network/orion/SIM_ALU.h	47;"	d
Walu4NANDp	network/orion/SIM_ALU.h	46;"	d
Walu4NORn	network/orion/SIM_ALU.h	53;"	d
Walu4NORp	network/orion/SIM_ALU.h	52;"	d
WaluNOTn	network/orion/SIM_ALU.h	41;"	d
WaluNOTp	network/orion/SIM_ALU.h	40;"	d
WaluPASSn	network/orion/SIM_ALU.h	57;"	d
WaluPASSp	network/orion/SIM_ALU.h	56;"	d
WaluXORn	network/orion/SIM_ALU.h	55;"	d
WaluXORp	network/orion/SIM_ALU.h	54;"	d
Wbitmuxn	network/orion/SIM_technology_v1.h	210;"	d
Wbitmuxn	network/orion/SIM_technology_v2.h	209;"	d
Wbitmuxn	network/orion/SIM_technology_v2.h	285;"	d
Wbitmuxn	network/orion/SIM_technology_v2.h	361;"	d
Wbitmuxn	network/orion/SIM_technology_v2.h	540;"	d
Wbitmuxn	network/orion/SIM_technology_v2.h	617;"	d
Wbitmuxn	network/orion/SIM_technology_v2.h	693;"	d
Wbitmuxn	network/orion_old/SIM_power.h	272;"	d
Wbitmuxn	network/orion_old/parm_technology.h	289;"	d
Wbitpreequ	network/orion/SIM_technology_v1.h	208;"	d
Wbitpreequ	network/orion/SIM_technology_v2.h	207;"	d
Wbitpreequ	network/orion/SIM_technology_v2.h	283;"	d
Wbitpreequ	network/orion/SIM_technology_v2.h	359;"	d
Wbitpreequ	network/orion/SIM_technology_v2.h	538;"	d
Wbitpreequ	network/orion/SIM_technology_v2.h	615;"	d
Wbitpreequ	network/orion/SIM_technology_v2.h	691;"	d
Wbitpreequ	network/orion_old/SIM_power.h	270;"	d
Wbitpreequ	network/orion_old/parm_technology.h	287;"	d
Wbusdrvn	network/orion/SIM_technology_v1.h	240;"	d
Wbusdrvn	network/orion/SIM_technology_v2.h	239;"	d
Wbusdrvn	network/orion/SIM_technology_v2.h	315;"	d
Wbusdrvn	network/orion/SIM_technology_v2.h	391;"	d
Wbusdrvn	network/orion/SIM_technology_v2.h	571;"	d
Wbusdrvn	network/orion/SIM_technology_v2.h	647;"	d
Wbusdrvn	network/orion/SIM_technology_v2.h	723;"	d
Wbusdrvn	network/orion_old/SIM_power.h	302;"	d
Wbusdrvn	network/orion_old/parm_technology.h	319;"	d
Wbusdrvp	network/orion/SIM_technology_v1.h	241;"	d
Wbusdrvp	network/orion/SIM_technology_v2.h	240;"	d
Wbusdrvp	network/orion/SIM_technology_v2.h	316;"	d
Wbusdrvp	network/orion/SIM_technology_v2.h	392;"	d
Wbusdrvp	network/orion/SIM_technology_v2.h	572;"	d
Wbusdrvp	network/orion/SIM_technology_v2.h	648;"	d
Wbusdrvp	network/orion/SIM_technology_v2.h	724;"	d
Wbusdrvp	network/orion_old/SIM_power.h	303;"	d
Wbusdrvp	network/orion_old/parm_technology.h	320;"	d
Wcomparen1	network/orion/SIM_technology_v1.h	247;"	d
Wcomparen1	network/orion/SIM_technology_v2.h	246;"	d
Wcomparen1	network/orion/SIM_technology_v2.h	322;"	d
Wcomparen1	network/orion/SIM_technology_v2.h	398;"	d
Wcomparen1	network/orion/SIM_technology_v2.h	578;"	d
Wcomparen1	network/orion/SIM_technology_v2.h	654;"	d
Wcomparen1	network/orion/SIM_technology_v2.h	730;"	d
Wcomparen1	network/orion_old/SIM_power.h	309;"	d
Wcomparen1	network/orion_old/parm_technology.h	326;"	d
Wcomparen2	network/orion/SIM_technology_v1.h	246;"	d
Wcomparen2	network/orion/SIM_technology_v2.h	245;"	d
Wcomparen2	network/orion/SIM_technology_v2.h	321;"	d
Wcomparen2	network/orion/SIM_technology_v2.h	397;"	d
Wcomparen2	network/orion/SIM_technology_v2.h	577;"	d
Wcomparen2	network/orion/SIM_technology_v2.h	653;"	d
Wcomparen2	network/orion/SIM_technology_v2.h	729;"	d
Wcomparen2	network/orion_old/SIM_power.h	308;"	d
Wcomparen2	network/orion_old/parm_technology.h	325;"	d
Wcompcellpd2	network/orion/SIM_technology_v1.h	243;"	d
Wcompcellpd2	network/orion/SIM_technology_v2.h	242;"	d
Wcompcellpd2	network/orion/SIM_technology_v2.h	318;"	d
Wcompcellpd2	network/orion/SIM_technology_v2.h	394;"	d
Wcompcellpd2	network/orion/SIM_technology_v2.h	574;"	d
Wcompcellpd2	network/orion/SIM_technology_v2.h	650;"	d
Wcompcellpd2	network/orion/SIM_technology_v2.h	726;"	d
Wcompcellpd2	network/orion_old/SIM_power.h	305;"	d
Wcompcellpd2	network/orion_old/parm_technology.h	322;"	d
Wcompdrivern	network/orion/SIM_technology_v1.h	244;"	d
Wcompdrivern	network/orion/SIM_technology_v2.h	243;"	d
Wcompdrivern	network/orion/SIM_technology_v2.h	319;"	d
Wcompdrivern	network/orion/SIM_technology_v2.h	395;"	d
Wcompdrivern	network/orion/SIM_technology_v2.h	575;"	d
Wcompdrivern	network/orion/SIM_technology_v2.h	651;"	d
Wcompdrivern	network/orion/SIM_technology_v2.h	727;"	d
Wcompdrivern	network/orion_old/SIM_power.h	306;"	d
Wcompdrivern	network/orion_old/parm_technology.h	323;"	d
Wcompdriverp	network/orion/SIM_technology_v1.h	245;"	d
Wcompdriverp	network/orion/SIM_technology_v2.h	244;"	d
Wcompdriverp	network/orion/SIM_technology_v2.h	320;"	d
Wcompdriverp	network/orion/SIM_technology_v2.h	396;"	d
Wcompdriverp	network/orion/SIM_technology_v2.h	576;"	d
Wcompdriverp	network/orion/SIM_technology_v2.h	652;"	d
Wcompdriverp	network/orion/SIM_technology_v2.h	728;"	d
Wcompdriverp	network/orion_old/SIM_power.h	307;"	d
Wcompdriverp	network/orion_old/parm_technology.h	324;"	d
Wcompinvn1	network/orion/SIM_technology_v1.h	213;"	d
Wcompinvn1	network/orion/SIM_technology_v2.h	212;"	d
Wcompinvn1	network/orion/SIM_technology_v2.h	288;"	d
Wcompinvn1	network/orion/SIM_technology_v2.h	364;"	d
Wcompinvn1	network/orion/SIM_technology_v2.h	543;"	d
Wcompinvn1	network/orion/SIM_technology_v2.h	620;"	d
Wcompinvn1	network/orion/SIM_technology_v2.h	696;"	d
Wcompinvn1	network/orion_old/SIM_power.h	275;"	d
Wcompinvn1	network/orion_old/parm_technology.h	292;"	d
Wcompinvn2	network/orion/SIM_technology_v1.h	215;"	d
Wcompinvn2	network/orion/SIM_technology_v2.h	214;"	d
Wcompinvn2	network/orion/SIM_technology_v2.h	290;"	d
Wcompinvn2	network/orion/SIM_technology_v2.h	366;"	d
Wcompinvn2	network/orion/SIM_technology_v2.h	545;"	d
Wcompinvn2	network/orion/SIM_technology_v2.h	622;"	d
Wcompinvn2	network/orion/SIM_technology_v2.h	698;"	d
Wcompinvn2	network/orion_old/SIM_power.h	277;"	d
Wcompinvn2	network/orion_old/parm_technology.h	294;"	d
Wcompinvn3	network/orion/SIM_technology_v1.h	217;"	d
Wcompinvn3	network/orion/SIM_technology_v2.h	216;"	d
Wcompinvn3	network/orion/SIM_technology_v2.h	292;"	d
Wcompinvn3	network/orion/SIM_technology_v2.h	368;"	d
Wcompinvn3	network/orion/SIM_technology_v2.h	547;"	d
Wcompinvn3	network/orion/SIM_technology_v2.h	624;"	d
Wcompinvn3	network/orion/SIM_technology_v2.h	700;"	d
Wcompinvn3	network/orion_old/SIM_power.h	279;"	d
Wcompinvn3	network/orion_old/parm_technology.h	296;"	d
Wcompinvp1	network/orion/SIM_technology_v1.h	212;"	d
Wcompinvp1	network/orion/SIM_technology_v2.h	211;"	d
Wcompinvp1	network/orion/SIM_technology_v2.h	287;"	d
Wcompinvp1	network/orion/SIM_technology_v2.h	363;"	d
Wcompinvp1	network/orion/SIM_technology_v2.h	542;"	d
Wcompinvp1	network/orion/SIM_technology_v2.h	619;"	d
Wcompinvp1	network/orion/SIM_technology_v2.h	695;"	d
Wcompinvp1	network/orion_old/SIM_power.h	274;"	d
Wcompinvp1	network/orion_old/parm_technology.h	291;"	d
Wcompinvp2	network/orion/SIM_technology_v1.h	214;"	d
Wcompinvp2	network/orion/SIM_technology_v2.h	213;"	d
Wcompinvp2	network/orion/SIM_technology_v2.h	289;"	d
Wcompinvp2	network/orion/SIM_technology_v2.h	365;"	d
Wcompinvp2	network/orion/SIM_technology_v2.h	544;"	d
Wcompinvp2	network/orion/SIM_technology_v2.h	621;"	d
Wcompinvp2	network/orion/SIM_technology_v2.h	697;"	d
Wcompinvp2	network/orion_old/SIM_power.h	276;"	d
Wcompinvp2	network/orion_old/parm_technology.h	293;"	d
Wcompinvp3	network/orion/SIM_technology_v1.h	216;"	d
Wcompinvp3	network/orion/SIM_technology_v2.h	215;"	d
Wcompinvp3	network/orion/SIM_technology_v2.h	291;"	d
Wcompinvp3	network/orion/SIM_technology_v2.h	367;"	d
Wcompinvp3	network/orion/SIM_technology_v2.h	546;"	d
Wcompinvp3	network/orion/SIM_technology_v2.h	623;"	d
Wcompinvp3	network/orion/SIM_technology_v2.h	699;"	d
Wcompinvp3	network/orion_old/SIM_power.h	278;"	d
Wcompinvp3	network/orion_old/parm_technology.h	295;"	d
Wcompn	network/orion/SIM_technology_v1.h	221;"	d
Wcompn	network/orion/SIM_technology_v2.h	220;"	d
Wcompn	network/orion/SIM_technology_v2.h	296;"	d
Wcompn	network/orion/SIM_technology_v2.h	372;"	d
Wcompn	network/orion/SIM_technology_v2.h	552;"	d
Wcompn	network/orion/SIM_technology_v2.h	628;"	d
Wcompn	network/orion/SIM_technology_v2.h	704;"	d
Wcompn	network/orion_old/SIM_power.h	283;"	d
Wcompn	network/orion_old/parm_technology.h	300;"	d
Wcompp	network/orion/SIM_technology_v1.h	222;"	d
Wcompp	network/orion/SIM_technology_v2.h	221;"	d
Wcompp	network/orion/SIM_technology_v2.h	297;"	d
Wcompp	network/orion/SIM_technology_v2.h	373;"	d
Wcompp	network/orion/SIM_technology_v2.h	553;"	d
Wcompp	network/orion/SIM_technology_v2.h	629;"	d
Wcompp	network/orion/SIM_technology_v2.h	705;"	d
Wcompp	network/orion_old/SIM_power.h	284;"	d
Wcompp	network/orion_old/parm_technology.h	301;"	d
Wcomppreequ	network/orion/SIM_technology_v1.h	223;"	d
Wcomppreequ	network/orion/SIM_technology_v2.h	222;"	d
Wcomppreequ	network/orion/SIM_technology_v2.h	298;"	d
Wcomppreequ	network/orion/SIM_technology_v2.h	374;"	d
Wcomppreequ	network/orion/SIM_technology_v2.h	554;"	d
Wcomppreequ	network/orion/SIM_technology_v2.h	630;"	d
Wcomppreequ	network/orion/SIM_technology_v2.h	706;"	d
Wcomppreequ	network/orion_old/SIM_power.h	285;"	d
Wcomppreequ	network/orion_old/parm_technology.h	302;"	d
Wdec3to8n	network/orion/SIM_technology_v1.h	195;"	d
Wdec3to8n	network/orion/SIM_technology_v2.h	194;"	d
Wdec3to8n	network/orion/SIM_technology_v2.h	270;"	d
Wdec3to8n	network/orion/SIM_technology_v2.h	346;"	d
Wdec3to8n	network/orion/SIM_technology_v2.h	525;"	d
Wdec3to8n	network/orion/SIM_technology_v2.h	602;"	d
Wdec3to8n	network/orion/SIM_technology_v2.h	678;"	d
Wdec3to8n	network/orion_old/SIM_power.h	258;"	d
Wdec3to8n	network/orion_old/parm_technology.h	275;"	d
Wdec3to8p	network/orion/SIM_technology_v1.h	196;"	d
Wdec3to8p	network/orion/SIM_technology_v2.h	195;"	d
Wdec3to8p	network/orion/SIM_technology_v2.h	271;"	d
Wdec3to8p	network/orion/SIM_technology_v2.h	347;"	d
Wdec3to8p	network/orion/SIM_technology_v2.h	526;"	d
Wdec3to8p	network/orion/SIM_technology_v2.h	603;"	d
Wdec3to8p	network/orion/SIM_technology_v2.h	679;"	d
Wdec3to8p	network/orion_old/SIM_power.h	259;"	d
Wdec3to8p	network/orion_old/parm_technology.h	276;"	d
WdecNORn	network/orion/SIM_technology_v1.h	197;"	d
WdecNORn	network/orion/SIM_technology_v2.h	196;"	d
WdecNORn	network/orion/SIM_technology_v2.h	272;"	d
WdecNORn	network/orion/SIM_technology_v2.h	348;"	d
WdecNORn	network/orion/SIM_technology_v2.h	527;"	d
WdecNORn	network/orion/SIM_technology_v2.h	604;"	d
WdecNORn	network/orion/SIM_technology_v2.h	680;"	d
WdecNORn	network/orion_old/SIM_power.h	260;"	d
WdecNORn	network/orion_old/parm_technology.h	277;"	d
WdecNORp	network/orion/SIM_technology_v1.h	198;"	d
WdecNORp	network/orion/SIM_technology_v2.h	197;"	d
WdecNORp	network/orion/SIM_technology_v2.h	273;"	d
WdecNORp	network/orion/SIM_technology_v2.h	349;"	d
WdecNORp	network/orion/SIM_technology_v2.h	528;"	d
WdecNORp	network/orion/SIM_technology_v2.h	605;"	d
WdecNORp	network/orion/SIM_technology_v2.h	681;"	d
WdecNORp	network/orion_old/SIM_power.h	261;"	d
WdecNORp	network/orion_old/parm_technology.h	278;"	d
Wdecdriven	network/orion/SIM_technology_v1.h	194;"	d
Wdecdriven	network/orion/SIM_technology_v2.h	193;"	d
Wdecdriven	network/orion/SIM_technology_v2.h	269;"	d
Wdecdriven	network/orion/SIM_technology_v2.h	345;"	d
Wdecdriven	network/orion/SIM_technology_v2.h	524;"	d
Wdecdriven	network/orion/SIM_technology_v2.h	601;"	d
Wdecdriven	network/orion/SIM_technology_v2.h	677;"	d
Wdecdriven	network/orion_old/SIM_power.h	257;"	d
Wdecdriven	network/orion_old/parm_technology.h	274;"	d
Wdecdrivep	network/orion/SIM_technology_v1.h	193;"	d
Wdecdrivep	network/orion/SIM_technology_v2.h	192;"	d
Wdecdrivep	network/orion/SIM_technology_v2.h	268;"	d
Wdecdrivep	network/orion/SIM_technology_v2.h	344;"	d
Wdecdrivep	network/orion/SIM_technology_v2.h	523;"	d
Wdecdrivep	network/orion/SIM_technology_v2.h	600;"	d
Wdecdrivep	network/orion/SIM_technology_v2.h	676;"	d
Wdecdrivep	network/orion_old/SIM_power.h	256;"	d
Wdecdrivep	network/orion_old/parm_technology.h	273;"	d
Wdecinvn	network/orion/SIM_technology_v1.h	199;"	d
Wdecinvn	network/orion/SIM_technology_v2.h	198;"	d
Wdecinvn	network/orion/SIM_technology_v2.h	274;"	d
Wdecinvn	network/orion/SIM_technology_v2.h	350;"	d
Wdecinvn	network/orion/SIM_technology_v2.h	529;"	d
Wdecinvn	network/orion/SIM_technology_v2.h	606;"	d
Wdecinvn	network/orion/SIM_technology_v2.h	682;"	d
Wdecinvn	network/orion_old/SIM_power.h	262;"	d
Wdecinvn	network/orion_old/parm_technology.h	279;"	d
Wdecinvp	network/orion/SIM_technology_v1.h	200;"	d
Wdecinvp	network/orion/SIM_technology_v2.h	199;"	d
Wdecinvp	network/orion/SIM_technology_v2.h	275;"	d
Wdecinvp	network/orion/SIM_technology_v2.h	351;"	d
Wdecinvp	network/orion/SIM_technology_v2.h	530;"	d
Wdecinvp	network/orion/SIM_technology_v2.h	607;"	d
Wdecinvp	network/orion/SIM_technology_v2.h	683;"	d
Wdecinvp	network/orion_old/SIM_power.h	263;"	d
Wdecinvp	network/orion_old/parm_technology.h	280;"	d
Wdff	network/orion/SIM_technology_v1.h	201;"	d
Wdff	network/orion/SIM_technology_v2.h	200;"	d
Wdff	network/orion/SIM_technology_v2.h	276;"	d
Wdff	network/orion/SIM_technology_v2.h	352;"	d
Wdff	network/orion/SIM_technology_v2.h	531;"	d
Wdff	network/orion/SIM_technology_v2.h	608;"	d
Wdff	network/orion/SIM_technology_v2.h	684;"	d
Wevalinvn	network/orion/SIM_technology_v1.h	219;"	d
Wevalinvn	network/orion/SIM_technology_v2.h	218;"	d
Wevalinvn	network/orion/SIM_technology_v2.h	294;"	d
Wevalinvn	network/orion/SIM_technology_v2.h	370;"	d
Wevalinvn	network/orion/SIM_technology_v2.h	549;"	d
Wevalinvn	network/orion/SIM_technology_v2.h	626;"	d
Wevalinvn	network/orion/SIM_technology_v2.h	702;"	d
Wevalinvn	network/orion_old/SIM_power.h	281;"	d
Wevalinvn	network/orion_old/parm_technology.h	298;"	d
Wevalinvp	network/orion/SIM_technology_v1.h	218;"	d
Wevalinvp	network/orion/SIM_technology_v2.h	217;"	d
Wevalinvp	network/orion/SIM_technology_v2.h	293;"	d
Wevalinvp	network/orion/SIM_technology_v2.h	369;"	d
Wevalinvp	network/orion/SIM_technology_v2.h	548;"	d
Wevalinvp	network/orion/SIM_technology_v2.h	625;"	d
Wevalinvp	network/orion/SIM_technology_v2.h	701;"	d
Wevalinvp	network/orion_old/SIM_power.h	280;"	d
Wevalinvp	network/orion_old/parm_technology.h	297;"	d
Wgrp2NANDn	network/orion/SIM_permu.c	59;"	d	file:
Wgrp2NANDp	network/orion/SIM_permu.c	60;"	d	file:
Wgrp2NORn	network/orion/SIM_permu.c	61;"	d	file:
Wgrp2NORp	network/orion/SIM_permu.c	62;"	d	file:
WgrpL1NOTn	network/orion/SIM_permu.c	49;"	d	file:
WgrpL1NOTp	network/orion/SIM_permu.c	50;"	d	file:
WgrpL2NOTn	network/orion/SIM_permu.c	51;"	d	file:
WgrpL2NOTp	network/orion/SIM_permu.c	52;"	d	file:
WgrpL3NOTn	network/orion/SIM_permu.c	53;"	d	file:
WgrpL3NOTp	network/orion/SIM_permu.c	54;"	d	file:
WgrpL4NOTn	network/orion/SIM_permu.c	55;"	d	file:
WgrpL4NOTp	network/orion/SIM_permu.c	56;"	d	file:
WgrpPASSn	network/orion/SIM_permu.c	57;"	d	file:
WgrpPASSp	network/orion/SIM_permu.c	58;"	d	file:
WireBarrierThickness	network/orion/SIM_technology_v1.h	342;"	d
WireBarrierThickness	network/orion/SIM_technology_v2.h	777;"	d
WireBarrierThickness	network/orion/SIM_technology_v2.h	785;"	d
WireBarrierThickness	network/orion/SIM_technology_v2.h	793;"	d
WireBarrierThickness	network/orion/SIM_technology_v2.h	804;"	d
WireBarrierThickness	network/orion/SIM_technology_v2.h	812;"	d
WireBarrierThickness	network/orion/SIM_technology_v2.h	820;"	d
WireBarrierThickness	network/orion/SIM_technology_v2.h	831;"	d
WireBarrierThickness	network/orion/SIM_technology_v2.h	839;"	d
WireBarrierThickness	network/orion/SIM_technology_v2.h	847;"	d
WireBarrierThickness	network/orion/SIM_technology_v2.h	858;"	d
WireBarrierThickness	network/orion/SIM_technology_v2.h	866;"	d
WireBarrierThickness	network/orion/SIM_technology_v2.h	874;"	d
WireDielectricConstant	network/orion/SIM_technology_v1.h	344;"	d
WireDielectricConstant	network/orion/SIM_technology_v2.h	779;"	d
WireDielectricConstant	network/orion/SIM_technology_v2.h	787;"	d
WireDielectricConstant	network/orion/SIM_technology_v2.h	795;"	d
WireDielectricConstant	network/orion/SIM_technology_v2.h	806;"	d
WireDielectricConstant	network/orion/SIM_technology_v2.h	814;"	d
WireDielectricConstant	network/orion/SIM_technology_v2.h	822;"	d
WireDielectricConstant	network/orion/SIM_technology_v2.h	833;"	d
WireDielectricConstant	network/orion/SIM_technology_v2.h	841;"	d
WireDielectricConstant	network/orion/SIM_technology_v2.h	849;"	d
WireDielectricConstant	network/orion/SIM_technology_v2.h	860;"	d
WireDielectricConstant	network/orion/SIM_technology_v2.h	868;"	d
WireDielectricConstant	network/orion/SIM_technology_v2.h	876;"	d
WireDielectricThickness	network/orion/SIM_technology_v1.h	343;"	d
WireDielectricThickness	network/orion/SIM_technology_v2.h	778;"	d
WireDielectricThickness	network/orion/SIM_technology_v2.h	786;"	d
WireDielectricThickness	network/orion/SIM_technology_v2.h	794;"	d
WireDielectricThickness	network/orion/SIM_technology_v2.h	805;"	d
WireDielectricThickness	network/orion/SIM_technology_v2.h	813;"	d
WireDielectricThickness	network/orion/SIM_technology_v2.h	821;"	d
WireDielectricThickness	network/orion/SIM_technology_v2.h	832;"	d
WireDielectricThickness	network/orion/SIM_technology_v2.h	840;"	d
WireDielectricThickness	network/orion/SIM_technology_v2.h	848;"	d
WireDielectricThickness	network/orion/SIM_technology_v2.h	859;"	d
WireDielectricThickness	network/orion/SIM_technology_v2.h	867;"	d
WireDielectricThickness	network/orion/SIM_technology_v2.h	875;"	d
WireMetalThickness	network/orion/SIM_technology_v1.h	341;"	d
WireMetalThickness	network/orion/SIM_technology_v2.h	776;"	d
WireMetalThickness	network/orion/SIM_technology_v2.h	784;"	d
WireMetalThickness	network/orion/SIM_technology_v2.h	792;"	d
WireMetalThickness	network/orion/SIM_technology_v2.h	803;"	d
WireMetalThickness	network/orion/SIM_technology_v2.h	811;"	d
WireMetalThickness	network/orion/SIM_technology_v2.h	819;"	d
WireMetalThickness	network/orion/SIM_technology_v2.h	830;"	d
WireMetalThickness	network/orion/SIM_technology_v2.h	838;"	d
WireMetalThickness	network/orion/SIM_technology_v2.h	846;"	d
WireMetalThickness	network/orion/SIM_technology_v2.h	857;"	d
WireMetalThickness	network/orion/SIM_technology_v2.h	865;"	d
WireMetalThickness	network/orion/SIM_technology_v2.h	873;"	d
WireMinSpacing	network/orion/SIM_technology_v1.h	340;"	d
WireMinSpacing	network/orion/SIM_technology_v2.h	775;"	d
WireMinSpacing	network/orion/SIM_technology_v2.h	783;"	d
WireMinSpacing	network/orion/SIM_technology_v2.h	791;"	d
WireMinSpacing	network/orion/SIM_technology_v2.h	802;"	d
WireMinSpacing	network/orion/SIM_technology_v2.h	810;"	d
WireMinSpacing	network/orion/SIM_technology_v2.h	818;"	d
WireMinSpacing	network/orion/SIM_technology_v2.h	829;"	d
WireMinSpacing	network/orion/SIM_technology_v2.h	837;"	d
WireMinSpacing	network/orion/SIM_technology_v2.h	845;"	d
WireMinSpacing	network/orion/SIM_technology_v2.h	856;"	d
WireMinSpacing	network/orion/SIM_technology_v2.h	864;"	d
WireMinSpacing	network/orion/SIM_technology_v2.h	872;"	d
WireMinWidth	network/orion/SIM_technology_v1.h	339;"	d
WireMinWidth	network/orion/SIM_technology_v2.h	774;"	d
WireMinWidth	network/orion/SIM_technology_v2.h	782;"	d
WireMinWidth	network/orion/SIM_technology_v2.h	790;"	d
WireMinWidth	network/orion/SIM_technology_v2.h	801;"	d
WireMinWidth	network/orion/SIM_technology_v2.h	809;"	d
WireMinWidth	network/orion/SIM_technology_v2.h	817;"	d
WireMinWidth	network/orion/SIM_technology_v2.h	828;"	d
WireMinWidth	network/orion/SIM_technology_v2.h	836;"	d
WireMinWidth	network/orion/SIM_technology_v2.h	844;"	d
WireMinWidth	network/orion/SIM_technology_v2.h	855;"	d
WireMinWidth	network/orion/SIM_technology_v2.h	863;"	d
WireMinWidth	network/orion/SIM_technology_v2.h	871;"	d
Wmatchinvn	network/orion/SIM_technology_v1.h	249;"	d
Wmatchinvn	network/orion/SIM_technology_v2.h	248;"	d
Wmatchinvn	network/orion/SIM_technology_v2.h	324;"	d
Wmatchinvn	network/orion/SIM_technology_v2.h	400;"	d
Wmatchinvn	network/orion/SIM_technology_v2.h	580;"	d
Wmatchinvn	network/orion/SIM_technology_v2.h	656;"	d
Wmatchinvn	network/orion/SIM_technology_v2.h	732;"	d
Wmatchinvn	network/orion_old/SIM_power.h	311;"	d
Wmatchinvn	network/orion_old/parm_technology.h	328;"	d
Wmatchinvp	network/orion/SIM_technology_v1.h	250;"	d
Wmatchinvp	network/orion/SIM_technology_v2.h	249;"	d
Wmatchinvp	network/orion/SIM_technology_v2.h	325;"	d
Wmatchinvp	network/orion/SIM_technology_v2.h	401;"	d
Wmatchinvp	network/orion/SIM_technology_v2.h	581;"	d
Wmatchinvp	network/orion/SIM_technology_v2.h	657;"	d
Wmatchinvp	network/orion/SIM_technology_v2.h	733;"	d
Wmatchinvp	network/orion_old/SIM_power.h	312;"	d
Wmatchinvp	network/orion_old/parm_technology.h	329;"	d
Wmatchnandn	network/orion/SIM_technology_v1.h	251;"	d
Wmatchnandn	network/orion/SIM_technology_v2.h	250;"	d
Wmatchnandn	network/orion/SIM_technology_v2.h	326;"	d
Wmatchnandn	network/orion/SIM_technology_v2.h	402;"	d
Wmatchnandn	network/orion/SIM_technology_v2.h	582;"	d
Wmatchnandn	network/orion/SIM_technology_v2.h	658;"	d
Wmatchnandn	network/orion/SIM_technology_v2.h	734;"	d
Wmatchnandn	network/orion_old/SIM_power.h	313;"	d
Wmatchnandn	network/orion_old/parm_technology.h	330;"	d
Wmatchnandp	network/orion/SIM_technology_v1.h	252;"	d
Wmatchnandp	network/orion/SIM_technology_v2.h	251;"	d
Wmatchnandp	network/orion/SIM_technology_v2.h	327;"	d
Wmatchnandp	network/orion/SIM_technology_v2.h	403;"	d
Wmatchnandp	network/orion/SIM_technology_v2.h	583;"	d
Wmatchnandp	network/orion/SIM_technology_v2.h	659;"	d
Wmatchnandp	network/orion/SIM_technology_v2.h	735;"	d
Wmatchnandp	network/orion_old/SIM_power.h	314;"	d
Wmatchnandp	network/orion_old/parm_technology.h	331;"	d
Wmatchnorn	network/orion/SIM_technology_v1.h	253;"	d
Wmatchnorn	network/orion/SIM_technology_v2.h	252;"	d
Wmatchnorn	network/orion/SIM_technology_v2.h	328;"	d
Wmatchnorn	network/orion/SIM_technology_v2.h	404;"	d
Wmatchnorn	network/orion/SIM_technology_v2.h	584;"	d
Wmatchnorn	network/orion/SIM_technology_v2.h	660;"	d
Wmatchnorn	network/orion/SIM_technology_v2.h	736;"	d
Wmatchnorn	network/orion_old/SIM_power.h	315;"	d
Wmatchnorn	network/orion_old/parm_technology.h	332;"	d
Wmatchnorp	network/orion/SIM_technology_v1.h	254;"	d
Wmatchnorp	network/orion/SIM_technology_v2.h	253;"	d
Wmatchnorp	network/orion/SIM_technology_v2.h	329;"	d
Wmatchnorp	network/orion/SIM_technology_v2.h	405;"	d
Wmatchnorp	network/orion/SIM_technology_v2.h	585;"	d
Wmatchnorp	network/orion/SIM_technology_v2.h	661;"	d
Wmatchnorp	network/orion/SIM_technology_v2.h	737;"	d
Wmatchnorp	network/orion_old/SIM_power.h	316;"	d
Wmatchnorp	network/orion_old/parm_technology.h	333;"	d
Wmatchpchg	network/orion/SIM_technology_v1.h	248;"	d
Wmatchpchg	network/orion/SIM_technology_v2.h	247;"	d
Wmatchpchg	network/orion/SIM_technology_v2.h	323;"	d
Wmatchpchg	network/orion/SIM_technology_v2.h	399;"	d
Wmatchpchg	network/orion/SIM_technology_v2.h	579;"	d
Wmatchpchg	network/orion/SIM_technology_v2.h	655;"	d
Wmatchpchg	network/orion/SIM_technology_v2.h	731;"	d
Wmatchpchg	network/orion_old/SIM_power.h	310;"	d
Wmatchpchg	network/orion_old/parm_technology.h	327;"	d
Wmemcella	network/orion/SIM_technology_v1.h	204;"	d
Wmemcella	network/orion/SIM_technology_v2.h	203;"	d
Wmemcella	network/orion/SIM_technology_v2.h	279;"	d
Wmemcella	network/orion/SIM_technology_v2.h	355;"	d
Wmemcella	network/orion/SIM_technology_v2.h	534;"	d
Wmemcella	network/orion/SIM_technology_v2.h	611;"	d
Wmemcella	network/orion/SIM_technology_v2.h	687;"	d
Wmemcella	network/orion_old/SIM_power.h	266;"	d
Wmemcella	network/orion_old/parm_technology.h	283;"	d
Wmemcellbscale	network/orion/SIM_technology_v1.h	207;"	d
Wmemcellbscale	network/orion/SIM_technology_v2.h	206;"	d
Wmemcellbscale	network/orion/SIM_technology_v2.h	282;"	d
Wmemcellbscale	network/orion/SIM_technology_v2.h	358;"	d
Wmemcellbscale	network/orion/SIM_technology_v2.h	537;"	d
Wmemcellbscale	network/orion/SIM_technology_v2.h	614;"	d
Wmemcellbscale	network/orion/SIM_technology_v2.h	690;"	d
Wmemcellbscale	network/orion_old/SIM_power.h	269;"	d
Wmemcellbscale	network/orion_old/parm_technology.h	286;"	d
Wmemcellr	network/orion/SIM_technology_v1.h	205;"	d
Wmemcellr	network/orion/SIM_technology_v2.h	204;"	d
Wmemcellr	network/orion/SIM_technology_v2.h	280;"	d
Wmemcellr	network/orion/SIM_technology_v2.h	356;"	d
Wmemcellr	network/orion/SIM_technology_v2.h	535;"	d
Wmemcellr	network/orion/SIM_technology_v2.h	612;"	d
Wmemcellr	network/orion/SIM_technology_v2.h	688;"	d
Wmemcellr	network/orion_old/SIM_power.h	267;"	d
Wmemcellr	network/orion_old/parm_technology.h	284;"	d
Wmemcellw	network/orion/SIM_technology_v1.h	206;"	d
Wmemcellw	network/orion/SIM_technology_v2.h	205;"	d
Wmemcellw	network/orion/SIM_technology_v2.h	281;"	d
Wmemcellw	network/orion/SIM_technology_v2.h	357;"	d
Wmemcellw	network/orion/SIM_technology_v2.h	536;"	d
Wmemcellw	network/orion/SIM_technology_v2.h	613;"	d
Wmemcellw	network/orion/SIM_technology_v2.h	689;"	d
Wmemcellw	network/orion_old/SIM_power.h	268;"	d
Wmemcellw	network/orion_old/parm_technology.h	285;"	d
Wmuxdrv12n	network/orion/SIM_technology_v1.h	224;"	d
Wmuxdrv12n	network/orion/SIM_technology_v2.h	223;"	d
Wmuxdrv12n	network/orion/SIM_technology_v2.h	299;"	d
Wmuxdrv12n	network/orion/SIM_technology_v2.h	375;"	d
Wmuxdrv12n	network/orion/SIM_technology_v2.h	555;"	d
Wmuxdrv12n	network/orion/SIM_technology_v2.h	631;"	d
Wmuxdrv12n	network/orion/SIM_technology_v2.h	707;"	d
Wmuxdrv12n	network/orion_old/SIM_power.h	286;"	d
Wmuxdrv12n	network/orion_old/parm_technology.h	303;"	d
Wmuxdrv12p	network/orion/SIM_technology_v1.h	225;"	d
Wmuxdrv12p	network/orion/SIM_technology_v2.h	224;"	d
Wmuxdrv12p	network/orion/SIM_technology_v2.h	300;"	d
Wmuxdrv12p	network/orion/SIM_technology_v2.h	376;"	d
Wmuxdrv12p	network/orion/SIM_technology_v2.h	556;"	d
Wmuxdrv12p	network/orion/SIM_technology_v2.h	632;"	d
Wmuxdrv12p	network/orion/SIM_technology_v2.h	708;"	d
Wmuxdrv12p	network/orion_old/SIM_power.h	287;"	d
Wmuxdrv12p	network/orion_old/parm_technology.h	304;"	d
Wmuxdrv3n	network/orion/SIM_technology_v1.h	230;"	d
Wmuxdrv3n	network/orion/SIM_technology_v2.h	229;"	d
Wmuxdrv3n	network/orion/SIM_technology_v2.h	305;"	d
Wmuxdrv3n	network/orion/SIM_technology_v2.h	381;"	d
Wmuxdrv3n	network/orion/SIM_technology_v2.h	561;"	d
Wmuxdrv3n	network/orion/SIM_technology_v2.h	637;"	d
Wmuxdrv3n	network/orion/SIM_technology_v2.h	713;"	d
Wmuxdrv3n	network/orion_old/SIM_power.h	292;"	d
Wmuxdrv3n	network/orion_old/parm_technology.h	309;"	d
Wmuxdrv3p	network/orion/SIM_technology_v1.h	231;"	d
Wmuxdrv3p	network/orion/SIM_technology_v2.h	230;"	d
Wmuxdrv3p	network/orion/SIM_technology_v2.h	306;"	d
Wmuxdrv3p	network/orion/SIM_technology_v2.h	382;"	d
Wmuxdrv3p	network/orion/SIM_technology_v2.h	562;"	d
Wmuxdrv3p	network/orion/SIM_technology_v2.h	638;"	d
Wmuxdrv3p	network/orion/SIM_technology_v2.h	714;"	d
Wmuxdrv3p	network/orion_old/SIM_power.h	293;"	d
Wmuxdrv3p	network/orion_old/parm_technology.h	310;"	d
WmuxdrvNANDn	network/orion/SIM_technology_v1.h	226;"	d
WmuxdrvNANDn	network/orion/SIM_technology_v2.h	225;"	d
WmuxdrvNANDn	network/orion/SIM_technology_v2.h	301;"	d
WmuxdrvNANDn	network/orion/SIM_technology_v2.h	377;"	d
WmuxdrvNANDn	network/orion/SIM_technology_v2.h	557;"	d
WmuxdrvNANDn	network/orion/SIM_technology_v2.h	633;"	d
WmuxdrvNANDn	network/orion/SIM_technology_v2.h	709;"	d
WmuxdrvNANDn	network/orion_old/SIM_power.h	288;"	d
WmuxdrvNANDn	network/orion_old/parm_technology.h	305;"	d
WmuxdrvNANDp	network/orion/SIM_technology_v1.h	227;"	d
WmuxdrvNANDp	network/orion/SIM_technology_v2.h	226;"	d
WmuxdrvNANDp	network/orion/SIM_technology_v2.h	302;"	d
WmuxdrvNANDp	network/orion/SIM_technology_v2.h	378;"	d
WmuxdrvNANDp	network/orion/SIM_technology_v2.h	558;"	d
WmuxdrvNANDp	network/orion/SIM_technology_v2.h	634;"	d
WmuxdrvNANDp	network/orion/SIM_technology_v2.h	710;"	d
WmuxdrvNANDp	network/orion_old/SIM_power.h	289;"	d
WmuxdrvNANDp	network/orion_old/parm_technology.h	306;"	d
WmuxdrvNORn	network/orion/SIM_technology_v1.h	228;"	d
WmuxdrvNORn	network/orion/SIM_technology_v2.h	227;"	d
WmuxdrvNORn	network/orion/SIM_technology_v2.h	303;"	d
WmuxdrvNORn	network/orion/SIM_technology_v2.h	379;"	d
WmuxdrvNORn	network/orion/SIM_technology_v2.h	559;"	d
WmuxdrvNORn	network/orion/SIM_technology_v2.h	635;"	d
WmuxdrvNORn	network/orion/SIM_technology_v2.h	711;"	d
WmuxdrvNORn	network/orion_old/SIM_power.h	290;"	d
WmuxdrvNORn	network/orion_old/parm_technology.h	307;"	d
WmuxdrvNORp	network/orion/SIM_technology_v1.h	229;"	d
WmuxdrvNORp	network/orion/SIM_technology_v2.h	228;"	d
WmuxdrvNORp	network/orion/SIM_technology_v2.h	304;"	d
WmuxdrvNORp	network/orion/SIM_technology_v2.h	380;"	d
WmuxdrvNORp	network/orion/SIM_technology_v2.h	560;"	d
WmuxdrvNORp	network/orion/SIM_technology_v2.h	636;"	d
WmuxdrvNORp	network/orion/SIM_technology_v2.h	712;"	d
WmuxdrvNORp	network/orion_old/SIM_power.h	291;"	d
WmuxdrvNORp	network/orion_old/parm_technology.h	308;"	d
WomfNOTn	network/orion/SIM_permu.c	67;"	d	file:
WomfNOTp	network/orion/SIM_permu.c	68;"	d	file:
WomfPASSn	network/orion/SIM_permu.c	65;"	d	file:
WomfPASSp	network/orion/SIM_permu.c	66;"	d	file:
WordlineSpacing	network/orion/SIM_technology_v1.h	282;"	d
WordlineSpacing	network/orion/SIM_technology_v2.h	123;"	d
WordlineSpacing	network/orion/SIM_technology_v2.h	454;"	d
WordlineSpacing	network/orion_old/SIM_power.h	344;"	d
WordlineSpacing	network/orion_old/parm_technology.h	361;"	d
Woutdrivern	network/orion/SIM_technology_v1.h	238;"	d
Woutdrivern	network/orion/SIM_technology_v2.h	237;"	d
Woutdrivern	network/orion/SIM_technology_v2.h	313;"	d
Woutdrivern	network/orion/SIM_technology_v2.h	389;"	d
Woutdrivern	network/orion/SIM_technology_v2.h	569;"	d
Woutdrivern	network/orion/SIM_technology_v2.h	645;"	d
Woutdrivern	network/orion/SIM_technology_v2.h	721;"	d
Woutdrivern	network/orion_old/SIM_power.h	300;"	d
Woutdrivern	network/orion_old/parm_technology.h	317;"	d
Woutdriverp	network/orion/SIM_technology_v1.h	239;"	d
Woutdriverp	network/orion/SIM_technology_v2.h	238;"	d
Woutdriverp	network/orion/SIM_technology_v2.h	314;"	d
Woutdriverp	network/orion/SIM_technology_v2.h	390;"	d
Woutdriverp	network/orion/SIM_technology_v2.h	570;"	d
Woutdriverp	network/orion/SIM_technology_v2.h	646;"	d
Woutdriverp	network/orion/SIM_technology_v2.h	722;"	d
Woutdriverp	network/orion_old/SIM_power.h	301;"	d
Woutdriverp	network/orion_old/parm_technology.h	318;"	d
Woutdrvnandn	network/orion/SIM_technology_v1.h	234;"	d
Woutdrvnandn	network/orion/SIM_technology_v2.h	233;"	d
Woutdrvnandn	network/orion/SIM_technology_v2.h	309;"	d
Woutdrvnandn	network/orion/SIM_technology_v2.h	385;"	d
Woutdrvnandn	network/orion/SIM_technology_v2.h	565;"	d
Woutdrvnandn	network/orion/SIM_technology_v2.h	641;"	d
Woutdrvnandn	network/orion/SIM_technology_v2.h	717;"	d
Woutdrvnandn	network/orion_old/SIM_power.h	296;"	d
Woutdrvnandn	network/orion_old/parm_technology.h	313;"	d
Woutdrvnandp	network/orion/SIM_technology_v1.h	235;"	d
Woutdrvnandp	network/orion/SIM_technology_v2.h	234;"	d
Woutdrvnandp	network/orion/SIM_technology_v2.h	310;"	d
Woutdrvnandp	network/orion/SIM_technology_v2.h	386;"	d
Woutdrvnandp	network/orion/SIM_technology_v2.h	566;"	d
Woutdrvnandp	network/orion/SIM_technology_v2.h	642;"	d
Woutdrvnandp	network/orion/SIM_technology_v2.h	718;"	d
Woutdrvnandp	network/orion_old/SIM_power.h	297;"	d
Woutdrvnandp	network/orion_old/parm_technology.h	314;"	d
Woutdrvnorn	network/orion/SIM_technology_v1.h	236;"	d
Woutdrvnorn	network/orion/SIM_technology_v2.h	235;"	d
Woutdrvnorn	network/orion/SIM_technology_v2.h	311;"	d
Woutdrvnorn	network/orion/SIM_technology_v2.h	387;"	d
Woutdrvnorn	network/orion/SIM_technology_v2.h	567;"	d
Woutdrvnorn	network/orion/SIM_technology_v2.h	643;"	d
Woutdrvnorn	network/orion/SIM_technology_v2.h	719;"	d
Woutdrvnorn	network/orion_old/SIM_power.h	298;"	d
Woutdrvnorn	network/orion_old/parm_technology.h	315;"	d
Woutdrvnorp	network/orion/SIM_technology_v1.h	237;"	d
Woutdrvnorp	network/orion/SIM_technology_v2.h	236;"	d
Woutdrvnorp	network/orion/SIM_technology_v2.h	312;"	d
Woutdrvnorp	network/orion/SIM_technology_v2.h	388;"	d
Woutdrvnorp	network/orion/SIM_technology_v2.h	568;"	d
Woutdrvnorp	network/orion/SIM_technology_v2.h	644;"	d
Woutdrvnorp	network/orion/SIM_technology_v2.h	720;"	d
Woutdrvnorp	network/orion_old/SIM_power.h	299;"	d
Woutdrvnorp	network/orion_old/parm_technology.h	316;"	d
Woutdrvseln	network/orion/SIM_technology_v1.h	232;"	d
Woutdrvseln	network/orion/SIM_technology_v2.h	231;"	d
Woutdrvseln	network/orion/SIM_technology_v2.h	307;"	d
Woutdrvseln	network/orion/SIM_technology_v2.h	383;"	d
Woutdrvseln	network/orion/SIM_technology_v2.h	563;"	d
Woutdrvseln	network/orion/SIM_technology_v2.h	639;"	d
Woutdrvseln	network/orion/SIM_technology_v2.h	715;"	d
Woutdrvseln	network/orion_old/SIM_power.h	294;"	d
Woutdrvseln	network/orion_old/parm_technology.h	311;"	d
Woutdrvselp	network/orion/SIM_technology_v1.h	233;"	d
Woutdrvselp	network/orion/SIM_technology_v2.h	232;"	d
Woutdrvselp	network/orion/SIM_technology_v2.h	308;"	d
Woutdrvselp	network/orion/SIM_technology_v2.h	384;"	d
Woutdrvselp	network/orion/SIM_technology_v2.h	564;"	d
Woutdrvselp	network/orion/SIM_technology_v2.h	640;"	d
Woutdrvselp	network/orion/SIM_technology_v2.h	716;"	d
Woutdrvselp	network/orion_old/SIM_power.h	295;"	d
Woutdrvselp	network/orion_old/parm_technology.h	312;"	d
WsenseQ1to4	network/orion/SIM_technology_v1.h	211;"	d
WsenseQ1to4	network/orion/SIM_technology_v2.h	210;"	d
WsenseQ1to4	network/orion/SIM_technology_v2.h	286;"	d
WsenseQ1to4	network/orion/SIM_technology_v2.h	362;"	d
WsenseQ1to4	network/orion/SIM_technology_v2.h	541;"	d
WsenseQ1to4	network/orion/SIM_technology_v2.h	618;"	d
WsenseQ1to4	network/orion/SIM_technology_v2.h	694;"	d
WsenseQ1to4	network/orion_old/SIM_power.h	273;"	d
WsenseQ1to4	network/orion_old/parm_technology.h	290;"	d
Wsenseextdrv1n	network/orion/SIM_technology_v1.h	264;"	d
Wsenseextdrv1n	network/orion/SIM_technology_v2.h	263;"	d
Wsenseextdrv1n	network/orion/SIM_technology_v2.h	339;"	d
Wsenseextdrv1n	network/orion/SIM_technology_v2.h	415;"	d
Wsenseextdrv1n	network/orion/SIM_technology_v2.h	595;"	d
Wsenseextdrv1n	network/orion/SIM_technology_v2.h	671;"	d
Wsenseextdrv1n	network/orion/SIM_technology_v2.h	747;"	d
Wsenseextdrv1n	network/orion_old/SIM_power.h	326;"	d
Wsenseextdrv1n	network/orion_old/parm_technology.h	343;"	d
Wsenseextdrv1p	network/orion/SIM_technology_v1.h	263;"	d
Wsenseextdrv1p	network/orion/SIM_technology_v2.h	262;"	d
Wsenseextdrv1p	network/orion/SIM_technology_v2.h	338;"	d
Wsenseextdrv1p	network/orion/SIM_technology_v2.h	414;"	d
Wsenseextdrv1p	network/orion/SIM_technology_v2.h	594;"	d
Wsenseextdrv1p	network/orion/SIM_technology_v2.h	670;"	d
Wsenseextdrv1p	network/orion/SIM_technology_v2.h	746;"	d
Wsenseextdrv1p	network/orion_old/SIM_power.h	325;"	d
Wsenseextdrv1p	network/orion_old/parm_technology.h	342;"	d
Wsenseextdrv2n	network/orion/SIM_technology_v1.h	266;"	d
Wsenseextdrv2n	network/orion/SIM_technology_v2.h	265;"	d
Wsenseextdrv2n	network/orion/SIM_technology_v2.h	341;"	d
Wsenseextdrv2n	network/orion/SIM_technology_v2.h	417;"	d
Wsenseextdrv2n	network/orion/SIM_technology_v2.h	597;"	d
Wsenseextdrv2n	network/orion/SIM_technology_v2.h	673;"	d
Wsenseextdrv2n	network/orion/SIM_technology_v2.h	749;"	d
Wsenseextdrv2n	network/orion_old/SIM_power.h	328;"	d
Wsenseextdrv2n	network/orion_old/parm_technology.h	345;"	d
Wsenseextdrv2p	network/orion/SIM_technology_v1.h	265;"	d
Wsenseextdrv2p	network/orion/SIM_technology_v2.h	264;"	d
Wsenseextdrv2p	network/orion/SIM_technology_v2.h	340;"	d
Wsenseextdrv2p	network/orion/SIM_technology_v2.h	416;"	d
Wsenseextdrv2p	network/orion/SIM_technology_v2.h	596;"	d
Wsenseextdrv2p	network/orion/SIM_technology_v2.h	672;"	d
Wsenseextdrv2p	network/orion/SIM_technology_v2.h	748;"	d
Wsenseextdrv2p	network/orion_old/SIM_power.h	327;"	d
Wsenseextdrv2p	network/orion_old/parm_technology.h	344;"	d
Wworddrivemax	network/orion/SIM_technology_v1.h	203;"	d
Wworddrivemax	network/orion/SIM_technology_v2.h	202;"	d
Wworddrivemax	network/orion/SIM_technology_v2.h	278;"	d
Wworddrivemax	network/orion/SIM_technology_v2.h	354;"	d
Wworddrivemax	network/orion/SIM_technology_v2.h	533;"	d
Wworddrivemax	network/orion/SIM_technology_v2.h	610;"	d
Wworddrivemax	network/orion/SIM_technology_v2.h	686;"	d
Wworddrivemax	network/orion_old/SIM_power.h	265;"	d
Wworddrivemax	network/orion_old/parm_technology.h	282;"	d
XACTABORTREQUESTGENERATOR_H	tester/depreceated/XactAbortRequestGenerator.h	27;"	d
XACTREQUESTGENERATOR_H	tester/depreceated/XactRequestGenerator.h	27;"	d
XACT_MGR	simics/depreceated/commands.C	223;"	d	file:
XactAbortRequestGenerator	tester/depreceated/XactAbortRequestGenerator.C	/^XactAbortRequestGenerator::XactAbortRequestGenerator(NodeID node, SyntheticDriver& driver) :$/;"	f	class:XactAbortRequestGenerator
XactAbortRequestGenerator	tester/depreceated/XactAbortRequestGenerator.h	/^class XactAbortRequestGenerator : public RequestGenerator {$/;"	c
XactAbortRequestGeneratorStatus	tester/depreceated/XactAbortRequestGenerator.h	/^enum XactAbortRequestGeneratorStatus {$/;"	g
XactAbortRequestGeneratorStatus_Aborted	tester/depreceated/XactAbortRequestGenerator.h	/^  XactAbortRequestGeneratorStatus_Aborted,$/;"	e	enum:XactAbortRequestGeneratorStatus
XactAbortRequestGeneratorStatus_Blocked	tester/depreceated/XactAbortRequestGenerator.h	/^  XactAbortRequestGeneratorStatus_Blocked,$/;"	e	enum:XactAbortRequestGeneratorStatus
XactAbortRequestGeneratorStatus_Done	tester/depreceated/XactAbortRequestGenerator.h	/^  XactAbortRequestGeneratorStatus_Done$/;"	e	enum:XactAbortRequestGeneratorStatus
XactAbortRequestGeneratorStatus_Ready	tester/depreceated/XactAbortRequestGenerator.h	/^  XactAbortRequestGeneratorStatus_Ready,$/;"	e	enum:XactAbortRequestGeneratorStatus
XactAbortRequestGeneratorStatus_Waiting	tester/depreceated/XactAbortRequestGenerator.h	/^  XactAbortRequestGeneratorStatus_Waiting,$/;"	e	enum:XactAbortRequestGeneratorStatus
XactRequestGenerator	tester/depreceated/XactRequestGenerator.C	/^XactRequestGenerator::XactRequestGenerator(NodeID node, SyntheticDriver& driver) :$/;"	f	class:XactRequestGenerator
XactRequestGenerator	tester/depreceated/XactRequestGenerator.h	/^class XactRequestGenerator : public RequestGenerator {$/;"	c
XactRequestGeneratorStatus	tester/depreceated/XactRequestGenerator.h	/^enum XactRequestGeneratorStatus {$/;"	g
XactRequestGeneratorStatus_Aborted	tester/depreceated/XactRequestGenerator.h	/^  XactRequestGeneratorStatus_Aborted,$/;"	e	enum:XactRequestGeneratorStatus
XactRequestGeneratorStatus_Blocked	tester/depreceated/XactRequestGenerator.h	/^  XactRequestGeneratorStatus_Blocked,$/;"	e	enum:XactRequestGeneratorStatus
XactRequestGeneratorStatus_Done	tester/depreceated/XactRequestGenerator.h	/^  XactRequestGeneratorStatus_Done$/;"	e	enum:XactRequestGeneratorStatus
XactRequestGeneratorStatus_Ready	tester/depreceated/XactRequestGenerator.h	/^  XactRequestGeneratorStatus_Ready,$/;"	e	enum:XactRequestGeneratorStatus
XactRequestGeneratorStatus_Waiting	tester/depreceated/XactRequestGenerator.h	/^  XactRequestGeneratorStatus_Waiting,$/;"	e	enum:XactRequestGeneratorStatus
YYABORT	generated/MI_example/attrparse.c	569;"	d	file:
YYACCEPT	generated/MI_example/attrparse.c	568;"	d	file:
YYBACKUP	generated/MI_example/attrparse.c	581;"	d	file:
YYBISON	generated/MI_example/attrparse.c	46;"	d	file:
YYBISON_VERSION	generated/MI_example/attrparse.c	49;"	d	file:
YYCOPY	generated/MI_example/attrparse.c	366;"	d	file:
YYCOPY	generated/MI_example/attrparse.c	369;"	d	file:
YYDEBUG	generated/MI_example/attrparse.c	129;"	d	file:
YYDPRINTF	generated/MI_example/attrparse.c	661;"	d	file:
YYDPRINTF	generated/MI_example/attrparse.c	810;"	d	file:
YYEMPTY	generated/MI_example/attrparse.c	565;"	d	file:
YYEOF	generated/MI_example/attrparse.c	566;"	d	file:
YYERRCODE	generated/MI_example/attrparse.c	600;"	d	file:
YYERROR	generated/MI_example/attrparse.c	570;"	d	file:
YYERROR_VERBOSE	generated/MI_example/attrparse.c	134;"	d	file:
YYERROR_VERBOSE	generated/MI_example/attrparse.c	135;"	d	file:
YYERROR_VERBOSE	generated/MI_example/attrparse.c	137;"	d	file:
YYFAIL	generated/MI_example/attrparse.c	577;"	d	file:
YYFINAL	generated/MI_example/attrparse.c	399;"	d	file:
YYFPRINTF	generated/MI_example/attrparse.c	658;"	d	file:
YYFREE	generated/MI_example/attrparse.c	332;"	d	file:
YYID	generated/MI_example/attrparse.c	/^YYID (int yyi)$/;"	f	file:
YYID	generated/MI_example/attrparse.c	256;"	d	file:
YYINITDEPTH	generated/MI_example/attrparse.c	819;"	d	file:
YYLAST	generated/MI_example/attrparse.c	401;"	d	file:
YYLEX	generated/MI_example/attrparse.c	648;"	d	file:
YYLEX	generated/MI_example/attrparse.c	650;"	d	file:
YYLLOC_DEFAULT	generated/MI_example/attrparse.c	609;"	d	file:
YYLSP_NEEDED	generated/MI_example/attrparse.c	64;"	d	file:
YYMALLOC	generated/MI_example/attrparse.c	325;"	d	file:
YYMAXDEPTH	generated/MI_example/attrparse.c	112;"	d	file:
YYMAXDEPTH	generated/MI_example/attrparse.c	830;"	d	file:
YYMAXUTOK	generated/MI_example/attrparse.c	414;"	d	file:
YYNNTS	generated/MI_example/attrparse.c	406;"	d	file:
YYNRULES	generated/MI_example/attrparse.c	408;"	d	file:
YYNSTATES	generated/MI_example/attrparse.c	410;"	d	file:
YYNTOKENS	generated/MI_example/attrparse.c	404;"	d	file:
YYPACT_NINF	generated/MI_example/attrparse.c	527;"	d	file:
YYPOPSTACK	generated/MI_example/attrparse.c	1170;"	d	file:
YYPULL	generated/MI_example/attrparse.c	61;"	d	file:
YYPURE	generated/MI_example/attrparse.c	55;"	d	file:
YYPUSH	generated/MI_example/attrparse.c	58;"	d	file:
YYRECOVERING	generated/MI_example/attrparse.c	579;"	d	file:
YYRHSLOC	generated/MI_example/attrparse.c	607;"	d	file:
YYSIZE_MAXIMUM	generated/MI_example/attrparse.c	233;"	d	file:
YYSIZE_T	generated/MI_example/attrparse.c	221;"	d	file:
YYSIZE_T	generated/MI_example/attrparse.c	223;"	d	file:
YYSIZE_T	generated/MI_example/attrparse.c	227;"	d	file:
YYSIZE_T	generated/MI_example/attrparse.c	229;"	d	file:
YYSKELETON_NAME	generated/MI_example/attrparse.c	52;"	d	file:
YYSTACK_ALLOC	generated/MI_example/attrparse.c	279;"	d	file:
YYSTACK_ALLOC	generated/MI_example/attrparse.c	283;"	d	file:
YYSTACK_ALLOC	generated/MI_example/attrparse.c	288;"	d	file:
YYSTACK_ALLOC	generated/MI_example/attrparse.c	311;"	d	file:
YYSTACK_ALLOC_MAXIMUM	generated/MI_example/attrparse.c	308;"	d	file:
YYSTACK_ALLOC_MAXIMUM	generated/MI_example/attrparse.c	314;"	d	file:
YYSTACK_BYTES	generated/MI_example/attrparse.c	358;"	d	file:
YYSTACK_FREE	generated/MI_example/attrparse.c	302;"	d	file:
YYSTACK_FREE	generated/MI_example/attrparse.c	312;"	d	file:
YYSTACK_GAP_MAXIMUM	generated/MI_example/attrparse.c	354;"	d	file:
YYSTACK_RELOCATE	generated/MI_example/attrparse.c	385;"	d	file:
YYSTATE	generated/MI_example/attrlex.c	152;"	d	file:
YYSTYPE	generated/MI_example/attrparse.c	/^typedef union YYSTYPE$/;"	u	file:
YYSTYPE	generated/MI_example/attrparse.c	/^} YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	generated/MI_example/attrparse.h	/^typedef union YYSTYPE$/;"	u
YYSTYPE	generated/MI_example/attrparse.h	/^} YYSTYPE;$/;"	t	typeref:union:YYSTYPE
YYSTYPE_IS_DECLARED	generated/MI_example/attrparse.c	178;"	d	file:
YYSTYPE_IS_DECLARED	generated/MI_example/attrparse.h	68;"	d
YYSTYPE_IS_TRIVIAL	generated/MI_example/attrparse.c	176;"	d	file:
YYSTYPE_IS_TRIVIAL	generated/MI_example/attrparse.h	66;"	d
YYTABLES_NAME	generated/MI_example/attrlex.c	2008;"	d	file:
YYTABLE_NINF	generated/MI_example/attrparse.c	544;"	d	file:
YYTERROR	generated/MI_example/attrparse.c	599;"	d	file:
YYTOKENTYPE	generated/MI_example/attrparse.c	148;"	d	file:
YYTOKENTYPE	generated/MI_example/attrparse.h	38;"	d
YYTOKEN_TABLE	generated/MI_example/attrparse.c	142;"	d	file:
YYTRANSLATE	generated/MI_example/attrparse.c	416;"	d	file:
YYUNDEFTOK	generated/MI_example/attrparse.c	413;"	d	file:
YYUSE	generated/MI_example/attrparse.c	249;"	d	file:
YYUSE	generated/MI_example/attrparse.c	251;"	d	file:
YY_	generated/MI_example/attrparse.c	239;"	d	file:
YY_	generated/MI_example/attrparse.c	243;"	d	file:
YY_AT_BOL	generated/MI_example/attrlex.c	359;"	d	file:
YY_BREAK	generated/MI_example/attrlex.c	787;"	d	file:
YY_BUFFER_EOF_PENDING	generated/MI_example/attrlex.c	275;"	d	file:
YY_BUFFER_NEW	generated/MI_example/attrlex.c	263;"	d	file:
YY_BUFFER_NORMAL	generated/MI_example/attrlex.c	264;"	d	file:
YY_BUFFER_STATE	generated/MI_example/attrlex.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	generated/MI_example/attrlex.c	169;"	d	file:
YY_BUF_SIZE	generated/MI_example/attrlex.c	171;"	d	file:
YY_CHAR	generated/MI_example/attrlex.c	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	generated/MI_example/attrlex.c	291;"	d	file:
YY_CURRENT_BUFFER_LVALUE	generated/MI_example/attrlex.c	298;"	d	file:
YY_DECL	generated/MI_example/attrlex.c	775;"	d	file:
YY_DECL_IS_OURS	generated/MI_example/attrlex.c	771;"	d	file:
YY_DO_BEFORE_ACTION	generated/MI_example/attrlex.c	387;"	d	file:
YY_END_OF_BUFFER	generated/MI_example/attrlex.c	395;"	d	file:
YY_END_OF_BUFFER_CHAR	generated/MI_example/attrlex.c	160;"	d	file:
YY_EXIT_FAILURE	generated/MI_example/attrlex.c	1806;"	d	file:
YY_EXTRA_TYPE	generated/MI_example/attrlex.c	627;"	d	file:
YY_FATAL_ERROR	generated/MI_example/attrlex.c	762;"	d	file:
YY_FLEX_MAJOR_VERSION	generated/MI_example/attrlex.c	29;"	d	file:
YY_FLEX_MINOR_VERSION	generated/MI_example/attrlex.c	30;"	d	file:
YY_FLEX_SUBMINOR_VERSION	generated/MI_example/attrlex.c	31;"	d	file:
YY_FLUSH_BUFFER	generated/MI_example/attrlex.c	327;"	d	file:
YY_INPUT	generated/MI_example/attrlex.c	715;"	d	file:
YY_INT_ALIGNED	generated/MI_example/attrlex.c	5;"	d	file:
YY_LESS_LINENO	generated/MI_example/attrlex.c	192;"	d	file:
YY_LOCATION_PRINT	generated/MI_example/attrparse.c	635;"	d	file:
YY_LOCATION_PRINT	generated/MI_example/attrparse.c	640;"	d	file:
YY_MORE_ADJ	generated/MI_example/attrlex.c	504;"	d	file:
YY_NEW_FILE	generated/MI_example/attrlex.c	158;"	d	file:
YY_NULL	generated/MI_example/attrlex.c	132;"	d	file:
YY_NUM_RULES	generated/MI_example/attrlex.c	394;"	d	file:
YY_READ_BUF_SIZE	generated/MI_example/attrlex.c	697;"	d	file:
YY_READ_BUF_SIZE	generated/MI_example/attrlex.c	699;"	d	file:
YY_REDUCE_PRINT	generated/MI_example/attrparse.c	800;"	d	file:
YY_REDUCE_PRINT	generated/MI_example/attrparse.c	813;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	generated/MI_example/attrlex.c	505;"	d	file:
YY_RULE_SETUP	generated/MI_example/attrlex.c	790;"	d	file:
YY_SC_TO_UI	generated/MI_example/attrlex.c	139;"	d	file:
YY_SKIP_YYWRAP	generated/MI_example/attrlex.c	364;"	d	file:
YY_STACK_PRINT	generated/MI_example/attrparse.c	762;"	d	file:
YY_STACK_PRINT	generated/MI_example/attrparse.c	812;"	d	file:
YY_START	generated/MI_example/attrlex.c	151;"	d	file:
YY_START_STACK_INCR	generated/MI_example/attrlex.c	757;"	d	file:
YY_STATE_BUF_SIZE	generated/MI_example/attrlex.c	177;"	d	file:
YY_STATE_EOF	generated/MI_example/attrlex.c	155;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	generated/MI_example/attrlex.c	216;"	d	file:
YY_SYMBOL_PRINT	generated/MI_example/attrparse.c	667;"	d	file:
YY_SYMBOL_PRINT	generated/MI_example/attrparse.c	811;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	generated/MI_example/attrlex.c	180;"	d	file:
YY_TYPEDEF_YY_SIZE_T	generated/MI_example/attrlex.c	211;"	d	file:
YY_USER_ACTION	generated/MI_example/attrlex.c	782;"	d	file:
YY_USE_CONST	generated/MI_example/attrlex.c	113;"	d	file:
YY_USE_CONST	generated/MI_example/attrlex.c	120;"	d	file:
ZBIT	network/orion/SIM_permu.h	73;"	d
_GETOPT_H	tester/getopt.h	19;"	d
_MF_MEMORY_API_H_	interfaces/mf_api.h	66;"	d
_NETWORK_POWERAREA_H	network/orion/NetworkPowerArea.h	2;"	d
_NETWORK_POWER_H	network/orion_old/NetworkPower.h	55;"	d
_NO_PROTO	tester/getopt.C	26;"	d	file:
_PARM_TECHNOLOGY_H	network/orion_old/parm_technology.h	55;"	d
_POWER_ARBITER_H	network/orion_old/power_arbiter.h	58;"	d
_POWER_ARRAY_H	network/orion_old/power_array.h	55;"	d
_POWER_BUS_H	network/orion_old/power_bus.h	55;"	d
_POWER_CROSSBAR_H	network/orion_old/power_crossbar.h	57;"	d
_POWER_ROUTER_INIT_H	network/orion_old/power_router_init.h	55;"	d
_POWER_STATIC_H	network/orion_old/power_static.h	55;"	d
_POWER_UTILS_H	network/orion_old/power_utils.h	55;"	d
_SIM_ALU_MODEL_H	network/orion/SIM_ALU_model.h	35;"	d
_SIM_ARBITER_H	network/orion/SIM_arbiter.h	35;"	d
_SIM_ARRAY_INTERNAL_H	network/orion/SIM_array_internal.h	35;"	d
_SIM_ARRAY_MODEL_H	network/orion/SIM_array_model.h	35;"	d
_SIM_CAM_H	network/orion/SIM_cam.h	35;"	d
_SIM_CLOCK_POWER_H	network/orion/SIM_clock.h	35;"	d
_SIM_CROSSBAR_H	network/orion/SIM_crossbar.h	35;"	d
_SIM_LINK_MODEL_H	network/orion/SIM_link_model.h	35;"	d
_SIM_MISC_MODEL_H	network/orion/SIM_misc_model.h	35;"	d
_SIM_PARAMETER_H	network/orion/SIM_parameter.h	35;"	d
_SIM_PERMU_MODEL_H	network/orion/SIM_permu_model.h	35;"	d
_SIM_PORT_GARNET_H	network/orion/SIM_port_garnet.h	2;"	d
_SIM_PORT_H	network/orion/SIM_port.h	35;"	d
_SIM_PORT_H	network/orion/SIM_port_NEC.h	35;"	d
_SIM_PORT_H	network/orion/SIM_port_TRIPS.h	35;"	d
_SIM_PORT_H	network/orion/SIM_port_alpha.h	36;"	d
_SIM_PORT_H	network/orion/SIM_port_ibm.h	36;"	d
_SIM_PORT_H	network/orion/SIM_port_raw.h	35;"	d
_SIM_PORT_H	network/orion_old/SIM_port.h	55;"	d
_SIM_POWER_ALU_H	network/orion/SIM_ALU.h	35;"	d
_SIM_POWER_ARRAY_H	network/orion/SIM_array.h	35;"	d
_SIM_POWER_H	network/orion_old/SIM_power.h	55;"	d
_SIM_POWER_LINK_H	network/orion/SIM_link.h	36;"	d
_SIM_POWER_MISC_INTERNAL_H	network/orion/SIM_misc.h	35;"	d
_SIM_POWER_PERMU_H	network/orion/SIM_permu.h	35;"	d
_SIM_POWER_STATIC_H	network/orion/SIM_static.h	35;"	d
_SIM_POWER_TEST_H	network/orion_old/SIM_power_test.h	56;"	d
_SIM_REG_POWER_H	network/orion/SIM_reg.h	35;"	d
_SIM_ROUTER_AREA_H	network/orion/SIM_router_area.h	35;"	d
_SIM_ROUTER_H	network/orion/SIM_router.h	35;"	d
_SIM_ROUTER_MODEL_H	network/orion/SIM_router_model.h	35;"	d
_SIM_ROUTER_POWER_H	network/orion/SIM_router_power.h	35;"	d
_SIM_TECHNOLOGY_H	network/orion/SIM_technology.h	35;"	d
_SIM_TECHNOLOGY_V1_H	network/orion/SIM_technology_v1.h	35;"	d
_SIM_TECHNOLOGY_V2_H	network/orion/SIM_technology_v2.h	35;"	d
_SIM_TIME_H	network/orion/SIM_time.h	35;"	d
_SIM_UTIL_H	network/orion/SIM_util.h	35;"	d
_STDLIB_H	generated/MI_example/attrparse.c	293;"	d	file:
_STDLIB_H	generated/MI_example/attrparse.c	321;"	d	file:
__32BITS__	common/OptBigSet.C	75;"	d	file:
__64BITS__	common/OptBigSet.C	73;"	d	file:
__INSTANCE__	network/orion/SIM_parameter.h	41;"	d
__INSTANCE__	network/orion_old/SIM_power_test.h	64;"	d
__STDC_LIMIT_MACROS	generated/MI_example/attrlex.c	59;"	d	file:
__gnu_cxx	common/Address.h	/^namespace __gnu_cxx {$/;"	n
__l32_p32_vtvfprintf	simics/simics_api_dummy.c	/^int __l32_p32_vtvfprintf(FILE *stream, const char *format, va_list va) { assert(0); return 0; };$/;"	f
__l32_p64_vtvfprintf	simics/simics_api_dummy.c	/^int __l32_p64_vtvfprintf(FILE *stream, const char *format, va_list va) { assert(0); return 0; };$/;"	f
__l64_p64_vtvfprintf	simics/simics_api_dummy.c	/^int __l64_p64_vtvfprintf(FILE *stream, const char *format, va_list va) { assert(0); return 0; };$/;"	f
__sparc_v9_vtdebug_log_vararg	simics/simics_api_dummy.c	/^void __sparc_v9_vtdebug_log_vararg(int lvl, log_object *dev, char const *str, va_list va) { assert (0); return; };$/;"	f
__sparc_v9_vtvfprintf	simics/simics_api_dummy.c	/^int __sparc_v9_vtvfprintf(FILE *stream, const char *format, va_list va) { assert(0); return 0; };$/;"	f
_getopt_initialize	tester/getopt.C	/^_getopt_initialize ($/;"	f	file:
_getopt_internal	tester/getopt.C	/^_getopt_internal ($/;"	f
a_d1	network/orion/SIM_ALU.h	/^	LIB_Type_max_uint a_d1;$/;"	m	struct:__anon4
a_d2	network/orion/SIM_ALU.h	/^	LIB_Type_max_uint a_d2;$/;"	m	struct:__anon4
a_issueRequest	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::a_issueRequest(const Address& addr)$/;"	f	class:L1Cache_Controller
a_sendWriteBackAck	generated/MI_example/Directory_Controller.C	/^void Directory_Controller::a_sendWriteBackAck(const Address& addr)$/;"	f	class:Directory_Controller
abortCallback	simics/depreceated/SimicsDriver.C	/^void SimicsDriver::abortCallback(NodeID proc, SubBlock& data, CacheRequestType type, int thread) {$/;"	f	class:SimicsDriver
abortCallback	simics/depreceated/SimicsProcessor.C	/^void SimicsProcessor::abortCallback(SubBlock& data) {$/;"	f	class:SimicsProcessor
abortCallback	tester/SyntheticDriver.C	/^void SyntheticDriver::abortCallback(NodeID proc, SubBlock& data, CacheRequestType type, int thread)$/;"	f	class:SyntheticDriver
abortTransaction	tester/depreceated/XactAbortRequestGenerator.C	/^void XactAbortRequestGenerator::abortTransaction(){$/;"	f	class:XactAbortRequestGenerator
abortTransaction	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::abortTransaction(){$/;"	f	class:XactRequestGenerator
access_time	network/orion/SIM_array_internal.h	/^	double access_time,cycle_time;$/;"	m	struct:__anon13
add	common/BigSet.C	/^void Set::add(NodeID index)$/;"	f	class:Set
add	common/Histogram.C	/^void Histogram::add(const Histogram& hist)$/;"	f	class:Histogram
add	common/Histogram.C	/^void Histogram::add(int64 value)$/;"	f	class:Histogram
add	common/NetDest.C	/^void NetDest::add(MachineID newElement)$/;"	f	class:NetDest
add	common/OptBigSet.h	/^  inline void add(NodeID index)$/;"	f	class:Set
add	common/Set.C	/^void Set::add(NodeID index)$/;"	f	class:Set
add	system/StoreCache.C	/^void StoreCache::add(const SubBlock& block)$/;"	f	class:StoreCache
addAccessToTrace	profiler/LifetimeTrace.C	/^void LifetimeTrace::addAccessToTrace(LifetimeAccess& access) {$/;"	f	class:LifetimeTrace
addAddressTraceSample	profiler/Profiler.C	/^void Profiler::addAddressTraceSample(const CacheMsg& msg, NodeID id)$/;"	f	class:Profiler
addCheck	tester/CheckTable.C	/^void CheckTable::addCheck(const Address& address)$/;"	f	class:CheckTable
addFilter	common/Debug.C	/^bool Debug::addFilter(char ch)$/;"	f	class:Debug
addInPort	network/garnet-fixed-pipeline/NetworkInterface_d.C	/^void NetworkInterface_d::addInPort(NetworkLink_d *in_link, CreditLink_d *credit_link)$/;"	f	class:NetworkInterface_d
addInPort	network/garnet-fixed-pipeline/Router_d.C	/^void Router_d::addInPort(NetworkLink_d *in_link, CreditLink_d *credit_link)$/;"	f	class:Router_d
addInPort	network/garnet-flexible-pipeline/NetworkInterface.C	/^void NetworkInterface::addInPort(NetworkLink *in_link)$/;"	f	class:NetworkInterface
addInPort	network/garnet-flexible-pipeline/Router.C	/^void Router::addInPort(NetworkLink *in_link)$/;"	f	class:Router
addInPort	network/simple/PerfectSwitch.C	/^void PerfectSwitch::addInPort(const Vector<MessageBuffer*>& in)$/;"	f	class:PerfectSwitch
addInPort	network/simple/Switch.C	/^void Switch::addInPort(const Vector<MessageBuffer*>& in)$/;"	f	class:Switch
addL1RequestSample	profiler/Profiler.C	/^void Profiler::addL1RequestSample(const CacheMsg& msg, NodeID id, bool miss)$/;"	f	class:Profiler
addL2RequestSample	profiler/Profiler.C	/^void Profiler::addL2RequestSample(const GenericRequestType& type, MessageSizeType size, NodeID id, bool miss)$/;"	f	class:Profiler
addLeaseAccess	profiler/LifetimeTrace.C	/^void LifetimeTrace::addLeaseAccess(Time access_time, physical_address_t address, int core_id, int pc, Time lifetime) {$/;"	f	class:LifetimeTrace
addLink	network/simple/Topology.C	/^void Topology::addLink(SwitchID src, SwitchID dest, int link_latency)$/;"	f	class:Topology
addLink	network/simple/Topology.C	/^void Topology::addLink(SwitchID src, SwitchID dest, int link_latency, int bw_multiplier)$/;"	f	class:Topology
addLink	network/simple/Topology.C	/^void Topology::addLink(SwitchID src, SwitchID dest, int link_latency, int bw_multiplier, int link_weight)$/;"	f	class:Topology
addLinks	network/simple/Throttle.C	/^void Throttle::addLinks(const Vector<MessageBuffer*>& in_vec, const Vector<MessageBuffer*>& out_vec)$/;"	f	class:Throttle
addLoadAccess	profiler/LifetimeTrace.C	/^void LifetimeTrace::addLoadAccess(Time access_time, physical_address_t address, int core_id, int pc) {$/;"	f	class:LifetimeTrace
addLoadPC	system/TCpredictor.C	/^void TCpredictorPCSampler::addLoadPC(Time access_time, int address, int pc) {$/;"	f	class:TCpredictorPCSampler
addLocker	system/PersistentArbiter.C	/^void PersistentArbiter::addLocker(NodeID id, Address addr, AccessType type) {$/;"	f	class:PersistentArbiter
addNetDest	common/NetDest.C	/^void NetDest::addNetDest(const NetDest& netDest)$/;"	f	class:NetDest
addNode	network/garnet-fixed-pipeline/NetworkInterface_d.C	/^void NetworkInterface_d::addNode(Vector<MessageBuffer*>& in,  Vector<MessageBuffer*>& out)$/;"	f	class:NetworkInterface_d
addNode	network/garnet-flexible-pipeline/NetworkInterface.C	/^void NetworkInterface::addNode(Vector<MessageBuffer*>& in,  Vector<MessageBuffer*>& out)$/;"	f	class:NetworkInterface
addOutPort	network/garnet-fixed-pipeline/NetworkInterface_d.C	/^void NetworkInterface_d::addOutPort(NetworkLink_d *out_link, CreditLink_d *credit_link)$/;"	f	class:NetworkInterface_d
addOutPort	network/garnet-fixed-pipeline/Router_d.C	/^void Router_d::addOutPort(NetworkLink_d *out_link, const NetDest& routing_table_entry, int link_weight, CreditLink_d *credit_link)$/;"	f	class:Router_d
addOutPort	network/garnet-flexible-pipeline/NetworkInterface.C	/^void NetworkInterface::addOutPort(NetworkLink *out_link)$/;"	f	class:NetworkInterface
addOutPort	network/garnet-flexible-pipeline/Router.C	/^void Router::addOutPort(NetworkLink *out_link, const NetDest& routing_table_entry, int link_weight)$/;"	f	class:Router
addOutPort	network/simple/PerfectSwitch.C	/^void PerfectSwitch::addOutPort(const Vector<MessageBuffer*>& out, const NetDest& routing_table_entry)$/;"	f	class:PerfectSwitch
addOutPort	network/simple/Switch.C	/^void Switch::addOutPort(const Vector<MessageBuffer*>& out, const NetDest& routing_table_entry, int link_latency, int bw_multiplier)$/;"	f	class:Switch
addRandom	common/BigSet.C	/^void Set::addRandom()$/;"	f	class:Set
addRandom	common/NetDest.C	/^void NetDest::addRandom()$/;"	f	class:NetDest
addRandom	common/OptBigSet.C	/^void Set::addRandom()$/;"	f	class:Set
addRandom	common/Set.C	/^void Set::addRandom()$/;"	f	class:Set
addRecord	recorder/CacheRecorder.C	/^void CacheRecorder::addRecord(NodeID id, const Address& data_addr, const Address& pc_addr, CacheRequestType type, Time time)$/;"	f	class:CacheRecorder
addRequestSample	profiler/CacheProfiler.C	/^void CacheProfiler::addRequestSample(GenericRequestType requestType, int msgSize, bool miss)$/;"	f	class:CacheProfiler
addRoute	network/garnet-fixed-pipeline/RoutingUnit_d.C	/^void RoutingUnit_d::addRoute(const NetDest& routing_table_entry)$/;"	f	class:RoutingUnit_d
addSample	profiler/AccessTraceForAddress.C	/^void AccessTraceForAddress::addSample(int value)$/;"	f	class:AccessTraceForAddress
addSet	common/BigSet.C	/^void Set::addSet(const Set& set)$/;"	f	class:Set
addSet	common/OptBigSet.C	/^void Set::addSet(const Set& set)$/;"	f	class:Set
addSet	common/Set.C	/^void Set::addSet(const Set& set)$/;"	f	class:Set
addThreadDependency	common/Driver.h	/^  virtual void addThreadDependency(int procID, int requestor_thread, int conflict_thread) const { assert(0);}$/;"	f	class:Driver
addToSet	common/BigSet.h	/^  void addToSet(NodeID newElement) { add(newElement); }  \/\/ Deprecated$/;"	f	class:Set
addToSet	common/OptBigSet.h	/^  void addToSet(NodeID newElement) { add(newElement); }  \/\/ Deprecated$/;"	f	class:Set
addToSet	common/Set.h	/^  void addToSet(NodeID newElement) { add(newElement); }  \/\/ Deprecated$/;"	f	class:Set
addTraceSample	profiler/AddressProfiler.C	/^void AddressProfiler::addTraceSample(Address data_addr, Address pc_addr, CacheRequestType type, AccessModeType access_mode, NodeID id, bool sharing_miss)$/;"	f	class:AddressProfiler
addVirtualNetwork	network/simple/Throttle.C	/^void Throttle::addVirtualNetwork(MessageBuffer* in_ptr, MessageBuffer* out_ptr)$/;"	f	class:Throttle
addWeight	network/garnet-fixed-pipeline/RoutingUnit_d.C	/^void RoutingUnit_d::addWeight(int link_weight)$/;"	f	class:RoutingUnit_d
addr	simics/depreceated/SimicsProcessor.h	/^    Address            addr;$/;"	m	struct:SimicsProcessor::CacheRequest
addr_mask	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint addr_mask;$/;"	m	struct:__anon14
addr_mask	network/orion_old/power_array.h	/^	unsigned long int addr_mask;$/;"	m	struct:__anon68
address	system/PersistentArbiter.h	/^  Address address;$/;"	m	struct:ArbiterEntry
addressToCacheSet	system/CacheMemory.h	/^Index CacheMemory<ENTRY>::addressToCacheSet(const Address& address) const$/;"	f	class:CacheMemory
addressToInt	slicc_interface/RubySlicc_Util.h	/^extern inline int addressToInt(Address addr)$/;"	f
adds_list	system/H3BloomFilter.h	/^  int adds_list[6]; \/\/= {841,627,1555,241,7777,65391};$/;"	m	class:H3BloomFilter
adjust_lease	system/TCpredictor.C	/^void TCpredictorGlobal::adjust_lease(int delta, int min, int max) {$/;"	f	class:TCpredictorGlobal
adjust_lease	system/TCpredictor.C	/^void TCpredictorPerL2::adjust_lease(int L2BankId, int delta, int min, int max) {$/;"	f	class:TCpredictorPerL2
adjust_lease_all	system/TCpredictor.C	/^void TCpredictorPerL2::adjust_lease_all(int delta, int min, int max) {$/;"	f	class:TCpredictorPerL2
advanceActiveLock	system/PersistentArbiter.C	/^void PersistentArbiter::advanceActiveLock() {$/;"	f	class:PersistentArbiter
advanceTime	interfaces/GpusimInterface.C	/^void GpusimInterface::advanceTime( void ) {$/;"	f	class:GpusimInterface
advanceTime	interfaces/OpalInterface.C	/^void OpalInterface::advanceTime( void ) {$/;"	f	class:OpalInterface
advanceTime	interfaces/mf_api.h	/^  void (*advanceTime)( void );$/;"	m	struct:mf_ruby_api
advance_stage	network/garnet-fixed-pipeline/flit_d.h	/^	inline void advance_stage(flit_stage t_stage)$/;"	f	class:flit_d
advance_time	gpusim_ruby/gpusim_ruby.C	/^void gpusim_ruby::advance_time()$/;"	f	class:gpusim_ruby
allFilter	common/Debug.C	/^void Debug::allFilter()$/;"	f	class:Debug
alloca	generated/MI_example/attrparse.c	286;"	d	file:
allocate	system/CacheMemory.h	/^void CacheMemory<ENTRY>::allocate(const Address& address)$/;"	f	class:CacheMemory
allocate	system/PerfectCacheMemory.h	/^void PerfectCacheMemory<ENTRY>::allocate(const Address& address)$/;"	f	class:PerfectCacheMemory
allocate	system/TBETable.h	/^void TBETable<ENTRY>::allocate(const Address& address) $/;"	f	class:TBETable
and_byte_masks	slicc_interface/RubySlicc_Util.h	/^extern inline ruby_mem_access_byte_mask_t and_byte_masks(ruby_mem_access_byte_mask_t mask1, ruby_mem_access_byte_mask_t mask2) {$/;"	f
arbiter_clear_stat	network/orion_old/power_arbiter.C	/^static int arbiter_clear_stat(power_arbiter *arb)$/;"	f	file:
arbiter_record	network/orion_old/power_arbiter.C	/^int arbiter_record(power_arbiter *arb, unsigned long int new_req, unsigned long int old_req, unsigned new_grant, unsigned old_grant)$/;"	f
arbiter_report	network/orion_old/power_arbiter.C	/^double arbiter_report(power_arbiter *arb)$/;"	f
arbitrate_inports	network/garnet-fixed-pipeline/SWallocator_d.C	/^void SWallocator_d::arbitrate_inports()$/;"	f	class:SWallocator_d
arbitrate_invcs	network/garnet-fixed-pipeline/VCallocator_d.C	/^void VCallocator_d::arbitrate_invcs()$/;"	f	class:VCallocator_d
arbitrate_outports	network/garnet-fixed-pipeline/SWallocator_d.C	/^void SWallocator_d::arbitrate_outports()$/;"	f	class:SWallocator_d
arbitrate_outvcs	network/garnet-fixed-pipeline/VCallocator_d.C	/^void VCallocator_d::arbitrate_outvcs()$/;"	f	class:VCallocator_d
areNSlotsAvailable	buffers/MessageBuffer.C	/^bool MessageBuffer::areNSlotsAvailable(int n)$/;"	f	class:MessageBuffer
areNSlotsAvailable	system/GpusimDramInterface.h	/^   bool areNSlotsAvailable (int n) { return true; };  \/\/ infinite queue length$/;"	f	class:GpusimDramInterface
areNSlotsAvailable	system/MemoryControl.h	/^  bool areNSlotsAvailable (int n) { return true; };  \/\/ infinite queue length$/;"	f	class:MemoryControl
areNSlotsAvailable	system/TBETable.h	/^  bool areNSlotsAvailable(int n) const { $/;"	f	class:TBETable
argc	tester/getopt.C	/^     int argc;$/;"	v
argv	tester/getopt.C	/^     char **argv;$/;"	v
arr_buf_type	network/orion/SIM_array.h	/^	int arr_buf_type;$/;"	m	struct:__anon9
array_report	network/orion_old/power_array.C	/^double array_report(power_array_info *info, power_array *arr)$/;"	f
asiCallback	simics/depreceated/SimicsDriver.C	/^exception_type_t SimicsDriver::asiCallback(conf_object_t * cpu, generic_transaction_t *g) {$/;"	f	class:SimicsDriver
asiCallback	simics/depreceated/SimicsProcessor.C	/^exception_type_t SimicsProcessor::asiCallback(memory_transaction_t *mem_trans) {$/;"	f	class:SimicsProcessor
assert	common/Debug.h	153;"	d
assert	common/Debug.h	154;"	d
assoc	network/orion/SIM_array.h	/^	u_int assoc;$/;"	m	struct:__anon9
assoc	network/orion/SIM_array_internal.h	/^	u_int assoc;$/;"	m	struct:__anon18
assoc	network/orion/SIM_array_internal.h	/^	u_int assoc;$/;"	m	struct:__anon20
assoc	network/orion_old/power_array.h	/^	unsigned assoc;$/;"	m	struct:__anon72
assoc	network/orion_old/power_array.h	/^	unsigned assoc;$/;"	m	struct:__anon74
assoc	network/orion_old/power_array.h	/^	unsigned assoc;$/;"	m	struct:__anon80
associativity	network/orion/SIM_array_internal.h	/^	int associativity;$/;"	m	struct:__anon12
at_create_buffer	generated/MI_example/attrlex.c	/^    YY_BUFFER_STATE at_create_buffer  (FILE * file, int  size )$/;"	f
at_delete_buffer	generated/MI_example/attrlex.c	/^    void at_delete_buffer (YY_BUFFER_STATE  b )$/;"	f
at_flex_debug	generated/MI_example/attrlex.c	/^int at_flex_debug = 0;$/;"	v
at_flush_buffer	generated/MI_example/attrlex.c	/^    void at_flush_buffer (YY_BUFFER_STATE  b )$/;"	f
at_init_buffer	generated/MI_example/attrlex.c	/^    static void at_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:
at_load_buffer_state	generated/MI_example/attrlex.c	/^static void at_load_buffer_state  (void)$/;"	f	file:
at_scan_buffer	generated/MI_example/attrlex.c	/^YY_BUFFER_STATE at_scan_buffer  (char * base, yy_size_t  size )$/;"	f
at_scan_bytes	generated/MI_example/attrlex.c	/^YY_BUFFER_STATE at_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )$/;"	f
at_scan_string	generated/MI_example/attrlex.c	/^YY_BUFFER_STATE at_scan_string (yyconst char * yystr )$/;"	f
at_switch_to_buffer	generated/MI_example/attrlex.c	/^    void at_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f
atalloc	generated/MI_example/attrlex.c	/^void *atalloc (yy_size_t  size )$/;"	f
atensure_buffer_stack	generated/MI_example/attrlex.c	/^static void atensure_buffer_stack (void)$/;"	f	file:
aterror	generated/MI_example/attrlex.c	/^extern void aterror(const char *msg)$/;"	f
atfree	generated/MI_example/attrlex.c	/^void atfree (void * ptr )$/;"	f
atget_debug	generated/MI_example/attrlex.c	/^int atget_debug  (void)$/;"	f
atget_in	generated/MI_example/attrlex.c	/^FILE *atget_in  (void)$/;"	f
atget_leng	generated/MI_example/attrlex.c	/^int atget_leng  (void)$/;"	f
atget_lineno	generated/MI_example/attrlex.c	/^int atget_lineno  (void)$/;"	f
atget_out	generated/MI_example/attrlex.c	/^FILE *atget_out  (void)$/;"	f
atget_text	generated/MI_example/attrlex.c	/^char *atget_text  (void)$/;"	f
atin	generated/MI_example/attrlex.c	/^FILE *atin = (FILE *) 0, *atout = (FILE *) 0;$/;"	v
atleng	generated/MI_example/attrlex.c	/^int atleng;$/;"	v
atlex_destroy	generated/MI_example/attrlex.c	/^int atlex_destroy  (void)$/;"	f
atlineno	generated/MI_example/attrlex.c	/^int atlineno = 1;$/;"	v
atout	generated/MI_example/attrlex.c	/^FILE *atin = (FILE *) 0, *atout = (FILE *) 0;$/;"	v
atpop_buffer_state	generated/MI_example/attrlex.c	/^void atpop_buffer_state (void)$/;"	f
atpush_buffer_state	generated/MI_example/attrlex.c	/^void atpush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f
atrealloc	generated/MI_example/attrlex.c	/^void *atrealloc  (void * ptr, yy_size_t  size )$/;"	f
atrestart	generated/MI_example/attrlex.c	/^    void atrestart  (FILE * input_file )$/;"	f
atset_debug	generated/MI_example/attrlex.c	/^void atset_debug (int  bdebug )$/;"	f
atset_in	generated/MI_example/attrlex.c	/^void atset_in (FILE *  in_str )$/;"	f
atset_lineno	generated/MI_example/attrlex.c	/^void atset_lineno (int  line_number )$/;"	f
atset_out	generated/MI_example/attrlex.c	/^void atset_out (FILE *  out_str )$/;"	f
attext	generated/MI_example/attrlex.c	/^char *attext;$/;"	v
attr_value_t	simics/simics_api_dummy.c	/^typedef int attr_value_t;$/;"	t	file:
attrval	generated/MI_example/attrparse.c	/^  attr_value_t  *attrval;$/;"	m	union:YYSTYPE	file:
attrval	generated/MI_example/attrparse.h	/^  attr_value_t  *attrval;$/;"	m	union:YYSTYPE
atwrap	generated/MI_example/attrlex.c	363;"	d	file:
b_issuePUT	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::b_issuePUT(const Address& addr)$/;"	f	class:L1Cache_Controller
b_sendWriteBackNack	generated/MI_example/Directory_Controller.C	/^void Directory_Controller::b_sendWriteBackNack(const Address& addr)$/;"	f	class:Directory_Controller
bank	network/simple/Network_Files/GarnetFileMaker.py	/^    bank = col*rows$/;"	v
bank	network/simple/Network_Files/GarnetFileMaker.py	/^    bank = row$/;"	v
bank	network/simple/Network_Files/GarnetFileMaker.py	/^bank = 0$/;"	v
bank	network/simple/Network_Files/NetworkFileMaker.py	/^    bank = col*rows$/;"	v
bank	network/simple/Network_Files/NetworkFileMaker.py	/^    bank = row$/;"	v
bank	network/simple/Network_Files/NetworkFileMaker.py	/^bank = 0$/;"	v
bankBit0	config/RubyConfig.h	/^  static int bankBit0 () { return BANK_BIT_0; }$/;"	f	class:RubyConfig
bankBusy	profiler/Profiler.C	/^void Profiler::bankBusy()$/;"	f	class:Profiler
bankBusyTime	config/RubyConfig.h	/^  static int bankBusyTime () { return BANK_BUSY_TIME; }$/;"	f	class:RubyConfig
bankQueueSize	config/RubyConfig.h	/^  static int bankQueueSize () { return BANK_QUEUE_SIZE; }$/;"	f	class:RubyConfig
banks	network/simple/Network_Files/GarnetFileMaker.py	/^banks = rows*cols$/;"	v
banks	network/simple/Network_Files/NetworkFileMaker.py	/^banks = rows*cols$/;"	v
banksPerRank	config/RubyConfig.h	/^  static int banksPerRank () { return BANKS_PER_RANK; }$/;"	f	class:RubyConfig
basicBusBusyTime	config/RubyConfig.h	/^  static int basicBusBusyTime () { return BASIC_BUS_BUSY_TIME; }$/;"	f	class:RubyConfig
benchmark_contains_membar	slicc_interface/RubySlicc_Util2.C	/^bool benchmark_contains_membar() { return BENCHMARK_CONTAINS_MEMBAR; }$/;"	f
best_Ndbl	network/orion/SIM_array_internal.h	/^	int best_Ndwl,best_Ndbl;$/;"	m	struct:__anon13
best_Ndwl	network/orion/SIM_array_internal.h	/^	int best_Ndwl,best_Ndbl;$/;"	m	struct:__anon13
best_Nspd	network/orion/SIM_array_internal.h	/^	int best_Nspd;$/;"	m	struct:__anon13
best_Ntbl	network/orion/SIM_array_internal.h	/^	int best_Ntwl,best_Ntbl;$/;"	m	struct:__anon13
best_Ntspd	network/orion/SIM_array_internal.h	/^	int best_Ntspd;$/;"	m	struct:__anon13
best_Ntwl	network/orion/SIM_array_internal.h	/^	int best_Ntwl,best_Ntbl;$/;"	m	struct:__anon13
bitIndex	common/NetDest.h	/^  NodeID bitIndex(NodeID index) const {$/;"	f	class:NetDest
bitSelect	common/Address.h	/^physical_address_t Address::bitSelect(int small, int big) const \/\/ rips bits inclusive$/;"	f	class:Address
bit_width	network/orion/SIM_misc.h	/^	u_int bit_width;$/;"	m	struct:__anon33
bit_width	network/orion_old/power_bus.h	/^	unsigned bit_width;$/;"	m	struct:__anon83
bitline_delay_data	network/orion/SIM_array_internal.h	/^	double bitline_delay_data,bitline_delay_tag;$/;"	m	struct:__anon13
bitline_delay_tag	network/orion/SIM_array_internal.h	/^	double bitline_delay_data,bitline_delay_tag;$/;"	m	struct:__anon13
blk_bits	network/orion/SIM_array.h	/^	u_int blk_bits;$/;"	m	struct:__anon9
blk_bits	network/orion_old/power_array.h	/^	unsigned blk_bits;$/;"	m	struct:__anon80
block_size	network/orion/SIM_array_internal.h	/^	int block_size;$/;"	m	struct:__anon12
broadcast	common/BigSet.C	/^void Set::broadcast()$/;"	f	class:Set
broadcast	common/NetDest.C	/^void NetDest::broadcast()$/;"	f	class:NetDest
broadcast	common/NetDest.C	/^void NetDest::broadcast(MachineType machineType) {$/;"	f	class:NetDest
broadcast	common/OptBigSet.C	/^void Set::broadcast()$/;"	f	class:Set
broadcast	common/Set.C	/^void Set::broadcast()$/;"	f	class:Set
broadcastBandwidthAvailable	network/simple/Throttle.C	/^bool Throttle::broadcastBandwidthAvailable(int rand) const$/;"	f	class:Throttle
buf_read_count	network/garnet-fixed-pipeline/Router_d.h	/^	double buf_read_count, buf_write_count, crossbar_count, vc_local_arbit_count, vc_global_arbit_count, sw_local_arbit_count, sw_global_arbit_count;$/;"	m	class:Router_d
buf_set_para	network/orion_old/power_router_init.C	/^int buf_set_para(power_array_info *info, int is_fifo, unsigned n_read_port, unsigned n_write_port, unsigned n_entry, unsigned line_width, int outdrv)$/;"	f
buf_write_count	network/garnet-fixed-pipeline/Router_d.h	/^	double buf_read_count, buf_write_count, crossbar_count, vc_local_arbit_count, vc_global_arbit_count, sw_local_arbit_count, sw_global_arbit_count;$/;"	m	class:Router_d
buffer	network/orion/SIM_router.h	/^	double buffer;$/;"	m	struct:__anon46
bus_mask	network/orion/SIM_misc.h	/^	LIB_Type_max_uint bus_mask;$/;"	m	struct:__anon33
bus_mask	network/orion_old/power_bus.h	/^	unsigned long int bus_mask;$/;"	m	struct:__anon83
bus_record	network/orion_old/power_bus.C	/^int bus_record(power_bus *bus, unsigned long int old_state, unsigned long int new_state)$/;"	f
bus_report	network/orion_old/power_bus.C	/^double bus_report(power_bus *bus)$/;"	f
c_NAND	network/orion/SIM_ALU.c	/^static double c_NAND(u_int n_in)$/;"	f	file:
c_NOR	network/orion/SIM_ALU.c	/^static double c_NOR(u_int n_in)$/;"	f	file:
c_NOT	network/orion/SIM_ALU.c	/^static double c_NOT(void)$/;"	f	file:
c_PASS	network/orion/SIM_ALU.c	/^static double c_PASS(void)$/;"	f	file:
c_XOR	network/orion/SIM_ALU.c	/^static double c_XOR(void)$/;"	f	file:
c_clearOwner	generated/MI_example/Directory_Controller.C	/^void Directory_Controller::c_clearOwner(const Address& addr)$/;"	f	class:Directory_Controller
cacheAvail	system/CacheMemory.h	/^bool CacheMemory<ENTRY>::cacheAvail(const Address& address) const$/;"	f	class:CacheMemory
cacheAvail	system/PerfectCacheMemory.h	/^bool PerfectCacheMemory<ENTRY>::cacheAvail(const Address& address) const$/;"	f	class:PerfectCacheMemory
cacheProbe	system/CacheMemory.h	/^Address CacheMemory<ENTRY>::cacheProbe(const Address& address) const$/;"	f	class:CacheMemory
cacheProbe	system/PerfectCacheMemory.h	/^Address PerfectCacheMemory<ENTRY>::cacheProbe(const Address& newAddress) const$/;"	f	class:PerfectCacheMemory
cache_class	network/orion/SIM_router.h	/^	u_int cache_class;$/;"	m	struct:__anon48
cache_in_arb	network/orion/SIM_router.h	/^	SIM_arbiter_t cache_in_arb;$/;"	m	struct:__anon47
cache_in_arb_queue_info	network/orion/SIM_router.h	/^	SIM_array_info_t cache_in_arb_queue_info;$/;"	m	struct:__anon48
cache_in_buf	network/orion/SIM_router.h	/^	SIM_array_t cache_in_buf;$/;"	m	struct:__anon47
cache_in_buf	network/orion/SIM_router.h	/^	int cache_in_buf;$/;"	m	struct:__anon48
cache_in_buf_info	network/orion/SIM_router.h	/^	SIM_array_info_t cache_in_buf_info;$/;"	m	struct:__anon48
cache_n_switch	network/orion/SIM_router.h	/^	u_int cache_n_switch;$/;"	m	struct:__anon48
cache_size	network/orion/SIM_array_internal.h	/^	int cache_size;$/;"	m	struct:__anon12
cache_state_to_int	slicc_interface/RubySlicc_Util.h	/^extern inline int cache_state_to_int(L1Cache_State state)$/;"	f
calcMySummarySignature	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::calcMySummarySignature(TransactionInterfaceManager *xact_mgr) {$/;"	f	class:SimicsHypervisor
calculateVC	network/garnet-fixed-pipeline/NetworkInterface_d.C	/^int NetworkInterface_d::calculateVC(int vnet)$/;"	f	class:NetworkInterface_d
calculateVC	network/garnet-flexible-pipeline/NetworkInterface.C	/^int NetworkInterface::calculateVC(int vnet)$/;"	f	class:NetworkInterface
calculate_area	network/orion/NetworkPowerArea.C	/^double NetworkLink_d::calculate_area()$/;"	f	class:NetworkLink_d
calculate_area	network/orion/NetworkPowerArea.C	/^double Router_d::calculate_area()$/;"	f	class:Router_d
calculate_offline_power	network/orion/NetworkPowerArea.C	/^double NetworkLink_d::calculate_offline_power(double* static_power, double* dynamic_power)$/;"	f	class:NetworkLink_d
calculate_offline_power	network/orion/NetworkPowerArea.C	/^double Router_d::calculate_offline_power(SIM_router_info_t *info, SIM_router_power_t *router)$/;"	f	class:Router_d
calculate_offline_power	network/orion_old/NetworkPower.C	/^double NetworkLink_d::calculate_offline_power(power_bus* bus)$/;"	f	class:NetworkLink_d
calculate_offline_power	network/orion_old/NetworkPower.C	/^double Router_d::calculate_offline_power(power_router *router, power_router_info *info)$/;"	f	class:Router_d
calculate_performance_numbers	network/garnet-fixed-pipeline/Router_d.C	/^void Router_d::calculate_performance_numbers()$/;"	f	class:Router_d
calculate_power	network/orion/NetworkPowerArea.C	/^double NetworkLink_d::calculate_power(double* static_power, double* dynamic_power)$/;"	f	class:NetworkLink_d
calculate_power	network/orion/NetworkPowerArea.C	/^double Router_d::calculate_power()$/;"	f	class:Router_d
calculate_power	network/orion_old/NetworkPower.C	/^double NetworkLink_d::calculate_power()$/;"	f	class:NetworkLink_d
calculate_power	network/orion_old/NetworkPower.C	/^double Router_d::calculate_power()$/;"	f	class:Router_d
callBack	system/StoreBuffer.C	/^void StoreBuffer::callBack(const Address& addr, DataBlock& data)$/;"	f	class:StoreBuffer
callbackQueueEmpty	gpusim_ruby/gpusim_ruby.C	/^bool gpusim_ruby::callbackQueueEmpty(unsigned core_id)$/;"	f	class:gpusim_ruby
callbackQueueEmpty	interfaces/GpusimInterface.h	/^  bool callbackQueueEmpty(unsigned core_id) {$/;"	f	class:GpusimInterface
callbackQueuePop	gpusim_ruby/gpusim_ruby.C	/^void gpusim_ruby::callbackQueuePop(unsigned core_id)$/;"	f	class:gpusim_ruby
callbackQueuePop	interfaces/GpusimInterface.h	/^  void callbackQueuePop(unsigned core_id) { $/;"	f	class:GpusimInterface
callbackQueuePrint	interfaces/GpusimInterface.C	/^void GpusimInterface::callbackQueuePrint(unsigned core_id) const $/;"	f	class:GpusimInterface
callbackQueueTop	gpusim_ruby/gpusim_ruby.C	/^unsigned long long gpusim_ruby::callbackQueueTop(unsigned core_id)$/;"	f	class:gpusim_ruby
callbackQueueTop	interfaces/GpusimInterface.h	/^  unsigned long long callbackQueueTop(unsigned core_id) { $/;"	f	class:GpusimInterface
callback_queue	interfaces/GpusimInterface.h	/^  typedef std::list<unsigned long long> callback_queue; $/;"	t	class:GpusimInterface
cb_func_em_t	simics/simics_api_dummy.c	/^typedef int cb_func_em_t;$/;"	t	file:
cbuf_ff	network/orion/SIM_router.h	/^	SIM_ff_t cbuf_ff;$/;"	m	struct:__anon47
cbuf_ff_model	network/orion/SIM_router.h	/^	int cbuf_ff_model;$/;"	m	struct:__anon48
central_buf	network/orion/SIM_router.h	/^	SIM_array_t central_buf;$/;"	m	struct:__anon47
central_buf	network/orion/SIM_router.h	/^	int central_buf;$/;"	m	struct:__anon48
central_buf_info	network/orion/SIM_router.h	/^	SIM_array_info_t central_buf_info;$/;"	m	struct:__anon48
changeAddress	tester/Check.C	/^void Check::changeAddress(const Address& address)$/;"	f	class:Check
changeDebugFilter	common/Debug.C	/^void changeDebugFilter(int filter)$/;"	f
changeDebugVerbosity	common/Debug.C	/^void changeDebugVerbosity(VerbosityLevel vb)$/;"	f
changePermission	system/CacheMemory.h	/^void CacheMemory<ENTRY>::changePermission(const Address& address, AccessPermission new_perm)$/;"	f	class:CacheMemory
changePermission	system/PerfectCacheMemory.h	/^void PerfectCacheMemory<ENTRY>::changePermission(const Address& address, AccessPermission new_perm)$/;"	f	class:PerfectCacheMemory
change_mode_callback	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::change_mode_callback(void* desc, void* cpu, integer_t old_mode, integer_t new_mode)$/;"	f	class:SimicsHypervisor
change_mode_callback	simics/depreceated/commands.C	/^void change_mode_callback(void* desc, void* cpu, integer_t old_mode, integer_t new_mode)$/;"	f
check	system/StoreCache.C	/^bool StoreCache::check(const SubBlock& block) const$/;"	f	class:StoreCache
checkAllocator	generated/MI_example/CacheMsg.h	/^  static void checkAllocator() { if (s_allocator_ptr == NULL) { s_allocator_ptr = new Allocator<CacheMsg>; }}$/;"	f	class:CacheMsg
checkAllocator	generated/MI_example/MemoryMsg.h	/^  static void checkAllocator() { if (s_allocator_ptr == NULL) { s_allocator_ptr = new Allocator<MemoryMsg>; }}$/;"	f	class:MemoryMsg
checkAllocator	generated/MI_example/RequestMsg.h	/^  static void checkAllocator() { if (s_allocator_ptr == NULL) { s_allocator_ptr = new Allocator<RequestMsg>; }}$/;"	f	class:RequestMsg
checkAllocator	generated/MI_example/ResponseMsg.h	/^  static void checkAllocator() { if (s_allocator_ptr == NULL) { s_allocator_ptr = new Allocator<ResponseMsg>; }}$/;"	f	class:ResponseMsg
checkAllocator	generated/MI_example/TriggerMsg.h	/^  static void checkAllocator() { if (s_allocator_ptr == NULL) { s_allocator_ptr = new Allocator<TriggerMsg>; }}$/;"	f	class:TriggerMsg
checkArg	tester/test_framework.C	/^static void checkArg(char ch)$/;"	f	file:
checkCoherence	system/Sequencer.C	/^void Sequencer::checkCoherence(const Address& addr) {$/;"	f	class:Sequencer
checkCorrectness	tester/depreceated/XactAbortRequestGenerator.C	/^void XactAbortRequestGenerator::checkCorrectness(){$/;"	f	class:XactAbortRequestGenerator
checkCorrectness	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::checkCorrectness(){$/;"	f	class:XactRequestGenerator
checkFilter	common/Debug.C	/^bool Debug::checkFilter(char ch)$/;"	f	class:Debug
checkFilterString	common/Debug.C	/^bool Debug::checkFilterString(const char *filter_str)$/;"	f	class:Debug
checkForDeadlock	tester/DeterministicDriver.C	/^void DeterministicDriver::checkForDeadlock()$/;"	f	class:DeterministicDriver
checkForDeadlock	tester/SyntheticDriver.C	/^void SyntheticDriver::checkForDeadlock()$/;"	f	class:SyntheticDriver
checkForDeadlock	tester/Tester.C	/^void Tester::checkForDeadlock()$/;"	f	class:Tester
checkGlobalCoherenceInvariant	system/System.C	/^void System::checkGlobalCoherenceInvariant(const Address& addr  )  {$/;"	f	class:System
checkNetworkAllocation	network/garnet-fixed-pipeline/GarnetNetwork_d.C	/^void GarnetNetwork_d::checkNetworkAllocation(NodeID id, bool ordered, int network_num)$/;"	f	class:GarnetNetwork_d
checkNetworkAllocation	network/garnet-flexible-pipeline/GarnetNetwork.C	/^void GarnetNetwork::checkNetworkAllocation(NodeID id, bool ordered, int network_num)$/;"	f	class:GarnetNetwork
checkNetworkAllocation	network/simple/SimpleNetwork.C	/^void SimpleNetwork::checkNetworkAllocation(NodeID id, bool ordered, int network_num)$/;"	f	class:SimpleNetwork
checkOutstandingRequests	system/Sequencer.C	/^void Sequencer::checkOutstandingRequests() const {$/;"	f	class:Sequencer
checkReschedule	network/garnet-fixed-pipeline/NetworkInterface_d.C	/^void NetworkInterface_d::checkReschedule()$/;"	f	class:NetworkInterface_d
checkReschedule	network/garnet-flexible-pipeline/NetworkInterface.C	/^void NetworkInterface::checkReschedule()$/;"	f	class:NetworkInterface
checkReschedule	network/garnet-flexible-pipeline/Router.C	/^void Router::checkReschedule()$/;"	f	class:Router
checkVerbosityString	common/Debug.C	/^bool Debug::checkVerbosityString(const char *verb_str)$/;"	f	class:Debug
check_arbiter_reschedule	network/garnet-flexible-pipeline/Router.C	/^void Router::check_arbiter_reschedule()$/;"	f	class:Router
check_for_wakeup	network/garnet-fixed-pipeline/SWallocator_d.C	/^void SWallocator_d::check_for_wakeup()$/;"	f	class:SWallocator_d
check_for_wakeup	network/garnet-fixed-pipeline/Switch_d.C	/^void Switch_d::check_for_wakeup()$/;"	f	class:Switch_d
check_for_wakeup	network/garnet-fixed-pipeline/VCallocator_d.C	/^void VCallocator_d::check_for_wakeup()$/;"	f	class:VCallocator_d
clear	buffers/MessageBuffer.C	/^void MessageBuffer::clear()$/;"	f	class:MessageBuffer
clear	common/BigSet.C	/^void Set::clear()$/;"	f	class:Set
clear	common/DataBlock.C	/^void DataBlock::clear()$/;"	f	class:DataBlock
clear	common/Histogram.C	/^void Histogram::clear(int bins)$/;"	f	class:Histogram
clear	common/Histogram.C	/^void Histogram::clear(int binsize, int bins)$/;"	f	class:Histogram
clear	common/Histogram.h	/^  void clear() { clear(m_bins); }$/;"	f	class:Histogram
clear	common/NetDest.C	/^void NetDest::clear()$/;"	f	class:NetDest
clear	common/OptBigSet.h	/^  inline void clear() { for(int i=0; i<m_nArrayLen; i++) m_p_nArray[i] = 0; }$/;"	f	class:Set
clear	common/Set.C	/^void Set::clear()$/;"	f	class:Set
clear	network/simple/Throttle.C	/^void Throttle::clear()$/;"	f	class:Throttle
clear	system/BlockBloomFilter.C	/^void BlockBloomFilter::clear()$/;"	f	class:BlockBloomFilter
clear	system/BulkBloomFilter.C	/^void BulkBloomFilter::clear()$/;"	f	class:BulkBloomFilter
clear	system/GenericBloomFilter.C	/^void GenericBloomFilter::clear()$/;"	f	class:GenericBloomFilter
clear	system/H3BloomFilter.C	/^void H3BloomFilter::clear()$/;"	f	class:H3BloomFilter
clear	system/LSB_CountingBloomFilter.C	/^void LSB_CountingBloomFilter::clear()$/;"	f	class:LSB_CountingBloomFilter
clear	system/MultiBitSelBloomFilter.C	/^void MultiBitSelBloomFilter::clear()$/;"	f	class:MultiBitSelBloomFilter
clear	system/MultiGrainBloomFilter.C	/^void MultiGrainBloomFilter::clear()$/;"	f	class:MultiGrainBloomFilter
clear	system/NonCountingBloomFilter.C	/^void NonCountingBloomFilter::clear()$/;"	f	class:NonCountingBloomFilter
clearActiveRequestVector	simics/depreceated/SimicsProcessor.C	/^void SimicsProcessor::clearActiveRequestVector() {$/;"	f	class:SimicsProcessor
clearBuffers	network/simple/PerfectSwitch.C	/^void PerfectSwitch::clearBuffers()$/;"	f	class:PerfectSwitch
clearBuffers	network/simple/Switch.C	/^void Switch::clearBuffers()$/;"	f	class:Switch
clearFilter	common/Debug.C	/^void Debug::clearFilter()$/;"	f	class:Debug
clearRoutingTables	network/simple/PerfectSwitch.C	/^void PerfectSwitch::clearRoutingTables()$/;"	f	class:PerfectSwitch
clearRoutingTables	network/simple/Switch.C	/^void Switch::clearRoutingTables()$/;"	f	class:Switch
clearSet	common/BigSet.h	/^  void clearSet() { clear(); }   \/\/ Deprecated$/;"	f	class:Set
clearSet	common/OptBigSet.h	/^  void clearSet() { clear(); }   \/\/ Deprecated$/;"	f	class:Set
clearSet	common/Set.h	/^  void clearSet() { clear(); }   \/\/ Deprecated$/;"	f	class:Set
clearStats	buffers/MessageBuffer.h	/^  void clearStats() { m_not_avail_count = 0; m_msg_counter = 0; m_buffer_size.clear();}$/;"	f	class:MessageBuffer
clearStats	generated/MI_example/Chip.C	/^void Chip::clearStats()$/;"	f	class:Chip
clearStats	generated/MI_example/Directory_Controller.h	/^  static void clearStats() { s_profiler.clearStats(); }$/;"	f	class:Directory_Controller
clearStats	generated/MI_example/Directory_Profiler.C	/^void Directory_Profiler::clearStats()$/;"	f	class:Directory_Profiler
clearStats	generated/MI_example/L1Cache_Controller.h	/^  static void clearStats() { s_profiler.clearStats(); }$/;"	f	class:L1Cache_Controller
clearStats	generated/MI_example/L1Cache_Profiler.C	/^void L1Cache_Profiler::clearStats()$/;"	f	class:L1Cache_Profiler
clearStats	interfaces/GpusimInterface.C	/^void GpusimInterface::clearStats() {$/;"	f	class:GpusimInterface
clearStats	interfaces/OpalInterface.C	/^void OpalInterface::clearStats() {$/;"	f	class:OpalInterface
clearStats	network/garnet-fixed-pipeline/GarnetNetwork_d.C	/^void GarnetNetwork_d::clearStats()$/;"	f	class:GarnetNetwork_d
clearStats	network/garnet-flexible-pipeline/GarnetNetwork.C	/^void GarnetNetwork::clearStats()$/;"	f	class:GarnetNetwork
clearStats	network/simple/PerfectSwitch.C	/^void PerfectSwitch::clearStats()$/;"	f	class:PerfectSwitch
clearStats	network/simple/SimpleNetwork.C	/^void SimpleNetwork::clearStats()$/;"	f	class:SimpleNetwork
clearStats	network/simple/Switch.C	/^void Switch::clearStats()$/;"	f	class:Switch
clearStats	network/simple/Throttle.C	/^void Throttle::clearStats()$/;"	f	class:Throttle
clearStats	network/simple/Topology.h	/^  void clearStats() {}$/;"	f	class:Topology
clearStats	profiler/AddressProfiler.C	/^void AddressProfiler::clearStats()$/;"	f	class:AddressProfiler
clearStats	profiler/CacheProfiler.C	/^void CacheProfiler::clearStats()$/;"	f	class:CacheProfiler
clearStats	profiler/LifetimeTrace.C	/^void LifetimeTrace::clearStats()$/;"	f	class:LifetimeTrace
clearStats	profiler/Profiler.C	/^void Profiler::clearStats()$/;"	f	class:Profiler
clearStats	simics/depreceated/SimicsDriver.C	/^void SimicsDriver::clearStats() {$/;"	f	class:SimicsDriver
clearStats	system/System.C	/^void System::clearStats() const$/;"	f	class:System
clearStats	system/TCpredictor.C	/^void TCpredictorAddrfixed::clearStats()$/;"	f	class:TCpredictorAddrfixed
clearStats	system/TCpredictor.C	/^void TCpredictorContainer::clearStats()$/;"	f	class:TCpredictorContainer
clearStats	system/TCpredictor.C	/^void TCpredictorGlobal::clearStats()$/;"	f	class:TCpredictorGlobal
clearStats	system/TCpredictor.C	/^void TCpredictorPCAdaptive::clearStats()$/;"	f	class:TCpredictorPCAdaptive
clearStats	system/TCpredictor.C	/^void TCpredictorPCSampler::clearStats()$/;"	f	class:TCpredictorPCSampler
clearStats	system/TCpredictor.C	/^void TCpredictorPCfixed::clearStats()$/;"	f	class:TCpredictorPCfixed
clearStats	system/TCpredictor.C	/^void TCpredictorPerL2::clearStats()$/;"	f	class:TCpredictorPerL2
clearStats	tester/DeterministicDriver.h	/^  void clearStats() {}$/;"	f	class:DeterministicDriver
clearStats	tester/RaceyDriver.h	/^  void clearStats() {}$/;"	f	class:RaceyDriver
clearStats	tester/SyntheticDriver.h	/^  void clearStats() {}$/;"	f	class:SyntheticDriver
clearStats	tester/Tester.h	/^  void clearStats() {}$/;"	f	class:Tester
clearSummary	profiler/StoreTrace.C	/^void StoreTrace::clearSummary()$/;"	f	class:StoreTrace
clear_request_vector	network/garnet-fixed-pipeline/SWallocator_d.C	/^void SWallocator_d::clear_request_vector()$/;"	f	class:SWallocator_d
clear_request_vector	network/garnet-fixed-pipeline/VCallocator_d.C	/^void VCallocator_d::clear_request_vector()$/;"	f	class:VCallocator_d
clone	generated/MI_example/CacheMsg.h	/^  Message* clone() const { checkAllocator(); return s_allocator_ptr->allocate(*this); }$/;"	f	class:CacheMsg
clone	generated/MI_example/MemoryMsg.h	/^  Message* clone() const { checkAllocator(); return s_allocator_ptr->allocate(*this); }$/;"	f	class:MemoryMsg
clone	generated/MI_example/RequestMsg.h	/^  Message* clone() const { checkAllocator(); return s_allocator_ptr->allocate(*this); }$/;"	f	class:RequestMsg
clone	generated/MI_example/ResponseMsg.h	/^  Message* clone() const { checkAllocator(); return s_allocator_ptr->allocate(*this); }$/;"	f	class:ResponseMsg
clone	generated/MI_example/TriggerMsg.h	/^  Message* clone() const { checkAllocator(); return s_allocator_ptr->allocate(*this); }$/;"	f	class:TriggerMsg
closeDebugOutputFile	common/Debug.C	/^void Debug::closeDebugOutputFile ()$/;"	f	class:Debug
closer_clockwise_processor	slicc_interface/RubySlicc_ComponentMapping.h	/^bool closer_clockwise_processor(NodeID this_node, NodeID newer, NodeID older)$/;"	f
closest_clockwise_distance	slicc_interface/RubySlicc_ComponentMapping.h	/^NodeID closest_clockwise_distance(NodeID this_node, NodeID next_node)$/;"	f
col	network/simple/Network_Files/GarnetFileMaker.py	/^    col = 1$/;"	v
col	network/simple/Network_Files/GarnetFileMaker.py	/^col = 0$/;"	v
col	network/simple/Network_Files/NetworkFileMaker.py	/^    col = 1$/;"	v
col	network/simple/Network_Files/NetworkFileMaker.py	/^col = 0$/;"	v
col_addr	network/orion/SIM_array.h	/^	LIB_Type_max_uint col_addr;$/;"	m	struct:__anon10
col_addr	network/orion/SIM_reg.h	/^	LIB_Type_max_uint col_addr;$/;"	m	struct:__anon45
col_addr	network/orion_old/power_array.h	/^	unsigned long int col_addr;$/;"	m	struct:__anon77
col_dec	network/orion/SIM_array.h	/^	SIM_array_dec_t col_dec;$/;"	m	struct:__anon8
col_dec	network/orion_old/power_array.h	/^	power_decoder col_dec;$/;"	m	struct:__anon79
col_dec_model	network/orion/SIM_array.h	/^	int col_dec_model;$/;"	m	struct:__anon9
col_dec_model	network/orion_old/power_array.h	/^	int col_dec_model;$/;"	m	struct:__anon80
col_dec_pre	network/orion/SIM_array.h	/^	SIM_array_pre_t col_dec_pre;$/;"	m	struct:__anon8
col_dec_pre	network/orion_old/power_array.h	/^	power_arr_pre col_dec_pre;$/;"	m	struct:__anon79
col_dec_pre_model	network/orion/SIM_array.h	/^	int col_dec_pre_model;$/;"	m	struct:__anon9
col_dec_pre_model	network/orion_old/power_array.h	/^	int col_dec_pre_model;$/;"	m	struct:__anon80
colnum	generated/MI_example/attrlex.c	/^static int colnum=1;           \/* the current column number *\/$/;"	v	file:
cols	network/simple/Network_Files/GarnetFileMaker.py	/^    cols = int(sys.argv[2])$/;"	v
cols	network/simple/Network_Files/GarnetFileMaker.py	/^cols =0$/;"	v
cols	network/simple/Network_Files/NetworkFileMaker.py	/^    cols = int(sys.argv[2])$/;"	v
cols	network/simple/Network_Files/NetworkFileMaker.py	/^cols =0$/;"	v
comp	network/orion/SIM_array.h	/^	SIM_array_comp_t comp;$/;"	m	struct:__anon8
comp	network/orion_old/power_array.h	/^	power_comp comp;$/;"	m	struct:__anon79
comp_mask	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint comp_mask;$/;"	m	struct:__anon18
comp_mask	network/orion_old/power_array.h	/^	unsigned long int comp_mask;$/;"	m	struct:__anon72
comp_model	network/orion/SIM_array.h	/^	int comp_model;$/;"	m	struct:__anon9
comp_model	network/orion_old/power_array.h	/^	int comp_model;$/;"	m	struct:__anon80
comp_pre	network/orion/SIM_array.h	/^	SIM_array_pre_t comp_pre;$/;"	m	struct:__anon8
comp_pre	network/orion_old/power_array.h	/^	power_arr_pre comp_pre;$/;"	m	struct:__anon79
comp_pre_model	network/orion/SIM_array.h	/^	int comp_pre_model;$/;"	m	struct:__anon9
comp_pre_model	network/orion_old/power_array.h	/^	int comp_pre_model;$/;"	m	struct:__anon80
compare_part_delay	network/orion/SIM_array_internal.h	/^	double compare_part_delay;$/;"	m	struct:__anon13
completeTransaction	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::completeTransaction(TransactionInterfaceManager *xact_mgr){$/;"	f	class:SimicsHypervisor
computeCouplingCapacitance	network/orion/SIM_link.c	/^double computeCouplingCapacitance(double Length) {$/;"	f
computeGroundCapacitance	network/orion/SIM_link.c	/^double computeGroundCapacitance(double Length) {$/;"	f
computeResistance	network/orion/SIM_link.c	/^double computeResistance(double Length) { $/;"	f
conf_object	simics/simics_api_dummy.c	/^typedef int conf_object;$/;"	t	file:
conf_object_t	simics/simics_api_dummy.c	/^typedef int conf_object_t;$/;"	t	file:
conflictCallback	common/Driver.h	/^  virtual void conflictCallback(NodeID proc, SubBlock& data, CacheRequestType type, int thread) { assert(0) }; \/\/ Called by sequencer$/;"	f	class:Driver
conflictCallback	simics/depreceated/SimicsDriver.C	/^void SimicsDriver::conflictCallback(NodeID proc, SubBlock& data, CacheRequestType type, int thread) {$/;"	f	class:SimicsDriver
conflictCallback	simics/depreceated/SimicsProcessor.C	/^void SimicsProcessor::conflictCallback(CacheRequestType type, SubBlock& data) {$/;"	f	class:SimicsProcessor
conflictCallback	system/Sequencer.C	/^void Sequencer::conflictCallback(const CacheMsg& request, GenericMachineType respondingMach, int thread) {$/;"	f	class:Sequencer
conflictCallback	tester/SyntheticDriver.h	/^  void conflictCallback(NodeID proc, SubBlock& data, CacheRequestType type, int thread) {assert(0)};$/;"	f	class:SyntheticDriver
connect_type	network/orion/SIM_crossbar.h	/^	int connect_type;$/;"	m	struct:__anon32
connect_type	network/orion/SIM_router.h	/^	int connect_type;$/;"	m	struct:__anon48
connect_type	network/orion_old/power_crossbar.h	/^	unsigned connect_type;$/;"	m	struct:__anon87
connect_type	network/orion_old/power_router_init.h	/^	int connect_type;$/;"	m	struct:__anon90
const	tester/getopt.C	37;"	d	file:
const	tester/getopt.C	794;"	d	file:
consumeLink	network/garnet-fixed-pipeline/NetworkLink_d.h	/^	inline flit_d* consumeLink()$/;"	f	class:NetworkLink_d
consumeLink	network/garnet-flexible-pipeline/NetworkLink.C	/^flit* NetworkLink::consumeLink()$/;"	f	class:NetworkLink
controllerBusy	profiler/Profiler.C	/^void Profiler::controllerBusy(MachineID machID)$/;"	f	class:Profiler
core_asi_callback	simics/depreceated/interface.C	/^static exception_type_t core_asi_callback(conf_object_t * cpu, generic_transaction_t *g)$/;"	f	file:
core_control_register_write_callback	simics/depreceated/commands.C	/^void core_control_register_write_callback(void* desc, void* cpu, integer_t register_number, integer_t value) {$/;"	f
core_exception_callback	simics/depreceated/interface.C	/^static void core_exception_callback(void *data, conf_object_t *cpu,$/;"	f	file:
count	common/BigSet.C	/^int Set::count() const$/;"	f	class:Set
count	common/NetDest.C	/^int NetDest::count() const$/;"	f	class:NetDest
count	common/OptBigSet.C	/^int Set::count() const$/;"	f	class:Set
count	common/Set.C	/^int Set::count() const$/;"	f	class:Set
countBABroadcast	profiler/Profiler.h	/^  void countBABroadcast() { m_num_BA_broadcasts++; }$/;"	f	class:Profiler
countBAUnicast	profiler/Profiler.h	/^  void countBAUnicast() { m_num_BA_unicasts++; }$/;"	f	class:Profiler
countReadStarvingForAddress	system/NodePersistentTable.C	/^int NodePersistentTable::countReadStarvingForAddress(const Address& address) const$/;"	f	class:NodePersistentTable
countReadStarvingForAddress	system/PersistentTable.C	/^int PersistentTable::countReadStarvingForAddress(const Address& address) const$/;"	f	class:PersistentTable
countStarvingForAddress	system/NodePersistentTable.C	/^int NodePersistentTable::countStarvingForAddress(const Address& address) const$/;"	f	class:NodePersistentTable
countStarvingForAddress	system/PersistentTable.C	/^int PersistentTable::countStarvingForAddress(const Address& address) const$/;"	f	class:PersistentTable
countTransition	generated/MI_example/Directory_Profiler.C	/^void Directory_Profiler::countTransition(Directory_State state, Directory_Event event)$/;"	f	class:Directory_Profiler
countTransition	generated/MI_example/L1Cache_Profiler.C	/^void L1Cache_Profiler::countTransition(L1Cache_State state, L1Cache_Event event)$/;"	f	class:L1Cache_Profiler
createLinks	network/simple/Topology.C	/^void Topology::createLinks(bool isReconfiguration)$/;"	f	class:Topology
createNetwork	network/garnet-flexible-pipeline/GarnetNetwork.C	/^Network* Network::createNetwork(int nodes)$/;"	f	class:Network
creditQueue	network/garnet-fixed-pipeline/InputUnit_d.h	/^	flitBuffer_d *creditQueue;$/;"	m	class:InputUnit_d
creditQueue	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	flitBuffer_d *creditQueue;$/;"	m	class:NetworkInterface_d
crossbar	network/orion/SIM_router.h	/^	SIM_crossbar_t crossbar;$/;"	m	struct:__anon47
crossbar	network/orion/SIM_router.h	/^	double crossbar;$/;"	m	struct:__anon46
crossbar	network/orion_old/power_router_init.h	/^	power_crossbar crossbar;$/;"	m	struct:__anon89
crossbar_count	network/garnet-fixed-pipeline/Router_d.h	/^	double buf_read_count, buf_write_count, crossbar_count, vc_local_arbit_count, vc_global_arbit_count, sw_local_arbit_count, sw_global_arbit_count;$/;"	m	class:Router_d
crossbar_ctr_cap	network/orion_old/power_crossbar.C	/^static double crossbar_ctr_cap(double length, unsigned data_width, int prev_ctr, int next_ctr, unsigned degree, int connect_type, int trans_type)$/;"	f	file:
crossbar_in_cap	network/orion_old/power_crossbar.C	/^static double crossbar_in_cap(double wire_cap, unsigned n_out, int connect_type, int trans_type, double *Nsize)$/;"	f	file:
crossbar_in_len	network/orion/SIM_router.h	/^	double crossbar_in_len;$/;"	m	struct:__anon48
crossbar_in_len	network/orion_old/power_router_init.h	/^	double crossbar_in_len;$/;"	m	struct:__anon90
crossbar_int_cap	network/orion_old/power_crossbar.C	/^static double crossbar_int_cap(unsigned degree, int connect_type, int trans_type)$/;"	f	file:
crossbar_io_cap	network/orion_old/power_crossbar.C	/^static double crossbar_io_cap(double length)$/;"	f	file:
crossbar_model	network/orion/SIM_router.h	/^	int crossbar_model;$/;"	m	struct:__anon48
crossbar_model	network/orion_old/power_router_init.h	/^	int crossbar_model;$/;"	m	struct:__anon90
crossbar_out_cap	network/orion_old/power_crossbar.C	/^static double crossbar_out_cap(double length, unsigned n_in, int connect_type, int trans_type, double *Nsize)$/;"	f	file:
crossbar_out_len	network/orion/SIM_router.h	/^	double crossbar_out_len;$/;"	m	struct:__anon48
crossbar_out_len	network/orion_old/power_router_init.h	/^	double crossbar_out_len;$/;"	m	struct:__anon90
crossbar_record	network/orion_old/power_crossbar.C	/^int crossbar_record(power_crossbar *xb, int io, unsigned long int new_data, unsigned long int old_data, unsigned new_port, unsigned old_port)$/;"	f
crossbar_report	network/orion_old/power_crossbar.C	/^double crossbar_report(power_crossbar *crsbar)$/;"	f
ctr	network/orion/SIM_permu.h	/^	LIB_Type_max_uint ctr[4];$/;"	m	struct:__anon40
ctr_mask	network/orion/SIM_permu.h	/^	LIB_Type_max_uint ctr_mask;$/;"	m	struct:__anon40
ctrl_exception_done	simics/depreceated/commands.C	/^void ctrl_exception_done(void* desc, void* cpu, integer_t val)$/;"	f
ctrl_exception_start	simics/depreceated/commands.C	/^void ctrl_exception_start(void* desc, void* cpu, integer_t val)$/;"	f
cycle_time	network/orion/SIM_array_internal.h	/^	double access_time,cycle_time;$/;"	m	struct:__anon13
cycles	simics/depreceated/SimicsDriver.h	/^typedef struct { MemoryTransactionResult result; int cycles; } StallCycle;$/;"	m	struct:__anon92
cycles_t	simics/simics_api_dummy.c	/^typedef int cycles_t;$/;"	t	file:
d_sendData	generated/MI_example/Directory_Controller.C	/^void Directory_Controller::d_sendData(const Address& addr)$/;"	f	class:Directory_Controller
dataBlockBits	config/RubyConfig.h	/^  static int dataBlockBits() { return g_DATA_BLOCK_BITS; }$/;"	f	class:RubyConfig
dataBlockBytes	config/RubyConfig.h	/^  static int dataBlockBytes() { return g_DATA_BLOCK_BYTES; }$/;"	f	class:RubyConfig
data_amp	network/orion/SIM_array.h	/^	SIM_array_amp_t data_amp;$/;"	m	struct:__anon8
data_amp	network/orion_old/power_array.h	/^	power_amp data_amp;$/;"	m	struct:__anon79
data_amp_model	network/orion/SIM_array.h	/^	int data_amp_model;$/;"	m	struct:__anon9
data_amp_model	network/orion_old/power_array.h	/^	int data_amp_model;$/;"	m	struct:__anon80
data_arr_height	network/orion/SIM_array.h	/^	double data_arr_height;$/;"	m	struct:__anon9
data_arr_height	network/orion_old/power_array.h	/^	double data_arr_height;$/;"	m	struct:__anon80
data_arr_width	network/orion/SIM_array.h	/^	double data_arr_width;$/;"	m	struct:__anon9
data_arr_width	network/orion_old/power_array.h	/^	double data_arr_width;$/;"	m	struct:__anon80
data_bitline	network/orion/SIM_array.h	/^	SIM_array_bitline_t data_bitline;$/;"	m	struct:__anon8
data_bitline	network/orion_old/power_array.h	/^	power_bitline data_bitline;$/;"	m	struct:__anon79
data_bitline_model	network/orion/SIM_array.h	/^	int data_bitline_model;$/;"	m	struct:__anon9
data_bitline_model	network/orion_old/power_array.h	/^	int data_bitline_model;$/;"	m	struct:__anon80
data_bitline_pre	network/orion/SIM_array.h	/^	SIM_array_pre_t data_bitline_pre;$/;"	m	struct:__anon8
data_bitline_pre	network/orion_old/power_array.h	/^	power_arr_pre data_bitline_pre;$/;"	m	struct:__anon79
data_bitline_pre_model	network/orion/SIM_array.h	/^	int data_bitline_pre_model;$/;"	m	struct:__anon9
data_bitline_pre_model	network/orion_old/power_array.h	/^	int data_bitline_pre_model;$/;"	m	struct:__anon80
data_colsel_pre	network/orion/SIM_array.h	/^	SIM_array_pre_t data_colsel_pre;$/;"	m	struct:__anon8
data_colsel_pre	network/orion_old/power_array.h	/^	power_arr_pre data_colsel_pre;$/;"	m	struct:__anon79
data_colsel_pre_model	network/orion/SIM_array.h	/^	int data_colsel_pre_model;$/;"	m	struct:__anon9
data_colsel_pre_model	network/orion_old/power_array.h	/^	int data_colsel_pre_model;$/;"	m	struct:__anon80
data_end	network/orion/SIM_array.h	/^	u_int data_end;$/;"	m	struct:__anon9
data_end	network/orion_old/power_array.h	/^	unsigned data_end;$/;"	m	struct:__anon80
data_line	network/orion/SIM_array.h	/^	char data_line[0];$/;"	m	struct:__anon10
data_line	network/orion/SIM_reg.h	/^	P_DATA_T data_line;$/;"	m	struct:__anon45
data_line	network/orion_old/power_array.h	/^	char data_line[0];$/;"	m	struct:__anon77
data_line_size	network/orion/SIM_array.h	/^	u_int data_line_size;$/;"	m	struct:__anon10
data_line_size	network/orion/SIM_reg.h	/^	u_int data_line_size;$/;"	m	struct:__anon45
data_line_size	network/orion_old/power_array.h	/^	unsigned data_line_size;$/;"	m	struct:__anon77
data_mask	network/orion/SIM_permu.h	/^	LIB_Type_max_uint data_mask;$/;"	m	struct:__anon40
data_mem	network/orion/SIM_array.h	/^	SIM_array_mem_t data_mem;$/;"	m	struct:__anon8
data_mem	network/orion_old/power_array.h	/^	power_mem data_mem;$/;"	m	struct:__anon79
data_mem_model	network/orion/SIM_array.h	/^	int data_mem_model;$/;"	m	struct:__anon9
data_mem_model	network/orion_old/power_array.h	/^	int data_mem_model;$/;"	m	struct:__anon80
data_n_share_amp	network/orion/SIM_array.h	/^	u_int data_n_share_amp;$/;"	m	struct:__anon9
data_n_share_amp	network/orion_old/power_array.h	/^	unsigned data_n_share_amp;$/;"	m	struct:__anon80
data_ndbl	network/orion/SIM_array.h	/^	u_int data_ndbl;$/;"	m	struct:__anon9
data_ndbl	network/orion_old/power_array.h	/^	unsigned data_ndbl;$/;"	m	struct:__anon80
data_ndwl	network/orion/SIM_array.h	/^	u_int data_ndwl;$/;"	m	struct:__anon9
data_ndwl	network/orion_old/power_array.h	/^	unsigned data_ndwl;$/;"	m	struct:__anon80
data_nspd	network/orion/SIM_array.h	/^	u_int data_nspd;$/;"	m	struct:__anon9
data_nspd	network/orion_old/power_array.h	/^	unsigned data_nspd;$/;"	m	struct:__anon80
data_or_instr_t	simics/simics_api_dummy.c	/^typedef int data_or_instr_t;$/;"	t	file:
data_output_delay	network/orion/SIM_array_internal.h	/^	double data_output_delay;$/;"	m	struct:__anon13
data_width	network/orion/SIM_ALU.h	/^	u_int data_width;$/;"	m	struct:__anon4
data_width	network/orion/SIM_array.h	/^	u_int data_width;$/;"	m	struct:__anon9
data_width	network/orion/SIM_crossbar.h	/^	u_int data_width;$/;"	m	struct:__anon32
data_width	network/orion/SIM_misc.h	/^	u_int data_width;$/;"	m	struct:__anon33
data_width	network/orion/SIM_permu.h	/^	u_int data_width;$/;"	m	struct:__anon40
data_width	network/orion/SIM_permu.h	/^	u_int data_width;$/;"	m	struct:__anon41
data_width	network/orion_old/power_array.h	/^	unsigned data_width;$/;"	m	struct:__anon80
data_width	network/orion_old/power_bus.h	/^	unsigned data_width;$/;"	m	struct:__anon83
data_width	network/orion_old/power_crossbar.h	/^	unsigned data_width; $/;"	m	struct:__anon87
data_wordline	network/orion/SIM_array.h	/^	SIM_array_wordline_t data_wordline;$/;"	m	struct:__anon8
data_wordline	network/orion_old/power_array.h	/^	power_wordline data_wordline;$/;"	m	struct:__anon79
data_wordline_model	network/orion/SIM_array.h	/^	int data_wordline_model;$/;"	m	struct:__anon9
data_wordline_model	network/orion_old/power_array.h	/^	int data_wordline_model;$/;"	m	struct:__anon80
deallocate	system/CacheMemory.h	/^void CacheMemory<ENTRY>::deallocate(const Address& address)$/;"	f	class:CacheMemory
deallocate	system/PerfectCacheMemory.h	/^void PerfectCacheMemory<ENTRY>::deallocate(const Address& address)$/;"	f	class:PerfectCacheMemory
deallocate	system/TBETable.h	/^void TBETable<ENTRY>::deallocate(const Address& address) $/;"	f	class:TBETable
debugMsg	common/Debug.C	/^void Debug::debugMsg( const char *fmt, ... )$/;"	f	class:Debug
debug_cout_ptr	common/Debug.C	/^std::ostream * debug_cout_ptr;$/;"	v
dec_data_3to8	network/orion/SIM_array_internal.h	/^	double dec_data_driver,dec_data_3to8,dec_data_inv;$/;"	m	struct:__anon13
dec_data_driver	network/orion/SIM_array_internal.h	/^	double dec_data_driver,dec_data_3to8,dec_data_inv;$/;"	m	struct:__anon13
dec_data_inv	network/orion/SIM_array_internal.h	/^	double dec_data_driver,dec_data_3to8,dec_data_inv;$/;"	m	struct:__anon13
dec_tag_3to8	network/orion/SIM_array_internal.h	/^	double dec_tag_driver,dec_tag_3to8,dec_tag_inv;$/;"	m	struct:__anon13
dec_tag_driver	network/orion/SIM_array_internal.h	/^	double dec_tag_driver,dec_tag_3to8,dec_tag_inv;$/;"	m	struct:__anon13
dec_tag_inv	network/orion/SIM_array_internal.h	/^	double dec_tag_driver,dec_tag_3to8,dec_tag_inv;$/;"	m	struct:__anon13
decoder_delay_data	network/orion/SIM_array_internal.h	/^	double decoder_delay_data,decoder_delay_tag;$/;"	m	struct:__anon13
decoder_delay_tag	network/orion/SIM_array_internal.h	/^	double decoder_delay_data,decoder_delay_tag;$/;"	m	struct:__anon13
decrement	system/BlockBloomFilter.C	/^void BlockBloomFilter::decrement(const Address& addr)$/;"	f	class:BlockBloomFilter
decrement	system/BulkBloomFilter.C	/^void BulkBloomFilter::decrement(const Address& addr)$/;"	f	class:BulkBloomFilter
decrement	system/GenericBloomFilter.C	/^void GenericBloomFilter::decrement(const Address& addr)$/;"	f	class:GenericBloomFilter
decrement	system/H3BloomFilter.C	/^void H3BloomFilter::decrement(const Address& addr)$/;"	f	class:H3BloomFilter
decrement	system/LSB_CountingBloomFilter.C	/^void LSB_CountingBloomFilter::decrement(const Address& addr)$/;"	f	class:LSB_CountingBloomFilter
decrement	system/MultiBitSelBloomFilter.C	/^void MultiBitSelBloomFilter::decrement(const Address& addr)$/;"	f	class:MultiBitSelBloomFilter
decrement	system/MultiGrainBloomFilter.C	/^void MultiGrainBloomFilter::decrement(const Address& addr)$/;"	f	class:MultiGrainBloomFilter
decrement	system/NonCountingBloomFilter.C	/^void NonCountingBloomFilter::decrement(const Address& addr)$/;"	f	class:NonCountingBloomFilter
decrement_credit	network/garnet-fixed-pipeline/OutVcState_d.h	/^	inline void decrement_credit()$/;"	f	class:OutVcState_d
decrement_credit	network/garnet-fixed-pipeline/OutputUnit_d.C	/^void OutputUnit_d::decrement_credit(int out_vc)$/;"	f	class:OutputUnit_d
degree	network/orion/SIM_crossbar.h	/^	u_int degree;	\/* only used by multree crossbar *\/$/;"	m	struct:__anon32
degree	network/orion/SIM_router.h	/^	u_int degree;	\/* only used by multree crossbar *\/$/;"	m	struct:__anon48
degree	network/orion_old/power_crossbar.h	/^	unsigned degree;       \/\/used only for multree xbar$/;"	m	struct:__anon87
degree	network/orion_old/power_router_init.h	/^	int degree;$/;"	m	struct:__anon90
depth	network/orion/SIM_crossbar.h	/^	u_int depth;	\/* only used by multree crossbar *\/$/;"	m	struct:__anon32
depth	network/orion_old/power_crossbar.h	/^	unsigned depth;  \/\/used only for multree xbar$/;"	m	struct:__anon87
dequeue	buffers/MessageBuffer.C	/^void MessageBuffer::dequeue(MsgPtr& message)$/;"	f	class:MessageBuffer
dequeue	buffers/MessageBuffer.h	/^  void dequeue() { pop(); }$/;"	f	class:MessageBuffer
dequeue	system/GpusimDramInterface.C	/^void GpusimDramInterface::dequeue () {$/;"	f	class:GpusimDramInterface
dequeue	system/MemoryControl.C	/^void MemoryControl::dequeue () {$/;"	f	class:MemoryControl
dequeue	system/StoreBuffer.C	/^void StoreBuffer::dequeue()$/;"	f	class:StoreBuffer
dequeue_getDelayCycles	buffers/MessageBuffer.C	/^int MessageBuffer::dequeue_getDelayCycles()$/;"	f	class:MessageBuffer
dequeue_getDelayCycles	buffers/MessageBuffer.C	/^int MessageBuffer::dequeue_getDelayCycles(MsgPtr& message)$/;"	f	class:MessageBuffer
destroy	generated/MI_example/CacheMsg.h	/^  void destroy() { checkAllocator(); s_allocator_ptr->deallocate(this); }$/;"	f	class:CacheMsg
destroy	generated/MI_example/MemoryMsg.h	/^  void destroy() { checkAllocator(); s_allocator_ptr->deallocate(this); }$/;"	f	class:MemoryMsg
destroy	generated/MI_example/RequestMsg.h	/^  void destroy() { checkAllocator(); s_allocator_ptr->deallocate(this); }$/;"	f	class:RequestMsg
destroy	generated/MI_example/ResponseMsg.h	/^  void destroy() { checkAllocator(); s_allocator_ptr->deallocate(this); }$/;"	f	class:ResponseMsg
destroy	generated/MI_example/TriggerMsg.h	/^  void destroy() { checkAllocator(); s_allocator_ptr->deallocate(this); }$/;"	f	class:TriggerMsg
destroy	gpusim_ruby/gpusim_ruby.C	/^void gpusim_ruby::destroy() {$/;"	f	class:gpusim_ruby
destroy_simulator	init.C	/^void destroy_simulator()$/;"	f
dimmBit0	config/RubyConfig.h	/^  static int dimmBit0 () { return DIMM_BIT_0; }$/;"	f	class:RubyConfig
dimmsPerChannel	config/RubyConfig.h	/^  static int dimmsPerChannel () { return DIMMS_PER_CHANNEL; }$/;"	f	class:RubyConfig
dirty_bak	network/orion/SIM_array.h	/^	u_int dirty_bak;$/;"	m	struct:__anon11
dirty_bak	network/orion_old/power_array.h	/^	unsigned dirty_bak;$/;"	m	struct:__anon78
distributedPersistentEnabled	slicc_interface/RubySlicc_Util.h	/^extern inline bool distributedPersistentEnabled()$/;"	f
doRequest	system/Sequencer.C	/^bool Sequencer::doRequest(const CacheMsg& request) {$/;"	f	class:Sequencer
doTransition	generated/MI_example/Directory_Transitions.C	/^TransitionResult Directory_Controller::doTransition(Directory_Event event, Directory_State state, const Address& addr$/;"	f	class:Directory_Controller
doTransition	generated/MI_example/L1Cache_Transitions.C	/^TransitionResult L1Cache_Controller::doTransition(L1Cache_Event event, L1Cache_State state, const Address& addr$/;"	f	class:L1Cache_Controller
doTransitionWorker	generated/MI_example/Directory_Transitions.C	/^TransitionResult Directory_Controller::doTransitionWorker(Directory_Event event, Directory_State state, Directory_State& next_state, const Address& addr$/;"	f	class:Directory_Controller
doTransitionWorker	generated/MI_example/L1Cache_Transitions.C	/^TransitionResult L1Cache_Controller::doTransitionWorker(L1Cache_Event event, L1Cache_State state, L1Cache_State& next_state, const Address& addr$/;"	f	class:L1Cache_Controller
downgrade	profiler/StoreTrace.C	/^void StoreTrace::downgrade(NodeID node)$/;"	f	class:StoreTrace
drive_mux_delay	network/orion/SIM_array_internal.h	/^	double drive_mux_delay;$/;"	m	struct:__anon13
drive_valid_delay	network/orion/SIM_array_internal.h	/^	double drive_valid_delay;$/;"	m	struct:__anon13
dtlb_demap_callback	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::dtlb_demap_callback(void * desc, void * mmu, integer_t tag_reg, integer_t data_reg){$/;"	f	class:SimicsHypervisor
dtlb_demap_callback	simics/depreceated/commands.C	/^void dtlb_demap_callback(void* desc, void* chmmu, integer_t tag_reg, integer_t data_reg){$/;"	f
dtlb_map_callback	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::dtlb_map_callback(void * desc, void * mmu, integer_t tag_reg, integer_t data_reg){$/;"	f	class:SimicsHypervisor
dtlb_map_callback	simics/depreceated/commands.C	/^void dtlb_map_callback(void* desc, void* chmmu, integer_t tag_reg, integer_t data_reg){$/;"	f
dtlb_overwrite_callback	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::dtlb_overwrite_callback(void * desc, void * mmu, integer_t tag_reg, integer_t data_reg){$/;"	f	class:SimicsHypervisor
dtlb_overwrite_callback	simics/depreceated/commands.C	/^void dtlb_overwrite_callback(void* desc, void* chmmu, integer_t tag_reg, integer_t data_reg){$/;"	f
dtlb_replace_callback	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::dtlb_replace_callback(void * desc, void * mmu, integer_t tag_reg, integer_t data_reg){$/;"	f	class:SimicsHypervisor
dtlb_replace_callback	simics/depreceated/commands.C	/^void dtlb_replace_callback(void* desc, void* chmmu, integer_t tag_reg, integer_t data_reg){$/;"	f
dumpCacheData	generated/MI_example/Chip.C	/^void Chip::dumpCacheData(ostream& out) const$/;"	f	class:Chip
dumpCaches	generated/MI_example/Chip.C	/^void Chip::dumpCaches(ostream& out) const$/;"	f	class:Chip
dumpRecords	recorder/CacheRecorder.C	/^int CacheRecorder::dumpRecords(string filename)$/;"	f	class:CacheRecorder
dumpStats	generated/MI_example/Directory_Controller.h	/^  static void dumpStats(ostream& out) { s_profiler.dumpStats(out); }$/;"	f	class:Directory_Controller
dumpStats	generated/MI_example/Directory_Profiler.C	/^void Directory_Profiler::dumpStats(ostream& out) const$/;"	f	class:Directory_Profiler
dumpStats	generated/MI_example/L1Cache_Controller.h	/^  static void dumpStats(ostream& out) { s_profiler.dumpStats(out); }$/;"	f	class:L1Cache_Controller
dumpStats	generated/MI_example/L1Cache_Profiler.C	/^void L1Cache_Profiler::dumpStats(ostream& out) const$/;"	f	class:L1Cache_Profiler
dump_registers	simics/depreceated/commands.C	/^void dump_registers(conf_object_t *cpu)$/;"	f
e_access	network/orion/SIM_array_internal.h	/^	double e_access;$/;"	m	struct:__anon17
e_access	network/orion/SIM_array_internal.h	/^	double e_access;$/;"	m	struct:__anon18
e_access	network/orion_old/power_array.h	/^	double e_access;	$/;"	m	struct:__anon71
e_access	network/orion_old/power_array.h	/^	double e_access;$/;"	m	struct:__anon72
e_anyreq	network/orion/SIM_misc.h	/^	double e_anyreq;$/;"	m	struct:__anon34
e_bit_match	network/orion/SIM_array_internal.h	/^	double e_bit_match;$/;"	m	struct:__anon18
e_bit_match	network/orion_old/power_array.h	/^	double e_bit_match;$/;"	m	struct:__anon72
e_bit_mismatch	network/orion/SIM_array_internal.h	/^	double e_bit_mismatch;$/;"	m	struct:__anon18
e_bit_mismatch	network/orion_old/power_array.h	/^	double e_bit_mismatch;$/;"	m	struct:__anon72
e_blk	network/orion/SIM_ALU.h	/^	double e_blk[PLX_BLK];$/;"	m	struct:__anon4
e_charge	network/orion/SIM_array_internal.h	/^	double e_charge;$/;"	m	struct:__anon22
e_charge	network/orion_old/power_array.h	/^	double e_charge;$/;"	m	struct:__anon76
e_chg_addr	network/orion/SIM_array_internal.h	/^	double e_chg_addr;$/;"	m	struct:__anon14
e_chg_addr	network/orion/SIM_array_internal.h	/^	double e_chg_addr;$/;"	m	struct:__anon18
e_chg_addr	network/orion/SIM_array_internal.h	/^	double e_chg_addr;$/;"	m	struct:__anon20
e_chg_addr	network/orion_old/power_array.h	/^	double e_chg_addr;$/;"	m	struct:__anon68
e_chg_addr	network/orion_old/power_array.h	/^	double e_chg_addr;$/;"	m	struct:__anon72
e_chg_addr	network/orion_old/power_array.h	/^	double e_chg_addr;$/;"	m	struct:__anon74
e_chg_carry	network/orion/SIM_arbiter.h	/^	double e_chg_carry;$/;"	m	struct:__anon7
e_chg_carry	network/orion_old/power_arbiter.h	/^	double e_chg_carry;$/;"	m	struct:__anon58
e_chg_carry_in	network/orion/SIM_arbiter.h	/^	double e_chg_carry_in;$/;"	m	struct:__anon7
e_chg_carry_in	network/orion_old/power_arbiter.h	/^	double e_chg_carry_in;$/;"	m	struct:__anon58
e_chg_ctr	network/orion/SIM_crossbar.h	/^	double e_chg_ctr;$/;"	m	struct:__anon32
e_chg_ctr	network/orion/SIM_permu.h	/^	double e_chg_ctr;$/;"	m	struct:__anon40
e_chg_ctr	network/orion_old/power_crossbar.h	/^	double e_chg_ctr;$/;"	m	struct:__anon87
e_chg_data	network/orion/SIM_array_internal.h	/^	double e_chg_data;$/;"	m	struct:__anon21
e_chg_data	network/orion_old/power_array.h	/^	double e_chg_data;$/;"	m	struct:__anon75
e_chg_grant	network/orion/SIM_arbiter.h	/^	double e_chg_grant;$/;"	m	struct:__anon7
e_chg_grant	network/orion_old/power_arbiter.h	/^	double e_chg_grant;$/;"	m	struct:__anon58
e_chg_in	network/orion/SIM_crossbar.h	/^	double e_chg_in;$/;"	m	struct:__anon32
e_chg_in	network/orion/SIM_permu.h	/^	double e_chg_in;$/;"	m	struct:__anon40
e_chg_in	network/orion/SIM_permu.h	/^	double e_chg_in;$/;"	m	struct:__anon41
e_chg_in	network/orion_old/power_crossbar.h	/^	double e_chg_in;$/;"	m	struct:__anon87
e_chg_int	network/orion/SIM_crossbar.h	/^	double e_chg_int;$/;"	m	struct:__anon32
e_chg_int	network/orion/SIM_permu.h	/^	double e_chg_int;$/;"	m	struct:__anon40
e_chg_int	network/orion_old/power_crossbar.h	/^	double e_chg_int;$/;"	m	struct:__anon87
e_chg_l1	network/orion/SIM_array_internal.h	/^	double e_chg_l1;$/;"	m	struct:__anon14
e_chg_l1	network/orion_old/power_array.h	/^	double e_chg_l1;$/;"	m	struct:__anon68
e_chg_lin	network/orion/SIM_permu.h	/^	double e_chg_lin[6];$/;"	m	struct:__anon41
e_chg_mint	network/orion/SIM_arbiter.h	/^	double e_chg_mint;$/;"	m	struct:__anon7
e_chg_mint	network/orion_old/power_arbiter.h	/^	double e_chg_mint;$/;"	m	struct:__anon58
e_chg_oin	network/orion/SIM_permu.h	/^	double e_chg_oin;$/;"	m	struct:__anon41
e_chg_out	network/orion/SIM_crossbar.h	/^	double e_chg_out;$/;"	m	struct:__anon32
e_chg_out	network/orion/SIM_permu.h	/^	double e_chg_out;$/;"	m	struct:__anon40
e_chg_out	network/orion/SIM_permu.h	/^	double e_chg_out;$/;"	m	struct:__anon41
e_chg_out	network/orion_old/power_crossbar.h	/^	double e_chg_out;$/;"	m	struct:__anon87
e_chg_output	network/orion/SIM_array_internal.h	/^	double e_chg_output;$/;"	m	struct:__anon14
e_chg_output	network/orion_old/power_array.h	/^	double e_chg_output;$/;"	m	struct:__anon68
e_chg_pass	network/orion/SIM_permu.h	/^	double e_chg_pass;$/;"	m	struct:__anon40
e_chg_req	network/orion/SIM_arbiter.h	/^	double e_chg_req;$/;"	m	struct:__anon7
e_chg_req	network/orion_old/power_arbiter.h	/^	double e_chg_req;$/;"	m	struct:__anon58
e_chg_rin	network/orion/SIM_permu.h	/^	double e_chg_rin[6];$/;"	m	struct:__anon41
e_chg_stg	network/orion/SIM_permu.h	/^	double e_chg_stg;$/;"	m	struct:__anon40
e_chg_zin	network/orion/SIM_permu.h	/^	double e_chg_zin[6];$/;"	m	struct:__anon41
e_chgreq	network/orion/SIM_misc.h	/^	double e_chgreq;$/;"	m	struct:__anon34
e_clock	network/orion/SIM_misc.h	/^	double e_clock;$/;"	m	struct:__anon35
e_clock	network/orion_old/power_arbiter.h	/^	double e_clock;$/;"	m	struct:__anon57
e_col_read	network/orion/SIM_array_internal.h	/^	double e_col_read;$/;"	m	struct:__anon16
e_col_read	network/orion_old/power_array.h	/^	double e_col_read;$/;"	m	struct:__anon70
e_col_sel	network/orion/SIM_array_internal.h	/^	double e_col_sel;$/;"	m	struct:__anon16
e_col_sel	network/orion_old/power_array.h	/^	double e_col_sel;$/;"	m	struct:__anon70
e_col_write	network/orion/SIM_array_internal.h	/^	double e_col_write;$/;"	m	struct:__anon16
e_col_write	network/orion_old/power_array.h	/^	double e_col_write;$/;"	m	struct:__anon70
e_enc	network/orion/SIM_misc.h	/^	double e_enc[MAX_SEL_LEVEL];$/;"	m	struct:__anon34
e_grant	network/orion/SIM_misc.h	/^	double e_grant;$/;"	m	struct:__anon34
e_in_buf_r	network/orion/NetworkPowerArea.h	/^	double e_in_buf_r;$/;"	m	struct:__anon2
e_in_buf_w	network/orion/NetworkPowerArea.h	/^	double e_in_buf_w;$/;"	m	struct:__anon2
e_keep_0	network/orion/SIM_misc.h	/^	double e_keep_0;$/;"	m	struct:__anon35
e_keep_0	network/orion_old/power_arbiter.h	/^	double e_keep_0;$/;"	m	struct:__anon57
e_keep_1	network/orion/SIM_misc.h	/^	double e_keep_1;$/;"	m	struct:__anon35
e_keep_1	network/orion_old/power_arbiter.h	/^	double e_keep_1;$/;"	m	struct:__anon57
e_match	network/orion/SIM_array_internal.h	/^	double e_match;$/;"	m	struct:__anon18
e_match	network/orion_old/power_array.h	/^	double e_match;$/;"	m	struct:__anon72
e_mismatch	network/orion/SIM_array_internal.h	/^	double e_mismatch;$/;"	m	struct:__anon18
e_mismatch	network/orion/SIM_array_internal.h	/^	double e_mismatch;$/;"	m	struct:__anon20
e_mismatch	network/orion_old/power_array.h	/^	double e_mismatch;$/;"	m	struct:__anon72
e_mismatch	network/orion_old/power_array.h	/^	double e_mismatch;$/;"	m	struct:__anon74
e_miss	network/orion/SIM_array_internal.h	/^	double e_miss;$/;"	m	struct:__anon18
e_miss	network/orion_old/power_array.h	/^	double e_miss;$/;"	m	struct:__anon72
e_out_0	network/orion/SIM_array_internal.h	/^	double e_out_0;$/;"	m	struct:__anon21
e_out_0	network/orion_old/power_array.h	/^	double e_out_0;$/;"	m	struct:__anon75
e_out_1	network/orion/SIM_array_internal.h	/^	double e_out_1;$/;"	m	struct:__anon21
e_out_1	network/orion_old/power_array.h	/^	double e_out_1;$/;"	m	struct:__anon75
e_ownerIsRequestor	generated/MI_example/Directory_Controller.C	/^void Directory_Controller::e_ownerIsRequestor(const Address& addr)$/;"	f	class:Directory_Controller
e_read	network/orion/SIM_array_internal.h	/^	double e_read;$/;"	m	struct:__anon15
e_read	network/orion_old/power_array.h	/^	double e_read;$/;"	m	struct:__anon69
e_select	network/orion/SIM_array_internal.h	/^	double e_select;$/;"	m	struct:__anon21
e_select	network/orion_old/power_array.h	/^	double e_select;$/;"	m	struct:__anon75
e_sendData	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::e_sendData(const Address& addr)$/;"	f	class:L1Cache_Controller
e_sw_global_arb	network/orion/NetworkPowerArea.h	/^	double e_sw_global_arb;$/;"	m	struct:__anon2
e_sw_local_arb	network/orion/NetworkPowerArea.h	/^	double e_sw_local_arb;$/;"	m	struct:__anon2
e_switch	network/orion/SIM_array_internal.h	/^	double e_switch;$/;"	m	struct:__anon19
e_switch	network/orion/SIM_misc.h	/^	double e_switch;$/;"	m	struct:__anon33
e_switch	network/orion/SIM_misc.h	/^	double e_switch;$/;"	m	struct:__anon35
e_switch	network/orion_old/power_arbiter.h	/^	double e_switch;$/;"	m	struct:__anon57
e_switch	network/orion_old/power_array.h	/^	double e_switch;$/;"	m	struct:__anon73
e_switch	network/orion_old/power_bus.h	/^	double e_switch;$/;"	m	struct:__anon83
e_vc_global_arb	network/orion/NetworkPowerArea.h	/^	double e_vc_global_arb;$/;"	m	struct:__anon2
e_vc_local_arb	network/orion/NetworkPowerArea.h	/^	double e_vc_local_arb;$/;"	m	struct:__anon2
e_write	network/orion/SIM_array_internal.h	/^	double e_write;$/;"	m	struct:__anon15
e_write	network/orion_old/power_array.h	/^	double e_write;$/;"	m	struct:__anon69
e_xbar	network/orion/NetworkPowerArea.h	/^	double e_xbar;$/;"	m	struct:__anon2
ee_sendDataFromTBE	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::ee_sendDataFromTBE(const Address& addr)$/;"	f	class:L1Cache_Controller
eff_data_cols	network/orion/SIM_array.h	/^	u_int eff_data_cols;	\/* # of data columns driven by one wordline *\/$/;"	m	struct:__anon9
eff_data_cols	network/orion_old/power_array.h	/^	unsigned eff_data_cols;$/;"	m	struct:__anon80
eff_tag_cols	network/orion/SIM_array.h	/^	u_int eff_tag_cols;	\/* # of tag columns driven by one wordline *\/$/;"	m	struct:__anon9
eff_tag_cols	network/orion_old/power_array.h	/^	unsigned eff_tag_cols;$/;"	m	struct:__anon80
elementAt	common/BigSet.C	/^NodeID Set::elementAt(int index) const$/;"	f	class:Set
elementAt	common/NetDest.C	/^NodeID NetDest::elementAt(MachineID index) {$/;"	f	class:NetDest
elementAt	common/OptBigSet.h	/^  inline NodeID elementAt(int index) const$/;"	f	class:Set
elementAt	common/Set.C	/^NodeID Set::elementAt(int index) {$/;"	f	class:Set
empty	system/Sequencer.C	/^bool Sequencer::empty() const {$/;"	f	class:Sequencer
encoding	network/orion/SIM_misc.h	/^	int encoding;$/;"	m	struct:__anon33
encoding	network/orion_old/power_bus.h	/^	int encoding;$/;"	m	struct:__anon83
end	network/orion/SIM_array_internal.h	/^	u_int end;$/;"	m	struct:__anon16
end	network/orion/SIM_array_internal.h	/^	u_int end;$/;"	m	struct:__anon19
end	network/orion_old/power_array.h	/^	unsigned end;$/;"	m	struct:__anon70
end	network/orion_old/power_array.h	/^	unsigned end;$/;"	m	struct:__anon73
endLifetime	profiler/LifetimeTrace.C	/^void LifetimeTrace::endLifetime(Time current_time, physical_address_t address, int core_id, LifetimeEndReason_t reason) {$/;"	f	class:LifetimeTrace
endLifetime	system/TCpredictor.C	/^void TCpredictorPCSampler::endLifetime(Time end_time, int address) {$/;"	f	class:TCpredictorPCSampler
endTransaction	profiler/Profiler.C	/^void Profiler::endTransaction(int cpu)$/;"	f	class:Profiler
enqueue	buffers/MessageBuffer.C	/^void MessageBuffer::enqueue(const MsgPtr& message, Time delta)$/;"	f	class:MessageBuffer
enqueue	buffers/MessageBuffer.h	/^  void enqueue(const MsgPtr& message) { enqueue(message, 1); }$/;"	f	class:MessageBuffer
enqueue	system/GpusimDramInterface.C	/^void GpusimDramInterface::enqueue (const MsgPtr& message, int latency) {$/;"	f	class:GpusimDramInterface
enqueue	system/MemoryControl.C	/^void MemoryControl::enqueue (const MsgPtr& message, int latency) {$/;"	f	class:MemoryControl
enqueue	system/StoreBuffer.C	/^void StoreBuffer::enqueue(const StoreBufferEntry& entry)$/;"	f	class:StoreBuffer
enqueueMemRef	system/MemoryControl.C	/^void MemoryControl::enqueueMemRef (MemoryNode& memRef) {$/;"	f	class:MemoryControl
enqueueToDirectory	system/MemoryControl.C	/^void MemoryControl::enqueueToDirectory (MemoryNode req, int latency) {$/;"	f	class:MemoryControl
entry	network/orion/SIM_array.h	/^	void *entry;$/;"	m	struct:__anon11
entry	network/orion_old/power_array.h	/^	void *entry;$/;"	m	struct:__anon78
entry_set	network/orion/SIM_array.h	/^	void *entry_set;$/;"	m	struct:__anon11
entry_set	network/orion_old/power_array.h	/^	void *entry_set;$/;"	m	struct:__anon78
equal	common/DataBlock.C	/^bool DataBlock::equal(const DataBlock& obj) const$/;"	f	class:DataBlock
equal_to	common/Address.h	/^  template <> struct equal_to<Address>$/;"	s	namespace:std
event_handler_t	simics/simics_api_dummy.c	/^typedef int event_handler_t;$/;"	t	file:
exceptionCallback	simics/depreceated/SimicsDriver.C	/^void SimicsDriver::exceptionCallback(conf_object_t *cpuPtr, integer_t exc) {$/;"	f	class:SimicsDriver
exceptionCallback	simics/depreceated/SimicsProcessor.C	/^void SimicsProcessor::exceptionCallback(integer_t exc) {$/;"	f	class:SimicsProcessor
exchange	tester/getopt.C	/^exchange ($/;"	f	file:
execute	tester/depreceated/XactAbortRequestGenerator.C	/^void XactAbortRequestGenerator::execute(){$/;"	f	class:XactAbortRequestGenerator
execute	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::execute(){$/;"	f	class:XactRequestGenerator
executeCycle	system/MemoryControl.C	/^void MemoryControl::executeCycle () {$/;"	f	class:MemoryControl
existSummarySignatureConflict	simics/depreceated/SimicsHypervisor.C	/^unsigned int SimicsHypervisor::existSummarySignatureConflict(Address addr, bool isRead, TransactionInterfaceManager *xact_mgr){$/;"	f	class:SimicsHypervisor
exp_in_seg	network/orion/SIM_router.h	/^	u_int exp_in_seg;	\/* only used by segmented crossbar *\/$/;"	m	struct:__anon48
exp_out_seg	network/orion/SIM_router.h	/^	u_int exp_out_seg;	\/* only used by segmented crossbar *\/$/;"	m	struct:__anon48
exp_xb	network/orion/SIM_router.h	/^	SIM_crossbar_t exp_xb;$/;"	m	struct:__anon47
exp_xb_model	network/orion/SIM_router.h	/^	int exp_xb_model;$/;"	m	struct:__anon48
expiredLoadHit	system/TCpredictor.C	/^void TCpredictorPCSampler::expiredLoadHit(Time access_time, int address, int pc) {$/;"	f	class:TCpredictorPCSampler
expiredhit	system/TCpredictor.C	/^void TCpredictorPCAdaptive::expiredhit(IntPairSet pcsharers, IntPair reader) {$/;"	f	class:TCpredictorPCAdaptive
extend_shortest_path	network/simple/Topology.C	/^static void extend_shortest_path(Matrix& current_dist, Matrix& latencies, Matrix& inter_switches)$/;"	f	file:
f_forwardRequest	generated/MI_example/Directory_Controller.C	/^void Directory_Controller::f_forwardRequest(const Address& addr)$/;"	f	class:Directory_Controller
ff	network/orion/SIM_array.h	/^	SIM_ff_t ff;$/;"	m	struct:__anon8
findSmallest	system/NodePersistentTable.C	/^NodeID NodePersistentTable::findSmallest(const Address& address) const$/;"	f	class:NodePersistentTable
findSmallest	system/PersistentTable.C	/^MachineID PersistentTable::findSmallest(const Address& address) const$/;"	f	class:PersistentTable
findTagInSet	system/CacheMemory.h	/^int CacheMemory<ENTRY>::findTagInSet(Index cacheSet, const Address& tag) const$/;"	f	class:CacheMemory
findTagInSetIgnorePermissions	system/CacheMemory.h	/^int CacheMemory<ENTRY>::findTagInSetIgnorePermissions(Index cacheSet, const Address& tag) const$/;"	f	class:CacheMemory
fini_local	depreceated/module/ruby.c	/^void fini_local() {$/;"	f
first_nonopt	tester/getopt.C	/^static int first_nonopt;$/;"	v	file:
flag	tester/getopt.h	/^  int *flag;$/;"	m	struct:option
flex_int16_t	generated/MI_example/attrlex.c	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	generated/MI_example/attrlex.c	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	generated/MI_example/attrlex.c	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	generated/MI_example/attrlex.c	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	generated/MI_example/attrlex.c	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	generated/MI_example/attrlex.c	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	generated/MI_example/attrlex.c	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	generated/MI_example/attrlex.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	generated/MI_example/attrlex.c	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	generated/MI_example/attrlex.c	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint8_t	generated/MI_example/attrlex.c	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	generated/MI_example/attrlex.c	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
flit	network/garnet-flexible-pipeline/flit.C	/^flit::flit(int id, int  vc, int vnet, int size, MsgPtr msg_ptr)$/;"	f	class:flit
flit	network/garnet-flexible-pipeline/flit.h	/^class flit {$/;"	c
flitBuffer	network/garnet-flexible-pipeline/flitBuffer.C	/^flitBuffer::flitBuffer()$/;"	f	class:flitBuffer
flitBuffer	network/garnet-flexible-pipeline/flitBuffer.C	/^flitBuffer::flitBuffer(int maximum_size)$/;"	f	class:flitBuffer
flitBuffer	network/garnet-flexible-pipeline/flitBuffer.h	/^class flitBuffer {$/;"	c
flitBuffer_d	network/garnet-fixed-pipeline/flitBuffer_d.C	/^flitBuffer_d::flitBuffer_d()$/;"	f	class:flitBuffer_d
flitBuffer_d	network/garnet-fixed-pipeline/flitBuffer_d.C	/^flitBuffer_d::flitBuffer_d(int maximum_size)$/;"	f	class:flitBuffer_d
flitBuffer_d	network/garnet-fixed-pipeline/flitBuffer_d.h	/^class flitBuffer_d {$/;"	c
flit_d	network/garnet-fixed-pipeline/flit_d.C	/^flit_d::flit_d(int id, int  vc, int vnet, int size, MsgPtr msg_ptr)$/;"	f	class:flit_d
flit_d	network/garnet-fixed-pipeline/flit_d.C	/^flit_d::flit_d(int vc, bool is_free_signal)$/;"	f	class:flit_d
flit_d	network/garnet-fixed-pipeline/flit_d.h	/^class flit_d {$/;"	c
flit_stage	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum flit_stage {I_, VA_, SA_, ST_, LT_, NUM_FLIT_STAGE_};$/;"	g
flit_type	network/garnet-fixed-pipeline/NetworkHeader.h	/^enum flit_type {HEAD_, BODY_, TAIL_, HEAD_TAIL_, NUM_FLIT_TYPE_};$/;"	g
flit_width	network/orion/SIM_router.h	/^	u_int flit_width;$/;"	m	struct:__anon48
flit_width	network/orion_old/power_router_init.h	/^	unsigned flit_width;$/;"	m	struct:__anon90
flitisizeMessage	network/garnet-fixed-pipeline/NetworkInterface_d.C	/^bool NetworkInterface_d::flitisizeMessage(MsgPtr msg_ptr, int vnet)$/;"	f	class:NetworkInterface_d
flitisizeMessage	network/garnet-flexible-pipeline/NetworkInterface.C	/^bool NetworkInterface::flitisizeMessage(MsgPtr msg_ptr, int vnet)$/;"	f	class:NetworkInterface
flushAllL1DCaches	generated/MI_example/Chip.C	/^void Chip::flushAllL1DCaches(ostream& out)$/;"	f	class:Chip
flushAllL1DCaches	gpusim_ruby/gpusim_ruby.C	/^void gpusim_ruby::flushAllL1DCaches() {$/;"	f	class:gpusim_ruby
flushAllL1DCaches	interfaces/GpusimInterface.C	/^void GpusimInterface::flushAllL1DCaches(ostream& out) {$/;"	f	class:GpusimInterface
flushCache	system/CacheMemory.h	/^void CacheMemory<ENTRY>::flushCache(ostream& out)$/;"	f	class:CacheMemory
fpfp_clock_cap	network/orion/SIM_clock.c	/^double fpfp_clock_cap() $/;"	f
fpfp_clock_cap	network/orion/SIM_clock.c	/^double fpfp_clock_cap()$/;"	f
fwrite	generated/MI_example/attrlex.c	591;"	d	file:
g_attr_map	generated/MI_example/attrparse.c	/^attr_value_t    g_attr_map;$/;"	v
g_debug_ptr	common/Global.C	/^Debug* g_debug_ptr = NULL;$/;"	v
g_eventQueue_ptr	common/Global.C	/^EventQueue* g_eventQueue_ptr = NULL;$/;"	v
g_p_ca_translator	simics/depreceated/interface.C	/^ContiguousAddressTranslator * g_p_ca_translator = NULL;$/;"	v
g_relative_include_path	generated/MI_example/attrlex.c	/^static char             g_relative_include_path[256];$/;"	v	file:
g_system_ptr	common/Global.C	/^System* g_system_ptr = NULL;$/;"	v
garnet_router_init	network/orion/NetworkPowerArea.C	/^void garnet_router_init(SIM_router_info_t *info, SIM_router_power_t *router_power, SIM_router_area_t *router_area, const int n_in, const int n_out, const int flit_width, const int n_v_channel, const int n_v_class, const int in_buf_set)$/;"	f
garnet_router_stat_energy	network/orion/NetworkPowerArea.C	/^double garnet_router_stat_energy(SIM_router_info_t *info, SIM_router_power_t *router, RouterPerformance_d *perf, RouterPowerArea_d *power, const double freq)$/;"	f
generic_transaction	simics/simics_api_dummy.c	/^typedef int generic_transaction;$/;"	t	file:
generic_transaction_t	simics/simics_api_dummy.c	/^typedef int generic_transaction_t;$/;"	t	file:
get	system/GlobalWriteVector.C	/^Time GlobalWriteVector::get(int threadId) {$/;"	f	class:GlobalWriteVector
getAbortDelay	simics/depreceated/SimicsProcessor.C	/^int SimicsProcessor::getAbortDelay(){$/;"	f	class:SimicsProcessor
getAccessMask	generated/MI_example/CacheMsg.h	/^  const ruby_mem_access_byte_mask_t& getAccessMask() const { return m_AccessMask; }$/;"	f	class:CacheMsg
getAccessMask	generated/MI_example/CacheMsg.h	/^  ruby_mem_access_byte_mask_t& getAccessMask() { return m_AccessMask; }$/;"	f	class:CacheMsg
getAccessMode	generated/MI_example/CacheMsg.h	/^  AccessModeType& getAccessMode() { return m_AccessMode; }$/;"	f	class:CacheMsg
getAccessMode	generated/MI_example/CacheMsg.h	/^  const AccessModeType& getAccessMode() const { return m_AccessMode; }$/;"	f	class:CacheMsg
getAcks	generated/MI_example/MemoryMsg.h	/^  const int& getAcks() const { return m_Acks; }$/;"	f	class:MemoryMsg
getAcks	generated/MI_example/MemoryMsg.h	/^  int& getAcks() { return m_Acks; }$/;"	f	class:MemoryMsg
getAcks	generated/MI_example/RequestMsg.h	/^  const int& getAcks() const { return m_Acks; }$/;"	f	class:RequestMsg
getAcks	generated/MI_example/RequestMsg.h	/^  int& getAcks() { return m_Acks; }$/;"	f	class:RequestMsg
getAcks	generated/MI_example/ResponseMsg.h	/^  const int& getAcks() const { return m_Acks; }$/;"	f	class:ResponseMsg
getAcks	generated/MI_example/ResponseMsg.h	/^  int& getAcks() { return m_Acks; }$/;"	f	class:ResponseMsg
getActiveLocalId	system/PersistentArbiter.C	/^NodeID PersistentArbiter::getActiveLocalId() {$/;"	f	class:PersistentArbiter
getActiveLockAddress	system/PersistentArbiter.C	/^Address PersistentArbiter::getActiveLockAddress() {$/;"	f	class:PersistentArbiter
getAddThenMod	slicc_interface/RubySlicc_Util.h	/^extern inline int getAddThenMod(int addend1, int addend2, int modulus)$/;"	f
getAddress	common/Address.h	/^  physical_address_t getAddress() const {return m_address;}$/;"	f	class:Address
getAddress	common/SubBlock.h	/^  const Address& getAddress() const { return m_address; }$/;"	f	class:SubBlock
getAddress	generated/MI_example/CacheMsg.h	/^  Address& getAddress() { return m_Address; }$/;"	f	class:CacheMsg
getAddress	generated/MI_example/CacheMsg.h	/^  const Address& getAddress() const { return m_Address; }$/;"	f	class:CacheMsg
getAddress	generated/MI_example/MemoryMsg.h	/^  Address& getAddress() { return m_Address; }$/;"	f	class:MemoryMsg
getAddress	generated/MI_example/MemoryMsg.h	/^  const Address& getAddress() const { return m_Address; }$/;"	f	class:MemoryMsg
getAddress	generated/MI_example/RequestMsg.h	/^  Address& getAddress() { return m_Address; }$/;"	f	class:RequestMsg
getAddress	generated/MI_example/RequestMsg.h	/^  const Address& getAddress() const { return m_Address; }$/;"	f	class:RequestMsg
getAddress	generated/MI_example/ResponseMsg.h	/^  Address& getAddress() { return m_Address; }$/;"	f	class:ResponseMsg
getAddress	generated/MI_example/ResponseMsg.h	/^  const Address& getAddress() const { return m_Address; }$/;"	f	class:ResponseMsg
getAddress	generated/MI_example/TriggerMsg.h	/^  Address& getAddress() { return m_Address; }$/;"	f	class:TriggerMsg
getAddress	generated/MI_example/TriggerMsg.h	/^  const Address& getAddress() const { return m_Address; }$/;"	f	class:TriggerMsg
getAddress	profiler/AccessTraceForAddress.h	/^  const Address& getAddress() const { return m_addr; }$/;"	f	class:AccessTraceForAddress
getAddress	tester/Check.h	/^  const Address& getAddress() { return m_address; }$/;"	f	class:Check
getAddress	tester/Instruction.C	/^Address Instruction::getAddress(){$/;"	f	class:Instruction
getAddressProfiler	profiler/Profiler.h	/^  AddressProfiler* getAddressProfiler() { return m_address_profiler_ptr; }$/;"	f	class:Profiler
getAllDest	common/NetDest.C	/^Vector<NodeID> NetDest::getAllDest() {$/;"	f	class:NetDest
getAllPertinentL2Banks	slicc_interface/RubySlicc_ComponentMapping.h	/^NetDest getAllPertinentL2Banks(const Address& addr)  \/\/ set of L2RubyNodes$/;"	f
getArbiterId	system/PersistentArbiter.C	/^NodeID PersistentArbiter::getArbiterId() {$/;"	f	class:PersistentArbiter
getBank	system/MemoryControl.C	/^int MemoryControl::getBank (physical_address_t addr) {$/;"	f	class:MemoryControl
getBinSize	common/Histogram.h	/^  int getBinSize() const { return m_binsize; }$/;"	f	class:Histogram
getBins	common/Histogram.h	/^  int getBins() const { return m_bins; }$/;"	f	class:Histogram
getBufferSize	network/garnet-flexible-pipeline/NetworkConfig.h	/^		static int getBufferSize() {return g_BUFFER_SIZE; }$/;"	f	class:NetworkConfig
getByte	common/DataBlock.C	/^uint8 DataBlock::getByte(int whichByte) const$/;"	f	class:DataBlock
getByte	common/SubBlock.h	/^  uint8 getByte(int offset) const { return m_data[offset]; }$/;"	f	class:SubBlock
getCacheState	generated/MI_example/L1Cache_Entry.h	/^  L1Cache_State& getCacheState() { return m_CacheState; }$/;"	f	class:L1Cache_Entry
getCacheState	generated/MI_example/L1Cache_Entry.h	/^  const L1Cache_State& getCacheState() const { return m_CacheState; }$/;"	f	class:L1Cache_Entry
getCheck	tester/CheckTable.C	/^Check* CheckTable::getCheck(const Address& address)$/;"	f	class:CheckTable
getChip	system/System.h	/^  AbstractChip* getChip(int chipNumber) const { assert(m_chip_vector[chipNumber] != NULL); return m_chip_vector[chipNumber];}$/;"	f	class:System
getChipID	slicc_interface/RubySlicc_ComponentMapping.h	/^extern inline NodeID getChipID(MachineID L2machID) $/;"	f
getCollectorDest	slicc_interface/RubySlicc_ComponentMapping.h	/^extern inline MachineID getCollectorDest(MachineID L1MachID)$/;"	f
getCollectorL1Cache	slicc_interface/RubySlicc_ComponentMapping.h	/^extern inline MachineID getCollectorL1Cache(MachineID colID)$/;"	f
getConsumer	buffers/MessageBuffer.h	/^  Consumer* getConsumer() { return m_consumer_ptr; }$/;"	f	class:MessageBuffer
getConsumer	system/GpusimDramInterface.h	/^   Consumer* getConsumer () { return m_consumer_ptr; };$/;"	f	class:GpusimDramInterface
getConsumer	system/MemoryControl.h	/^  Consumer* getConsumer () { return m_consumer_ptr; };$/;"	f	class:MemoryControl
getCount	system/BlockBloomFilter.C	/^int BlockBloomFilter::getCount(const Address& addr)$/;"	f	class:BlockBloomFilter
getCount	system/BulkBloomFilter.C	/^int BulkBloomFilter::getCount(const Address& addr)$/;"	f	class:BulkBloomFilter
getCount	system/GenericBloomFilter.C	/^int GenericBloomFilter::getCount(const Address& addr)$/;"	f	class:GenericBloomFilter
getCount	system/H3BloomFilter.C	/^int H3BloomFilter::getCount(const Address& addr)$/;"	f	class:H3BloomFilter
getCount	system/LSB_CountingBloomFilter.C	/^int LSB_CountingBloomFilter::getCount(const Address& addr)$/;"	f	class:LSB_CountingBloomFilter
getCount	system/MultiBitSelBloomFilter.C	/^int MultiBitSelBloomFilter::getCount(const Address& addr)$/;"	f	class:MultiBitSelBloomFilter
getCount	system/MultiGrainBloomFilter.C	/^int MultiGrainBloomFilter::getCount(const Address& addr)$/;"	f	class:MultiGrainBloomFilter
getCount	system/NonCountingBloomFilter.C	/^int NonCountingBloomFilter::getCount(const Address& addr)$/;"	f	class:NonCountingBloomFilter
getCounters	network/simple/Throttle.h	/^  const Vector<Vector<int> >& getCounters() const { return m_message_counters; }$/;"	f	class:Throttle
getCreditQueue	network/garnet-fixed-pipeline/InputUnit_d.h	/^	flitBuffer_d* getCreditQueue() { return creditQueue; }$/;"	f	class:InputUnit_d
getCycleCount	common/Driver.h	/^  virtual integer_t getCycleCount(int procID) const { return 1; }$/;"	f	class:Driver
getCycleCount	simics/depreceated/SimicsDriver.C	/^integer_t SimicsDriver::getCycleCount(int proc) const {$/;"	f	class:SimicsDriver
getCycleCount	simics/depreceated/SimicsProcessor.C	/^integer_t SimicsProcessor::getCycleCount() const {$/;"	f	class:SimicsProcessor
getData	common/Histogram.h	/^  int64 getData(int index) const { return m_data[index]; }$/;"	f	class:Histogram
getDataBlk	generated/MI_example/Directory_Entry.h	/^  DataBlock& getDataBlk() { return m_DataBlk; }$/;"	f	class:Directory_Entry
getDataBlk	generated/MI_example/Directory_Entry.h	/^  const DataBlock& getDataBlk() const { return m_DataBlk; }$/;"	f	class:Directory_Entry
getDataBlk	generated/MI_example/L1Cache_Entry.h	/^  DataBlock& getDataBlk() { return m_DataBlk; }$/;"	f	class:L1Cache_Entry
getDataBlk	generated/MI_example/L1Cache_Entry.h	/^  const DataBlock& getDataBlk() const { return m_DataBlk; }$/;"	f	class:L1Cache_Entry
getDataBlk	generated/MI_example/L1Cache_TBE.h	/^  DataBlock& getDataBlk() { return m_DataBlk; }$/;"	f	class:L1Cache_TBE
getDataBlk	generated/MI_example/L1Cache_TBE.h	/^  const DataBlock& getDataBlk() const { return m_DataBlk; }$/;"	f	class:L1Cache_TBE
getDataBlk	generated/MI_example/MemoryMsg.h	/^  DataBlock& getDataBlk() { return m_DataBlk; }$/;"	f	class:MemoryMsg
getDataBlk	generated/MI_example/MemoryMsg.h	/^  const DataBlock& getDataBlk() const { return m_DataBlk; }$/;"	f	class:MemoryMsg
getDataBlk	generated/MI_example/RequestMsg.h	/^  DataBlock& getDataBlk() { return m_DataBlk; }$/;"	f	class:RequestMsg
getDataBlk	generated/MI_example/RequestMsg.h	/^  const DataBlock& getDataBlk() const { return m_DataBlk; }$/;"	f	class:RequestMsg
getDataBlk	generated/MI_example/ResponseMsg.h	/^  DataBlock& getDataBlk() { return m_DataBlk; }$/;"	f	class:ResponseMsg
getDataBlk	generated/MI_example/ResponseMsg.h	/^  const DataBlock& getDataBlk() const { return m_DataBlk; }$/;"	f	class:ResponseMsg
getDebugTime	common/Debug.h	/^  Time getDebugTime() const { return m_starting_cycle; }$/;"	f	class:Debug
getDelayedCycles	slicc_interface/Message.h	/^  const int& getDelayedCycles() const {return m_DelayedCycles;}$/;"	f	class:Message
getDelayedCycles	slicc_interface/Message.h	/^  int& getDelayedCycles() {return m_DelayedCycles;}$/;"	f	class:Message
getDescription	buffers/MessageBuffer.h	/^  string getDescription() { return m_name;}$/;"	f	class:MessageBuffer
getDescription	system/GpusimDramInterface.h	/^   string getDescription () { return m_name; };$/;"	f	class:GpusimDramInterface
getDescription	system/MemoryControl.h	/^  string getDescription () { return m_name; };$/;"	f	class:MemoryControl
getDestination	generated/MI_example/RequestMsg.h	/^  NetDest& getDestination() { return m_Destination; }$/;"	f	class:RequestMsg
getDestination	generated/MI_example/RequestMsg.h	/^  const NetDest& getDestination() const { return m_Destination; }$/;"	f	class:RequestMsg
getDestination	generated/MI_example/ResponseMsg.h	/^  NetDest& getDestination() { return m_Destination; }$/;"	f	class:ResponseMsg
getDestination	generated/MI_example/ResponseMsg.h	/^  const NetDest& getDestination() const { return m_Destination; }$/;"	f	class:ResponseMsg
getDirectoryState	generated/MI_example/Directory_Entry.h	/^  Directory_State& getDirectoryState() { return m_DirectoryState; }$/;"	f	class:Directory_Entry
getDirectoryState	generated/MI_example/Directory_Entry.h	/^  const Directory_State& getDirectoryState() const { return m_DirectoryState; }$/;"	f	class:Directory_Entry
getDirty	generated/MI_example/L1Cache_Entry.h	/^  bool& getDirty() { return m_Dirty; }$/;"	f	class:L1Cache_Entry
getDirty	generated/MI_example/L1Cache_Entry.h	/^  const bool& getDirty() const { return m_Dirty; }$/;"	f	class:L1Cache_Entry
getDirty	generated/MI_example/ResponseMsg.h	/^  bool& getDirty() { return m_Dirty; }$/;"	f	class:ResponseMsg
getDirty	generated/MI_example/ResponseMsg.h	/^  const bool& getDirty() const { return m_Dirty; }$/;"	f	class:ResponseMsg
getDramInterface	slicc_interface/AbstractChip.h	/^  GpusimDramInterface* getDramInterface(int index) {$/;"	f	class:AbstractChip
getDriver	system/System.h	/^  Driver* getDriver() { assert(m_driver_ptr != NULL); return m_driver_ptr; }$/;"	f	class:System
getDynamicTimeoutEnabled	slicc_interface/RubySlicc_Util.h	/^extern inline bool getDynamicTimeoutEnabled()$/;"	f
getEntry	system/StoreBuffer.C	/^StoreBufferEntry& StoreBuffer::getEntry(int index)$/;"	f	class:StoreBuffer
getExposedAction	generated/MI_example/CacheMsg.h	/^  bool& getExposedAction() { return m_ExposedAction; }$/;"	f	class:CacheMsg
getExposedAction	generated/MI_example/CacheMsg.h	/^  const bool& getExposedAction() const { return m_ExposedAction; }$/;"	f	class:CacheMsg
getExternalL1IDs	slicc_interface/RubySlicc_ComponentMapping.h	/^NetDest getExternalL1IDs(MachineID L1) $/;"	f
getFilter	system/GenericBloomFilter.h	/^  AbstractBloomFilter * getFilter(){$/;"	f	class:GenericBloomFilter
getFilteringEnabled	slicc_interface/RubySlicc_Util.h	/^extern inline bool getFilteringEnabled()$/;"	f
getFixedTimeoutLatency	slicc_interface/RubySlicc_Util.h	/^extern inline int getFixedTimeoutLatency()$/;"	f
getFlitDestinationStats	network/garnet-fixed-pipeline/NetworkInterface_d.C	/^Vector<long long> NetworkInterface_d::getFlitDestinationStats() {$/;"	f	class:NetworkInterface_d
getFlitSize	network/garnet-flexible-pipeline/NetworkConfig.h	/^		static int getFlitSize() {return g_FLIT_SIZE; }$/;"	f	class:NetworkConfig
getFreeSlotInActiveRequestVector	simics/depreceated/SimicsProcessor.C	/^int SimicsProcessor::getFreeSlotInActiveRequestVector() {$/;"	f	class:SimicsProcessor
getFromNetQueue	network/garnet-fixed-pipeline/GarnetNetwork_d.C	/^MessageBuffer* GarnetNetwork_d::getFromNetQueue(NodeID id, bool ordered, int network_num)$/;"	f	class:GarnetNetwork_d
getFromNetQueue	network/garnet-flexible-pipeline/GarnetNetwork.C	/^MessageBuffer* GarnetNetwork::getFromNetQueue(NodeID id, bool ordered, int network_num)$/;"	f	class:GarnetNetwork
getFromNetQueue	network/simple/SimpleNetwork.C	/^MessageBuffer* SimpleNetwork::getFromNetQueue(NodeID id, bool ordered, int network_num)$/;"	f	class:SimpleNetwork
getHypervisor	common/Driver.h	/^  virtual SimicsHypervisor * getHypervisor() { return NULL; }$/;"	f	class:Driver
getHypervisor	simics/depreceated/SimicsDriver.C	/^SimicsDriver::getHypervisor() $/;"	f	class:SimicsDriver
getID	slicc_interface/AbstractChip.h	/^  NodeID getID() const { return m_id; };$/;"	f	class:AbstractChip
getInLinks	network/simple/PerfectSwitch.h	/^  int getInLinks() const { return m_in.size(); }$/;"	f	class:PerfectSwitch
getIndex	system/BlockBloomFilter.C	/^int BlockBloomFilter::getIndex(const Address& addr)$/;"	f	class:BlockBloomFilter
getIndex	system/BulkBloomFilter.C	/^int BulkBloomFilter::getIndex(const Address& addr)$/;"	f	class:BulkBloomFilter
getIndex	system/GenericBloomFilter.C	/^int GenericBloomFilter::getIndex(const Address& addr)$/;"	f	class:GenericBloomFilter
getIndex	system/H3BloomFilter.C	/^int H3BloomFilter::getIndex(const Address& addr)$/;"	f	class:H3BloomFilter
getIndex	system/LSB_CountingBloomFilter.C	/^int LSB_CountingBloomFilter::getIndex(const Address& addr)$/;"	f	class:LSB_CountingBloomFilter
getIndex	system/MultiBitSelBloomFilter.C	/^int MultiBitSelBloomFilter::getIndex(const Address& addr)$/;"	f	class:MultiBitSelBloomFilter
getIndex	system/MultiGrainBloomFilter.C	/^int MultiGrainBloomFilter::getIndex(const Address& addr)$/;"	f	class:MultiGrainBloomFilter
getIndex	system/NonCountingBloomFilter.C	/^int NonCountingBloomFilter::getIndex(const Address& addr) $/;"	f	class:NonCountingBloomFilter
getInstructionCount	common/Driver.h	/^  virtual integer_t getInstructionCount(int procID) const { return 1; }$/;"	f	class:Driver
getInstructionCount	interfaces/OpalInterface.C	/^integer_t OpalInterface::getInstructionCount(int procID) const {$/;"	f	class:OpalInterface
getInstructionCount	interfaces/mf_api.h	/^  integer_t (*getInstructionCount)( int cpuNumber );$/;"	m	struct:mf_opal_api
getInstructionCount	simics/depreceated/SimicsDriver.C	/^integer_t SimicsDriver::getInstructionCount(int proc) const {$/;"	f	class:SimicsDriver
getInstructionCount	simics/depreceated/SimicsProcessor.C	/^integer_t SimicsProcessor::getInstructionCount() const {$/;"	f	class:SimicsProcessor
getInstructionCount	tester/RaceyDriver.C	/^integer_t RaceyDriver::getInstructionCount(int procID) const$/;"	f	class:RaceyDriver
getInstructionProfiler	profiler/Profiler.h	/^  AddressProfiler* getInstructionProfiler() { return m_inst_profiler_ptr; }$/;"	f	class:Profiler
getIntMax	slicc_interface/RubySlicc_Util.h	/^extern inline int getIntMax(int i1, int i2)$/;"	f
getIntPair	common/IntPair.C	/^IntPair getIntPair(int T1, int T2) {$/;"	f
getInternalDestination	slicc_interface/NetworkMessage.h	/^  NetDest& getInternalDestination() {$/;"	f	class:NetworkMessage
getInternalDestination	slicc_interface/NetworkMessage.h	/^  const NetDest& getInternalDestination() const { $/;"	f	class:NetworkMessage
getIssuedAddress	system/PersistentArbiter.h	/^  Address getIssuedAddress() { return m_issued_address; }$/;"	f	class:PersistentArbiter
getL1DCache	slicc_interface/AbstractChip.h	/^  CacheMemory<L1Cache_Entry>* getL1DCache(int index) const {$/;"	f	class:AbstractChip
getL1MachineID	slicc_interface/RubySlicc_ComponentMapping.h	/^extern inline MachineID getL1MachineID(NodeID L1RubyNode)$/;"	f
getLastAccess	system/AbstractReplacementPolicy.h	/^Time AbstractReplacementPolicy::getLastAccess(Index set, Index way)$/;"	f	class:AbstractReplacementPolicy
getLastEnqueueTime	slicc_interface/Message.h	/^  Time& getLastEnqueueTime() {return m_LastEnqueueTime;}$/;"	f	class:Message
getLastEnqueueTime	slicc_interface/Message.h	/^  const Time& getLastEnqueueTime() const {return m_LastEnqueueTime;}$/;"	f	class:Message
getLastScheduledWakeup	common/Consumer.h	/^  const Time& getLastScheduledWakeup() const { return m_last_scheduled_wakeup; }$/;"	f	class:Consumer
getLatency	network/simple/Throttle.h	/^  int getLatency() const { return m_link_latency; }$/;"	f	class:Throttle
getLifetimeTrace	system/System.h	/^  LifetimeTrace* getLifetimeTrace() { return m_LifetimeTrace_ptr; }$/;"	f	class:System
getLineAddress	common/Address.h	/^  physical_address_t getLineAddress() const $/;"	f	class:Address
getLinkBandwidth	network/simple/Throttle.h	/^  int getLinkBandwidth() const { return g_endpoint_bandwidth * m_link_bandwidth_multiplier; }$/;"	f	class:Throttle
getLinkUtilization	network/garnet-fixed-pipeline/NetworkLink_d.C	/^int NetworkLink_d::getLinkUtilization()$/;"	f	class:NetworkLink_d
getLinkUtilization	network/garnet-flexible-pipeline/NetworkLink.C	/^double NetworkLink::getLinkUtilization()$/;"	f	class:NetworkLink
getLoadsCompleted	tester/DeterministicDriver.h	/^  int getLoadsCompleted() { return m_loads_completed; }$/;"	f	class:DeterministicDriver
getLocalL1IDs	slicc_interface/RubySlicc_ComponentMapping.h	/^NetDest getLocalL1IDs(MachineID mach) $/;"	f
getLogged	generated/MI_example/L1Cache_TBE.h	/^  bool& getLogged() { return m_Logged; }$/;"	f	class:L1Cache_TBE
getLogged	generated/MI_example/L1Cache_TBE.h	/^  const bool& getLogged() const { return m_Logged; }$/;"	f	class:L1Cache_TBE
getLogicalAddress	common/SubBlock.h	/^  const Address& getLogicalAddress() const { return m_logicalAddress; }$/;"	f	class:SubBlock
getLogicalAddress	generated/MI_example/CacheMsg.h	/^  Address& getLogicalAddress() { return m_LogicalAddress; }$/;"	f	class:CacheMsg
getLogicalAddress	generated/MI_example/CacheMsg.h	/^  const Address& getLogicalAddress() const { return m_LogicalAddress; }$/;"	f	class:CacheMsg
getMemoryValue	system/CacheMemory.h	/^void CacheMemory<ENTRY>::getMemoryValue(const Address& addr, char* value,$/;"	f	class:CacheMemory
getMessageSize	generated/MI_example/MemoryMsg.h	/^  MessageSizeType& getMessageSize() { return m_MessageSize; }$/;"	f	class:MemoryMsg
getMessageSize	generated/MI_example/MemoryMsg.h	/^  const MessageSizeType& getMessageSize() const { return m_MessageSize; }$/;"	f	class:MemoryMsg
getMessageSize	generated/MI_example/RequestMsg.h	/^  MessageSizeType& getMessageSize() { return m_MessageSize; }$/;"	f	class:RequestMsg
getMessageSize	generated/MI_example/RequestMsg.h	/^  const MessageSizeType& getMessageSize() const { return m_MessageSize; }$/;"	f	class:RequestMsg
getMessageSize	generated/MI_example/ResponseMsg.h	/^  MessageSizeType& getMessageSize() { return m_MessageSize; }$/;"	f	class:ResponseMsg
getMessageSize	generated/MI_example/ResponseMsg.h	/^  const MessageSizeType& getMessageSize() const { return m_MessageSize; }$/;"	f	class:ResponseMsg
getMsgPtrCopy	buffers/MessageBuffer.C	/^const MsgPtr MessageBuffer::getMsgPtrCopy() const$/;"	f	class:MessageBuffer
getMultiStaticL2BankNetDest	slicc_interface/RubySlicc_ComponentMapping.h	/^NetDest getMultiStaticL2BankNetDest(const Address& addr, const Set& sharers)  \/\/ set of L2RubyNodes$/;"	f
getNetwork	slicc_interface/AbstractChip.h	/^  Network* getNetwork() const { return m_net_ptr; };$/;"	f	class:AbstractChip
getNetwork	system/System.h	/^  Network* getNetwork() { assert(m_network_ptr != NULL); return m_network_ptr; }$/;"	f	class:System
getNextAddr	tester/DeterministicDriver.C	/^Address DeterministicDriver::getNextAddr(NodeID node, Vector<NodeID> addr_vector)$/;"	f	class:DeterministicDriver
getNextLoadAddr	tester/DeterministicDriver.C	/^Address DeterministicDriver::getNextLoadAddr(NodeID node)$/;"	f	class:DeterministicDriver
getNextStoreAddr	tester/DeterministicDriver.C	/^Address DeterministicDriver::getNextStoreAddr(NodeID node)$/;"	f	class:DeterministicDriver
getNumMemories	system/System.h	/^  int getNumMemories() { return RubyConfig::numberOfMemories(); }$/;"	f	class:System
getNumNodes	network/Network.h	/^  virtual int getNumNodes() {return 1;}$/;"	f	class:Network
getNumNodes	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	int getNumNodes(){ return m_nodes;}	$/;"	f	class:GarnetNetwork_d
getNumNodes	network/garnet-flexible-pipeline/GarnetNetwork.h	/^	int getNumNodes(){ return m_nodes; }$/;"	f	class:GarnetNetwork
getNumNodes	network/simple/SimpleNetwork.h	/^  int getNumNodes() {return m_nodes; }$/;"	f	class:SimpleNetwork
getNumPipeStages	network/garnet-flexible-pipeline/NetworkConfig.h	/^		static int getNumPipeStages() {return g_NUM_PIPE_STAGES; }$/;"	f	class:NetworkConfig
getNumProcessors	system/System.h	/^  int getNumProcessors() { return RubyConfig::numberOfProcessors(); }$/;"	f	class:System
getNumberOutstanding	interfaces/OpalInterface.C	/^int OpalInterface::getNumberOutstanding( int cpuNumber ){$/;"	f	class:OpalInterface
getNumberOutstanding	interfaces/mf_api.h	/^  int (*getNumberOutstanding)(int cpuNumber);$/;"	m	struct:mf_ruby_api
getNumberOutstanding	system/Sequencer.C	/^int Sequencer::getNumberOutstanding(){$/;"	f	class:Sequencer
getNumberOutstandingDemand	interfaces/OpalInterface.C	/^int OpalInterface::getNumberOutstandingDemand( int cpuNumber ){$/;"	f	class:OpalInterface
getNumberOutstandingDemand	interfaces/mf_api.h	/^  int (*getNumberOutstandingDemand)(int cpuNumber );$/;"	m	struct:mf_ruby_api
getNumberOutstandingDemand	system/Sequencer.C	/^int Sequencer::getNumberOutstandingDemand(){$/;"	f	class:Sequencer
getNumberOutstandingPrefetch	interfaces/OpalInterface.C	/^int OpalInterface::getNumberOutstandingPrefetch( int cpuNumber ){$/;"	f	class:OpalInterface
getNumberOutstandingPrefetch	interfaces/mf_api.h	/^  int (*getNumberOutstandingPrefetch)(int cpuNumber );$/;"	m	struct:mf_ruby_api
getNumberOutstandingPrefetch	system/Sequencer.C	/^int Sequencer::getNumberOutstandingPrefetch(){$/;"	f	class:Sequencer
getOffset	common/Address.h	/^  physical_address_t getOffset() const $/;"	f	class:Address
getOpalTime	common/Driver.h	/^  virtual uint64 getOpalTime(int procID) const{ return 0; }  \/\/called by Sequencer$/;"	f	class:Driver
getOpalTime	interfaces/OpalInterface.C	/^uint64 OpalInterface::getOpalTime(int procID) const {$/;"	f	class:OpalInterface
getOpalTime	interfaces/mf_api.h	/^  uint64 (*getOpalTime)(int cpuNumber);$/;"	m	struct:mf_opal_api
getOpalTimestamp	common/Driver.h	/^  virtual uint64 getOpalTimestamp(int procID, int thread) const{ $/;"	f	class:Driver
getOpalTransactionLevel	common/Driver.h	/^  virtual int getOpalTransactionLevel(int procID, int thread) const { $/;"	f	class:Driver
getOpcode	tester/Instruction.C	/^Opcode Instruction::getOpcode(){$/;"	f	class:Instruction
getOptBuffering	network/orion/SIM_link.c	/^void getOptBuffering(int *k , double *h , double Length) {$/;"	f
getOriginalRequestorMachId	generated/MI_example/MemoryMsg.h	/^  MachineID& getOriginalRequestorMachId() { return m_OriginalRequestorMachId; }$/;"	f	class:MemoryMsg
getOriginalRequestorMachId	generated/MI_example/MemoryMsg.h	/^  const MachineID& getOriginalRequestorMachId() const { return m_OriginalRequestorMachId; }$/;"	f	class:MemoryMsg
getOtherLocalL1IDs	slicc_interface/RubySlicc_ComponentMapping.h	/^NetDest getOtherLocalL1IDs(MachineID L1) $/;"	f
getOutBuffers	common/Consumer.h	/^  Vector< Vector<MessageBuffer*> > getOutBuffers() { return m_out_link_vec; }$/;"	f	class:Consumer
getOutLinks	network/simple/PerfectSwitch.h	/^  int getOutLinks() const { return m_out.size(); }$/;"	f	class:PerfectSwitch
getOutQueue	network/garnet-fixed-pipeline/OutputUnit_d.C	/^flitBuffer_d* OutputUnit_d::getOutQueue()$/;"	f	class:OutputUnit_d
getOwner	generated/MI_example/Directory_Entry.h	/^  NetDest& getOwner() { return m_Owner; }$/;"	f	class:Directory_Entry
getOwner	generated/MI_example/Directory_Entry.h	/^  const NetDest& getOwner() const { return m_Owner; }$/;"	f	class:Directory_Entry
getPermission	system/CacheMemory.h	/^AccessPermission CacheMemory<ENTRY>::getPermission(const Address& address) const$/;"	f	class:CacheMemory
getPermission	system/PerfectCacheMemory.h	/^AccessPermission PerfectCacheMemory<ENTRY>::getPermission(const Address& address) const$/;"	f	class:PerfectCacheMemory
getPhysicalAddress	generated/MI_example/CacheMsg.h	/^  Address& getPhysicalAddress() { return m_PhysicalAddress; }$/;"	f	class:CacheMsg
getPhysicalAddress	generated/MI_example/CacheMsg.h	/^  const Address& getPhysicalAddress() const { return m_PhysicalAddress; }$/;"	f	class:CacheMsg
getPredictor	system/TCpredictor.C	/^TCpredictorBase* TCpredictorContainer::getPredictor()$/;"	f	class:TCpredictorContainer
getPrefetch	generated/MI_example/CacheMsg.h	/^  PrefetchBit& getPrefetch() { return m_Prefetch; }$/;"	f	class:CacheMsg
getPrefetch	generated/MI_example/CacheMsg.h	/^  const PrefetchBit& getPrefetch() const { return m_Prefetch; }$/;"	f	class:CacheMsg
getPrefetch	generated/MI_example/MemoryMsg.h	/^  PrefetchBit& getPrefetch() { return m_Prefetch; }$/;"	f	class:MemoryMsg
getPrefetch	generated/MI_example/MemoryMsg.h	/^  const PrefetchBit& getPrefetch() const { return m_Prefetch; }$/;"	f	class:MemoryMsg
getPreviousDelayedCycles	slicc_interface/RubySlicc_Util.h	/^extern inline Time getPreviousDelayedCycles(Time t1, Time t2)$/;"	f
getPriority	buffers/MessageBuffer.h	/^  int getPriority() { return m_priority_rank; }$/;"	f	class:MessageBuffer
getProfiler	system/System.h	/^  Profiler* getProfiler() { return m_profiler_ptr; }$/;"	f	class:System
getProgramCounter	generated/MI_example/CacheMsg.h	/^  Address& getProgramCounter() { return m_ProgramCounter; }$/;"	f	class:CacheMsg
getProgramCounter	generated/MI_example/CacheMsg.h	/^  const Address& getProgramCounter() const { return m_ProgramCounter; }$/;"	f	class:CacheMsg
getRandomCheck	tester/CheckTable.C	/^Check* CheckTable::getRandomCheck()$/;"	f	class:CheckTable
getRank	system/MemoryControl.C	/^int MemoryControl::getRank (int bank) {$/;"	f	class:MemoryControl
getReadX	generated/MI_example/MemoryMsg.h	/^  bool& getReadX() { return m_ReadX; }$/;"	f	class:MemoryMsg
getReadX	generated/MI_example/MemoryMsg.h	/^  const bool& getReadX() const { return m_ReadX; }$/;"	f	class:MemoryMsg
getRequestType	simics/depreceated/SimicsProcessor.C	/^CacheRequestType SimicsProcessor::getRequestType(const memory_transaction_t *mem_trans) {$/;"	f	class:SimicsProcessor
getRequestor	generated/MI_example/RequestMsg.h	/^  MachineID& getRequestor() { return m_Requestor; }$/;"	f	class:RequestMsg
getRequestor	generated/MI_example/RequestMsg.h	/^  const MachineID& getRequestor() const { return m_Requestor; }$/;"	f	class:RequestMsg
getRetryThreshold	slicc_interface/RubySlicc_Util.h	/^extern inline int getRetryThreshold()$/;"	f
getRoute	network/garnet-flexible-pipeline/Router.C	/^int Router::getRoute(NetDest destination)$/;"	f	class:Router
getRubyMemSpace	gpusim_ruby/gpusim_ruby.C	/^static MemorySpaceType getRubyMemSpace(ruby_memory_space_t space) {$/;"	f	file:
getRubyMemType	gpusim_ruby/gpusim_ruby.C	/^static CacheRequestType getRubyMemType(ruby_memory_type_t type) {$/;"	f	file:
getRubyMemoryValue	system/Sequencer.C	/^bool Sequencer::getRubyMemoryValue(const Address& addr, char* value,unsigned int size_in_bytes ) {$/;"	f	class:Sequencer
getRubyStartTime	network/garnet-fixed-pipeline/GarnetNetwork_d.C	/^Time GarnetNetwork_d::getRubyStartTime()$/;"	f	class:GarnetNetwork_d
getRubyStartTime	network/garnet-flexible-pipeline/GarnetNetwork.C	/^Time GarnetNetwork::getRubyStartTime()$/;"	f	class:GarnetNetwork
getRubyStartTime	profiler/Profiler.h	/^  Time getRubyStartTime(){$/;"	f	class:Profiler
getSender	generated/MI_example/MemoryMsg.h	/^  MachineID& getSender() { return m_Sender; }$/;"	f	class:MemoryMsg
getSender	generated/MI_example/MemoryMsg.h	/^  const MachineID& getSender() const { return m_Sender; }$/;"	f	class:MemoryMsg
getSender	generated/MI_example/ResponseMsg.h	/^  MachineID& getSender() { return m_Sender; }$/;"	f	class:ResponseMsg
getSender	generated/MI_example/ResponseMsg.h	/^  const MachineID& getSender() const { return m_Sender; }$/;"	f	class:ResponseMsg
getSequencer	slicc_interface/AbstractChip.h	/^  Sequencer* getSequencer(int index) const { return m_L1Cache_sequencer_vec[index]; };$/;"	f	class:AbstractChip
getSequencer	system/System.h	/^  Sequencer* getSequencer(int procNumber) const {$/;"	f	class:System
getServingRequestSlot	simics/depreceated/SimicsProcessor.C	/^int SimicsProcessor::getServingRequestSlot() {$/;"	f	class:SimicsProcessor
getSharers	generated/MI_example/Directory_Entry.h	/^  NetDest& getSharers() { return m_Sharers; }$/;"	f	class:Directory_Entry
getSharers	generated/MI_example/Directory_Entry.h	/^  const NetDest& getSharers() const { return m_Sharers; }$/;"	f	class:Directory_Entry
getSharing	profiler/AccessTraceForAddress.h	/^  int getSharing() const { return m_sharing; } $/;"	f	class:AccessTraceForAddress
getSize	buffers/MessageBuffer.C	/^int MessageBuffer::getSize()$/;"	f	class:MessageBuffer
getSize	common/BigSet.h	/^  int getSize() const { return m_bits.size(); }$/;"	f	class:Set
getSize	common/NetDest.h	/^  int getSize() const { return m_bits.size(); }$/;"	f	class:NetDest
getSize	common/OptBigSet.h	/^  int getSize() const { return m_nSize; }$/;"	f	class:Set
getSize	common/Set.h	/^  int getSize() const { return m_size; }$/;"	f	class:Set
getSize	common/SubBlock.h	/^  int getSize() const { return m_data.size(); }$/;"	f	class:SubBlock
getSize	generated/MI_example/CacheMsg.h	/^  const int& getSize() const { return m_Size; }$/;"	f	class:CacheMsg
getSize	generated/MI_example/CacheMsg.h	/^  int& getSize() { return m_Size; }$/;"	f	class:CacheMsg
getSpace	generated/MI_example/CacheMsg.h	/^  MemorySpaceType& getSpace() { return m_Space; }$/;"	f	class:CacheMsg
getSpace	generated/MI_example/CacheMsg.h	/^  const MemorySpaceType& getSpace() const { return m_Space; }$/;"	f	class:CacheMsg
getStandardDeviation	common/Histogram.C	/^double Histogram::getStandardDeviation() const$/;"	f	class:Histogram
getStoresCompleted	tester/DeterministicDriver.h	/^  int getStoresCompleted() { return m_stores_completed; }$/;"	f	class:DeterministicDriver
getTBEState	generated/MI_example/L1Cache_TBE.h	/^  L1Cache_State& getTBEState() { return m_TBEState; }$/;"	f	class:L1Cache_TBE
getTBEState	generated/MI_example/L1Cache_TBE.h	/^  const L1Cache_State& getTBEState() const { return m_TBEState; }$/;"	f	class:L1Cache_TBE
getTCpredicterContainer	system/System.h	/^  TCpredictorContainer* getTCpredicterContainer() { return m_TCpredictorContainer_ptr; }$/;"	f	class:System
getThreadID	generated/MI_example/CacheMsg.h	/^  const int& getThreadID() const { return m_ThreadID; }$/;"	f	class:CacheMsg
getThreadID	generated/MI_example/CacheMsg.h	/^  int& getThreadID() { return m_ThreadID; }$/;"	f	class:CacheMsg
getThrottle	network/simple/Switch.C	/^const Throttle* Switch::getThrottle(LinkID link_number) const$/;"	f	class:Switch
getThrottles	network/Network.h	/^  virtual const Vector<Throttle*>* getThrottles(NodeID id) const { return NULL; }$/;"	f	class:Network
getThrottles	network/simple/SimpleNetwork.C	/^const Vector<Throttle*>* SimpleNetwork::getThrottles(NodeID id) const$/;"	f	class:SimpleNetwork
getThrottles	network/simple/Switch.C	/^const Vector<Throttle*>* Switch::getThrottles() const$/;"	f	class:Switch
getTime	eventqueue/EventQueue.h	/^  Time getTime() const { return m_globalTime; }$/;"	f	class:EventQueue
getTime	interfaces/GpusimInterface.C	/^unsigned long long GpusimInterface::getTime( void ) {$/;"	f	class:GpusimInterface
getTime	interfaces/OpalInterface.C	/^unsigned long long OpalInterface::getTime( void ) {$/;"	f	class:OpalInterface
getTime	interfaces/mf_api.h	/^  uint64 (*getTime)( void );$/;"	m	struct:mf_ruby_api
getTime	slicc_interface/Message.h	/^  const Time& getTime() const { return m_time; }$/;"	f	class:Message
getTimeMax	slicc_interface/RubySlicc_Util.h	/^extern inline Time getTimeMax(Time t1, Time t2)$/;"	f
getTimeMin	slicc_interface/RubySlicc_Util.h	/^extern inline Time getTimeMin(Time t1, Time t2)$/;"	f
getTimeMinusTime	slicc_interface/RubySlicc_Util.h	/^extern inline Time getTimeMinusTime(Time t1, Time t2)$/;"	f
getTimeModInt	slicc_interface/RubySlicc_Util.h	/^extern inline Time getTimeModInt(Time time, int modulus)$/;"	f
getTimeOfLastRecovery	eventqueue/EventQueue.h	/^  Time getTimeOfLastRecovery() {return m_timeOfLastRecovery;}$/;"	f	class:EventQueue
getTimePlusInt	slicc_interface/RubySlicc_Util.h	/^extern inline Time getTimePlusInt(Time addend1, int addend2)$/;"	f
getTimePlusTime	slicc_interface/RubySlicc_Util.h	/^extern inline Time getTimePlusTime(Time addend1, Time addend2)$/;"	f
getTimestamp	generated/MI_example/CacheMsg.h	/^  const uint64& getTimestamp() const { return m_Timestamp; }$/;"	f	class:CacheMsg
getTimestamp	generated/MI_example/CacheMsg.h	/^  uint64& getTimestamp() { return m_Timestamp; }$/;"	f	class:CacheMsg
getToNetQueue	network/garnet-fixed-pipeline/GarnetNetwork_d.C	/^MessageBuffer* GarnetNetwork_d::getToNetQueue(NodeID id, bool ordered, int network_num)$/;"	f	class:GarnetNetwork_d
getToNetQueue	network/garnet-flexible-pipeline/GarnetNetwork.C	/^MessageBuffer* GarnetNetwork::getToNetQueue(NodeID id, bool ordered, int network_num)$/;"	f	class:GarnetNetwork
getToNetQueue	network/simple/SimpleNetwork.C	/^MessageBuffer* SimpleNetwork::getToNetQueue(NodeID id, bool ordered, int network_num)$/;"	f	class:SimpleNetwork
getTopFlit	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline flit_d* getTopFlit(int vc)$/;"	f	class:InputUnit_d
getTopFlit	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	inline flit_d* getTopFlit()$/;"	f	class:VirtualChannel_d
getTopFlit	network/garnet-fixed-pipeline/flitBuffer_d.h	/^	inline flit_d* getTopFlit()$/;"	f	class:flitBuffer_d
getTopFlit	network/garnet-flexible-pipeline/flitBuffer.C	/^flit* flitBuffer:: getTopFlit()$/;"	f	class:flitBuffer
getTotal	common/Histogram.h	/^  int64 getTotal() const { return m_sumSamples; }$/;"	f	class:Histogram
getTotal	profiler/AccessTraceForAddress.C	/^int AccessTraceForAddress::getTotal() const$/;"	f	class:AccessTraceForAddress
getTotal	profiler/StoreTrace.h	/^  int getTotal() const { return m_total_samples; } $/;"	f	class:StoreTrace
getTotalCount	system/BlockBloomFilter.C	/^int BlockBloomFilter::getTotalCount()$/;"	f	class:BlockBloomFilter
getTotalCount	system/BulkBloomFilter.C	/^int BulkBloomFilter::getTotalCount()$/;"	f	class:BulkBloomFilter
getTotalCount	system/GenericBloomFilter.C	/^int GenericBloomFilter::getTotalCount()$/;"	f	class:GenericBloomFilter
getTotalCount	system/H3BloomFilter.C	/^int H3BloomFilter::getTotalCount()$/;"	f	class:H3BloomFilter
getTotalCount	system/LSB_CountingBloomFilter.C	/^int LSB_CountingBloomFilter::getTotalCount()$/;"	f	class:LSB_CountingBloomFilter
getTotalCount	system/MultiBitSelBloomFilter.C	/^int MultiBitSelBloomFilter::getTotalCount()$/;"	f	class:MultiBitSelBloomFilter
getTotalCount	system/MultiGrainBloomFilter.C	/^int MultiGrainBloomFilter::getTotalCount()$/;"	f	class:MultiGrainBloomFilter
getTotalCount	system/NonCountingBloomFilter.C	/^int NonCountingBloomFilter::getTotalCount()$/;"	f	class:NonCountingBloomFilter
getTotalInstructionsExecuted	profiler/Profiler.C	/^int64 Profiler::getTotalInstructionsExecuted() const$/;"	f	class:Profiler
getTotalTransactionsExecuted	profiler/Profiler.C	/^int64 Profiler::getTotalTransactionsExecuted() const$/;"	f	class:Profiler
getTouchedBy	profiler/AccessTraceForAddress.h	/^  int getTouchedBy() const { return m_touched_by.count(); } $/;"	f	class:AccessTraceForAddress
getTracer	system/System.h	/^  Tracer* getTracer() { assert(m_tracer_ptr != NULL); return m_tracer_ptr; }$/;"	f	class:System
getTrans	generated/MI_example/L1Cache_TBE.h	/^  bool& getTrans() { return m_Trans; }$/;"	f	class:L1Cache_TBE
getTrans	generated/MI_example/L1Cache_TBE.h	/^  const bool& getTrans() const { return m_Trans; }$/;"	f	class:L1Cache_TBE
getTransactionInterfaceManager	simics/depreceated/SimicsProcessor.C	/^TransactionInterfaceManager* SimicsProcessor::getTransactionInterfaceManager() {$/;"	f	class:SimicsProcessor
getTransactionLevel	simics/depreceated/SimicsProcessor.C	/^int SimicsProcessor::getTransactionLevel(){$/;"	f	class:SimicsProcessor
getTransactionSimicsProcessor	simics/depreceated/SimicsProcessor.C	/^TransactionSimicsProcessor* SimicsProcessor::getTransactionSimicsProcessor() {$/;"	f	class:SimicsProcessor
getType	generated/MI_example/CacheMsg.h	/^  CacheRequestType& getType() { return m_Type; }$/;"	f	class:CacheMsg
getType	generated/MI_example/CacheMsg.h	/^  const CacheRequestType& getType() const { return m_Type; }$/;"	f	class:CacheMsg
getType	generated/MI_example/MemoryMsg.h	/^  MemoryRequestType& getType() { return m_Type; }$/;"	f	class:MemoryMsg
getType	generated/MI_example/MemoryMsg.h	/^  const MemoryRequestType& getType() const { return m_Type; }$/;"	f	class:MemoryMsg
getType	generated/MI_example/RequestMsg.h	/^  CoherenceRequestType& getType() { return m_Type; }$/;"	f	class:RequestMsg
getType	generated/MI_example/RequestMsg.h	/^  const CoherenceRequestType& getType() const { return m_Type; }$/;"	f	class:RequestMsg
getType	generated/MI_example/ResponseMsg.h	/^  CoherenceResponseType& getType() { return m_Type; }$/;"	f	class:ResponseMsg
getType	generated/MI_example/ResponseMsg.h	/^  const CoherenceResponseType& getType() const { return m_Type; }$/;"	f	class:ResponseMsg
getType	generated/MI_example/TriggerMsg.h	/^  TriggerType& getType() { return m_Type; }$/;"	f	class:TriggerMsg
getType	generated/MI_example/TriggerMsg.h	/^  const TriggerType& getType() const { return m_Type; }$/;"	f	class:TriggerMsg
getUtilization	network/simple/Throttle.C	/^double Throttle::getUtilization() const$/;"	f	class:Throttle
getVCsPerClass	network/garnet-flexible-pipeline/NetworkConfig.h	/^		static int getVCsPerClass() {return g_VCS_PER_CLASS; }$/;"	f	class:NetworkConfig
getVcLoad	network/garnet-fixed-pipeline/NetworkLink_d.C	/^Vector<int> NetworkLink_d::getVcLoad()$/;"	f	class:NetworkLink_d
getVcLoad	network/garnet-flexible-pipeline/NetworkLink.C	/^Vector<int> NetworkLink::getVcLoad()$/;"	f	class:NetworkLink
getVerbosity	common/Debug.h	/^  VerbosityLevel getVerbosity() const { return m_verbosityLevel; }$/;"	f	class:Debug
getVersion	generated/MI_example/CacheMsg.h	/^  const int& getVersion() const { return m_Version; }$/;"	f	class:CacheMsg
getVersion	generated/MI_example/CacheMsg.h	/^  int& getVersion() { return m_Version; }$/;"	f	class:CacheMsg
getVictim	system/LRUPolicy.h	/^Index LRUPolicy::getVictim(Index set) const {$/;"	f	class:LRUPolicy
getVictim	system/PseudoLRUPolicy.h	/^Index PseudoLRUPolicy::getVictim(Index set) const {$/;"	f	class:PseudoLRUPolicy
get_DATA_BLOCK_BYTES	slicc_interface/RubySlicc_Util.h	/^extern inline int get_DATA_BLOCK_BYTES() {$/;"	f
get_GMEM_SKIP_L1D	slicc_interface/RubySlicc_Util.h	/^extern inline bool get_GMEM_SKIP_L1D() {$/;"	f
get_block_index	system/MultiGrainBloomFilter.C	/^int MultiGrainBloomFilter::get_block_index(const Address& addr) $/;"	f	class:MultiGrainBloomFilter
get_buf_read_count	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline double get_buf_read_count()$/;"	f	class:InputUnit_d
get_buf_write_count	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline double get_buf_write_count()$/;"	f	class:InputUnit_d
get_byte_mask_count	slicc_interface/RubySlicc_Util.h	/^extern inline int get_byte_mask_count(ruby_mem_access_byte_mask_t mask1) {$/;"	f
get_credit_cnt	network/garnet-fixed-pipeline/OutputUnit_d.h	/^	int get_credit_cnt(int vc) { return m_outvc_state[vc]->get_credit_count(); }$/;"	f	class:OutputUnit_d
get_credit_count	network/garnet-fixed-pipeline/OutVcState_d.h	/^	int get_credit_count() {return m_credit_count; }$/;"	f	class:OutVcState_d
get_crossbar_count	network/garnet-fixed-pipeline/Switch_d.h	/^	inline double get_crossbar_count()$/;"	f	class:Switch_d
get_delay	network/garnet-fixed-pipeline/flit_d.h	/^	inline int get_delay()$/;"	f	class:flit_d
get_enqueue_time	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline Time get_enqueue_time(int invc)$/;"	f	class:InputUnit_d
get_enqueue_time	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	inline Time get_enqueue_time()$/;"	f	class:VirtualChannel_d
get_enqueue_time	network/garnet-fixed-pipeline/flit_d.h	/^	inline Time get_enqueue_time()$/;"	f	class:flit_d
get_enqueue_time	network/garnet-flexible-pipeline/flit.C	/^Time flit::get_enqueue_time()$/;"	f	class:flit
get_entry_dirty_bit	network/orion/SIM_array.h	/^	u_int (*get_entry_dirty_bit)( void* );$/;"	m	struct:__anon9
get_entry_tag	network/orion/SIM_array.h	/^	LIB_Type_max_uint (*get_entry_tag)( void* );$/;"	m	struct:__anon9
get_entry_valid_bit	network/orion/SIM_array.h	/^	u_int (*get_entry_valid_bit)( void* );$/;"	m	struct:__anon9
get_global_arbit_count	network/garnet-fixed-pipeline/SWallocator_d.h	/^	inline double get_global_arbit_count()$/;"	f	class:SWallocator_d
get_global_arbit_count	network/garnet-fixed-pipeline/VCallocator_d.h	/^	inline double get_global_arbit_count()$/;"	f	class:VCallocator_d
get_id	network/garnet-fixed-pipeline/NetworkLink_d.h	/^	int get_id(){return m_id;}$/;"	f	class:NetworkLink_d
get_id	network/garnet-fixed-pipeline/Router_d.h	/^	int get_id() { return m_id; }	$/;"	f	class:Router_d
get_id	network/garnet-fixed-pipeline/flit_d.h	/^	inline int get_id()$/;"	f	class:flit_d
get_id	network/garnet-flexible-pipeline/NetworkLink.C	/^int NetworkLink::get_id()$/;"	f	class:NetworkLink
get_id	network/garnet-flexible-pipeline/flit.C	/^int flit::get_id()$/;"	f	class:flit
get_index	system/BlockBloomFilter.C	/^int BlockBloomFilter::get_index(const Address& addr) $/;"	f	class:BlockBloomFilter
get_index	system/BulkBloomFilter.C	/^int BulkBloomFilter::get_index(const Address& addr) $/;"	f	class:BulkBloomFilter
get_index	system/H3BloomFilter.C	/^int H3BloomFilter::get_index(const Address& addr, int i)$/;"	f	class:H3BloomFilter
get_index	system/LSB_CountingBloomFilter.C	/^int LSB_CountingBloomFilter::get_index(const Address& addr) $/;"	f	class:LSB_CountingBloomFilter
get_index	system/MultiBitSelBloomFilter.C	/^int MultiBitSelBloomFilter::get_index(const Address& addr, int i)$/;"	f	class:MultiBitSelBloomFilter
get_index	system/NonCountingBloomFilter.C	/^int NonCountingBloomFilter::get_index(const Address& addr) $/;"	f	class:NonCountingBloomFilter
get_inlink_id	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline int get_inlink_id()$/;"	f	class:InputUnit_d
get_inport	network/garnet-fixed-pipeline/OutVcState_d.h	/^	int get_inport() {return m_in_port; }$/;"	f	class:OutVcState_d
get_inputUnit_ref	network/garnet-fixed-pipeline/Router_d.h	/^	Vector<InputUnit_d *>& get_inputUnit_ref() { return m_input_unit; }$/;"	f	class:Router_d
get_invc	network/garnet-fixed-pipeline/OutVcState_d.h	/^	int get_invc() { return m_in_vc; }$/;"	f	class:OutVcState_d
get_lease_fixed	slicc_interface/RubySlicc_TCpredictor_interface.C	/^Time get_lease_fixed() {$/;"	f
get_list	common/MemfetchSet.C	/^std::list<uint64>& MemfetchSet::get_list(int core_id) {$/;"	f	class:MemfetchSet
get_local_arbit_count	network/garnet-fixed-pipeline/SWallocator_d.h	/^	inline double get_local_arbit_count()$/;"	f	class:SWallocator_d
get_local_arbit_count	network/garnet-fixed-pipeline/VCallocator_d.h	/^	inline double get_local_arbit_count()$/;"	f	class:VCallocator_d
get_msg_ptr	network/garnet-fixed-pipeline/flit_d.h	/^	inline MsgPtr& get_msg_ptr()$/;"	f	class:flit_d
get_msg_ptr	network/garnet-flexible-pipeline/flit.C	/^MsgPtr& flit::get_msg_ptr()$/;"	f	class:flit
get_net_ptr	network/garnet-fixed-pipeline/Router_d.h	/^	GarnetNetwork_d* get_net_ptr() { return m_network_ptr; }$/;"	f	class:Router_d
get_network_config	common/Driver.h	/^  virtual void get_network_config() {} $/;"	f	class:Driver
get_num_inports	network/garnet-fixed-pipeline/Router_d.h	/^	int get_num_inports() { return m_input_unit.size(); }$/;"	f	class:Router_d
get_num_outports	network/garnet-fixed-pipeline/Router_d.h	/^	int get_num_outports() { return m_output_unit.size(); }$/;"	f	class:Router_d
get_num_vcs	network/garnet-fixed-pipeline/Router_d.h	/^	int get_num_vcs() { return m_num_vcs; }$/;"	f	class:Router_d
get_opal_request_type	interfaces/GpusimInterface.C	/^static OpalMemop_t get_opal_request_type( CacheRequestType type ) {$/;"	f	file:
get_opal_request_type	interfaces/OpalInterface.C	/^static OpalMemop_t get_opal_request_type( CacheRequestType type ) {$/;"	f	file:
get_outlink_id	network/garnet-fixed-pipeline/OutputUnit_d.h	/^	inline int get_outlink_id()$/;"	f	class:OutputUnit_d
get_outport	network/garnet-fixed-pipeline/flit_d.h	/^	int get_outport() {return m_outport; }$/;"	f	class:flit_d
get_outport	network/garnet-flexible-pipeline/InVcState.C	/^int InVcState::get_outport()$/;"	f	class:InVcState
get_outputUnit_ref	network/garnet-fixed-pipeline/Router_d.h	/^	Vector<OutputUnit_d *>& get_outputUnit_ref() { return m_output_unit; }$/;"	f	class:Router_d
get_outvc	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline int get_outvc(int invc)$/;"	f	class:InputUnit_d
get_outvc	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	inline int get_outvc() $/;"	f	class:VirtualChannel_d
get_outvc	network/garnet-flexible-pipeline/InVcState.C	/^int InVcState::get_outvc()$/;"	f	class:InVcState
get_page_index	system/MultiGrainBloomFilter.C	/^int MultiGrainBloomFilter::get_page_index(const Address & addr)$/;"	f	class:MultiGrainBloomFilter
get_pred_Addrfixed_lifetime	slicc_interface/RubySlicc_TCpredictor_interface.C	/^Time get_pred_Addrfixed_lifetime(int addr) {$/;"	f
get_pred_Addrfixed_lifetime	system/TCpredictor.C	/^Time TCpredictorAddrfixed::get_pred_Addrfixed_lifetime(int addr) {$/;"	f	class:TCpredictorAddrfixed
get_pred_PCfixed_lifetime	slicc_interface/RubySlicc_TCpredictor_interface.C	/^Time get_pred_PCfixed_lifetime(int pc) {$/;"	f
get_pred_PCfixed_lifetime	system/TCpredictor.C	/^Time TCpredictorPCfixed::get_pred_PCfixed_lifetime(int pc) {$/;"	f	class:TCpredictorPCfixed
get_pred_global_expirehit	slicc_interface/RubySlicc_TCpredictor_interface.C	/^int get_pred_global_expirehit() { return CL_PRED_GLOBAL_EXPIREHIT_CREDIT; }$/;"	f
get_pred_global_l2evict	slicc_interface/RubySlicc_TCpredictor_interface.C	/^int get_pred_global_l2evict() { return CL_PRED_GLOBAL_L2EVICT_PENALTY; }$/;"	f
get_pred_global_lifetime	slicc_interface/RubySlicc_TCpredictor_interface.C	/^Time get_pred_global_lifetime() {$/;"	f
get_pred_global_lifetime	system/TCpredictor.C	/^Time TCpredictorGlobal::get_pred_global_lifetime() {$/;"	f	class:TCpredictorGlobal
get_pred_global_writeunexpired	slicc_interface/RubySlicc_TCpredictor_interface.C	/^int get_pred_global_writeunexpired() { return CL_PRED_GLOBAL_WRITEUNEXPIRED_PENALTY; }$/;"	f
get_pred_oracle_lifetime	slicc_interface/RubySlicc_TCpredictor_interface.C	/^Time get_pred_oracle_lifetime() {$/;"	f
get_pred_pcadaptive_lifetime	slicc_interface/RubySlicc_TCpredictor_interface.C	/^Time get_pred_pcadaptive_lifetime(int pc, int core_id) {$/;"	f
get_pred_pcadaptive_lifetime	system/TCpredictor.C	/^Time TCpredictorPCAdaptive::get_pred_pcadaptive_lifetime(int pc, int core_id) {$/;"	f	class:TCpredictorPCAdaptive
get_pred_pcsampler_lifetime	slicc_interface/RubySlicc_TCpredictor_interface.C	/^Time get_pred_pcsampler_lifetime(int pc) {$/;"	f
get_pred_pcsampler_lifetime	system/TCpredictor.C	/^Time TCpredictorPCSampler::get_pred_pcsampler_lifetime(int pc) {$/;"	f	class:TCpredictorPCSampler
get_pred_perL2_expirehit	slicc_interface/RubySlicc_TCpredictor_interface.C	/^int get_pred_perL2_expirehit() { return CL_PRED_PERL2_EXPIREHIT_CREDIT; }$/;"	f
get_pred_perL2_l2evict	slicc_interface/RubySlicc_TCpredictor_interface.C	/^int get_pred_perL2_l2evict() { return CL_PRED_PERL2_L2EVICT_PENALTY; }$/;"	f
get_pred_perL2_lifetime	slicc_interface/RubySlicc_TCpredictor_interface.C	/^Time get_pred_perL2_lifetime(NodeID L2BankId) {$/;"	f
get_pred_perL2_lifetime	system/TCpredictor.C	/^Time TCpredictorPerL2::get_pred_perL2_lifetime(int L2BankId) {$/;"	f	class:TCpredictorPerL2
get_pred_perL2_writeunexpired	slicc_interface/RubySlicc_TCpredictor_interface.C	/^int get_pred_perL2_writeunexpired() { return CL_PRED_PERL2_WRITEUNEXPIRED_PENALTY; }$/;"	f
get_request_type	interfaces/GpusimInterface.C	/^static CacheRequestType get_request_type( OpalMemop_t opaltype ) {$/;"	f	file:
get_request_type	interfaces/OpalInterface.C	/^static CacheRequestType get_request_type( OpalMemop_t opaltype ) {$/;"	f	file:
get_route	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline int get_route(int vc)$/;"	f	class:InputUnit_d
get_route	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	inline int get_route() $/;"	f	class:VirtualChannel_d
get_ruby_block_size	gpusim_ruby/gpusim_ruby.C	/^unsigned gpusim_ruby::get_ruby_block_size() { return g_DATA_BLOCK_BYTES; }$/;"	f	class:gpusim_ruby
get_set_tag	network/orion/SIM_array.h	/^	LIB_Type_max_uint (*get_set_tag)( void*, int );$/;"	m	struct:__anon9
get_set_use_bit	network/orion/SIM_array.h	/^	u_int (*get_set_use_bit)( void*, int );$/;"	m	struct:__anon9
get_size	network/garnet-fixed-pipeline/flit_d.h	/^	inline int get_size()$/;"	f	class:flit_d
get_size	network/garnet-flexible-pipeline/flit.C	/^int flit::get_size()$/;"	f	class:flit
get_stage	network/garnet-fixed-pipeline/flit_d.h	/^	inline pair<flit_stage, Time> get_stage()$/;"	f	class:flit_d
get_state	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	inline VC_state_type get_state() $/;"	f	class:VirtualChannel_d
get_time	network/garnet-fixed-pipeline/flit_d.h	/^	inline Time get_time()$/;"	f	class:flit_d
get_time	network/garnet-flexible-pipeline/flit.C	/^Time flit::get_time()$/;"	f	class:flit
get_time	slicc_interface/RubySlicc_Util.h	/^extern inline Time get_time()$/;"	f
get_true_sharers	slicc_interface/RubySlicc_Util2.C	/^NetDest get_true_sharers(NodeID chip_id, Address addr) {$/;"	f
get_type	network/garnet-fixed-pipeline/flit_d.h	/^	inline flit_type get_type()$/;"	f	class:flit_d
get_type	network/garnet-flexible-pipeline/flit.C	/^flit_type flit::get_type()$/;"	f	class:flit
get_valid_vcs	network/garnet-flexible-pipeline/Router.C	/^Vector<int > Router::get_valid_vcs(int invc)$/;"	f	class:Router
get_vc	network/garnet-fixed-pipeline/flit_d.h	/^	inline int get_vc()$/;"	f	class:flit_d
get_vc	network/garnet-flexible-pipeline/flit.C	/^int flit::get_vc()$/;"	f	class:flit
get_vc_per_vnet	network/garnet-fixed-pipeline/Router_d.h	/^	int get_vc_per_vnet() {return m_vc_per_vnet; }$/;"	f	class:Router_d
get_vnet	network/garnet-fixed-pipeline/NetworkInterface_d.C	/^int NetworkInterface_d::get_vnet(int vc)$/;"	f	class:NetworkInterface_d
get_vnet	network/garnet-fixed-pipeline/SWallocator_d.C	/^int SWallocator_d::get_vnet(int invc)$/;"	f	class:SWallocator_d
get_vnet	network/garnet-fixed-pipeline/VCallocator_d.C	/^int VCallocator_d::get_vnet(int invc)$/;"	f	class:VCallocator_d
get_vnet	network/garnet-fixed-pipeline/flit_d.h	/^	inline int get_vnet()$/;"	f	class:flit_d
get_vnet	network/garnet-flexible-pipeline/flit.C	/^int flit::get_vnet()$/;"	f	class:flit
getmemfetch	generated/MI_example/CacheMsg.h	/^  const uint64& getmemfetch() const { return m_memfetch; }$/;"	f	class:CacheMsg
getmemfetch	generated/MI_example/CacheMsg.h	/^  uint64& getmemfetch() { return m_memfetch; }$/;"	f	class:CacheMsg
getopt_gnu	tester/getopt.C	/^getopt_gnu ($/;"	f
getopt_long	tester/getopt.C	/^getopt_long ($/;"	f
getopt_long_only	tester/getopt.C	/^getopt_long_only ($/;"	f
getprofiled	generated/MI_example/CacheMsg.h	/^  bool& getprofiled() { return m_profiled; }$/;"	f	class:CacheMsg
getprofiled	generated/MI_example/CacheMsg.h	/^  const bool& getprofiled() const { return m_profiled; }$/;"	f	class:CacheMsg
gettext	tester/getopt.C	67;"	d	file:
global_default_gpusim_param	generated/MI_example/gpusim_param.h	/^static const char *global_default_gpusim_param =$/;"	v
global_default_param	generated/MI_example/default_param.h	/^static const char *global_default_param =$/;"	v
global_default_tester_param	generated/MI_example/tester_param.h	/^static const char *global_default_tester_param =$/;"	v
gpusim_ruby	gpusim_ruby/gpusim_ruby.C	/^gpusim_ruby::gpusim_ruby( gpusim_ruby_config R_config) : m_config(R_config) {$/;"	f	class:gpusim_ruby
gpusim_ruby	gpusim_ruby/gpusim_ruby.h	/^class gpusim_ruby {$/;"	c
gpusim_ruby_allocate	gpusim_ruby/gpusim_ruby.C	/^static void gpusim_ruby_allocate( void )$/;"	f	file:
gpusim_ruby_config	gpusim_ruby/gpusim_ruby.h	/^struct gpusim_ruby_config {$/;"	s
gpusim_ruby_generate_values	gpusim_ruby/gpusim_ruby.C	/^static void gpusim_ruby_generate_values( void ) { }$/;"	f	file:
grant_vc	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline void grant_vc(int in_vc, int out_vc)$/;"	f	class:InputUnit_d
grant_vc	network/garnet-fixed-pipeline/VirtualChannel_d.C	/^void VirtualChannel_d::grant_vc(int out_vc)$/;"	f	class:VirtualChannel_d
grant_vc	network/garnet-flexible-pipeline/FlexibleConsumer.h	/^   	virtual void grant_vc(int out_port, int vc, Time grant_time) {}$/;"	f	class:FlexibleConsumer
grant_vc	network/garnet-flexible-pipeline/InVcState.C	/^void InVcState::grant_vc(int out_vc, Time grant_time)$/;"	f	class:InVcState
grant_vc	network/garnet-flexible-pipeline/NetworkInterface.C	/^void NetworkInterface::grant_vc(int out_port, int vc, Time grant_time)$/;"	f	class:NetworkInterface
grant_vc	network/garnet-flexible-pipeline/OutVcState.C	/^void OutVcState::grant_vc(Time grant_time)$/;"	f	class:OutVcState
grant_vc	network/garnet-flexible-pipeline/Router.C	/^void Router::grant_vc(int out_port, int vc, Time grant_time)$/;"	f	class:Router
grant_vc_link	network/garnet-flexible-pipeline/NetworkLink.C	/^void NetworkLink::grant_vc_link(int vc, Time grant_time)$/;"	f	class:NetworkLink
grp	network/orion/SIM_permu.h	/^		SIM_grp_t grp;$/;"	m	union:__anon42::__anon43
grp_width	network/orion/SIM_misc.h	/^	u_int grp_width;$/;"	m	struct:__anon33
grp_width	network/orion_old/power_bus.h	/^	unsigned grp_width;$/;"	m	struct:__anon83
h_deallocateL1CacheBlock	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::h_deallocateL1CacheBlock(const Address& addr)$/;"	f	class:L1Cache_Controller
h_tab	network/orion/SIM_util.c	/^static u_char h_tab[256] = {0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4, 1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5, 1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5, 2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6, 1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5, 2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6, 2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6, 3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7, 1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5, 2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6, 2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6, 3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7, 2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6, 3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7, 3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7, 4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8};$/;"	v	file:
h_tab	network/orion_old/power_utils.C	/^static char h_tab[256] = {0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4, 1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5, 1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5, 2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6, 1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5, 2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6, 2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6, 3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7, 1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5, 2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6, 2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6, 3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7, 2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6, 3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7, 3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7, 4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8};$/;"	v	file:
hap_handle_t	simics/simics_api_dummy.c	/^typedef int hap_handle_t;$/;"	t	file:
hap_type_t	simics/simics_api_dummy.c	/^typedef int hap_type_t;$/;"	t	file:
has_arg	tester/getopt.h	/^  int has_arg;$/;"	m	struct:option
has_credits	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline bool has_credits(int vc)$/;"	f	class:InputUnit_d
has_credits	network/garnet-fixed-pipeline/OutVcState_d.h	/^	inline bool has_credits()$/;"	f	class:OutVcState_d
has_credits	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	inline bool has_credits() $/;"	f	class:VirtualChannel_d
hash	common/Address.h	/^  template <> struct hash<Address>$/;"	s	namespace:__gnu_cxx
hash_H3	system/H3BloomFilter.C	/^int H3BloomFilter::hash_H3(uint64 value, int index) {$/;"	f	class:H3BloomFilter
hash_bitsel	system/MultiBitSelBloomFilter.C	/^int MultiBitSelBloomFilter::hash_bitsel(uint64 value, int index, int jump, int maxBits, int numBits) {$/;"	f	class:MultiBitSelBloomFilter
hitCallback	interfaces/GpusimInterface.C	/^void GpusimInterface::hitCallback(NodeID proc, SubBlock& data, CacheRequestType type, MemorySpaceType space, int thread, uint64 memfetch) {$/;"	f	class:GpusimInterface
hitCallback	interfaces/OpalInterface.C	/^void OpalInterface::hitCallback(NodeID proc, SubBlock& data, CacheRequestType type, MemorySpaceType space, int thread, uint64 memfetch) {$/;"	f	class:OpalInterface
hitCallback	interfaces/mf_api.h	/^  void (*hitCallback)( int cpuNumber, pa_t phys_address, OpalMemop_t type, int thread );$/;"	m	struct:mf_opal_api
hitCallback	simics/depreceated/SimicsDriver.C	/^void SimicsDriver::hitCallback(NodeID proc, SubBlock& data, CacheRequestType type, int thread) {$/;"	f	class:SimicsDriver
hitCallback	simics/depreceated/SimicsProcessor.C	/^void SimicsProcessor::hitCallback(CacheRequestType type, SubBlock& data) {$/;"	f	class:SimicsProcessor
hitCallback	system/Sequencer.C	/^void Sequencer::hitCallback(const CacheMsg& request, DataBlock& data, GenericMachineType respondingMach, int thread) {$/;"	f	class:Sequencer
hitCallback	tester/DeterministicDriver.C	/^void DeterministicDriver::hitCallback(NodeID proc, SubBlock& data, CacheRequestType type, MemorySpaceType space, int thread, uint64 memfetch)$/;"	f	class:DeterministicDriver
hitCallback	tester/RaceyDriver.C	/^void RaceyDriver::hitCallback(NodeID proc, SubBlock& data, CacheRequestType type, MemorySpaceType space, int thread, uint64 memfetch)$/;"	f	class:RaceyDriver
hitCallback	tester/SyntheticDriver.C	/^void SyntheticDriver::hitCallback(NodeID proc, SubBlock& data, CacheRequestType type, MemorySpaceType space, int thread, uint64 memfetch)$/;"	f	class:SyntheticDriver
hitCallback	tester/Tester.C	/^void Tester::hitCallback(NodeID proc, SubBlock& data, CacheRequestType type, MemorySpaceType space, int thread, uint64 memfetch)$/;"	f	class:Tester
holdTime	tester/DetermInvGenerator.C	/^int DetermInvGenerator::holdTime() const$/;"	f	class:DetermInvGenerator
holdTime	tester/RequestGenerator.C	/^int RequestGenerator::holdTime() const$/;"	f	class:RequestGenerator
holdTime	tester/depreceated/XactAbortRequestGenerator.C	/^int XactAbortRequestGenerator::holdTime() const$/;"	f	class:XactAbortRequestGenerator
holdTime	tester/depreceated/XactRequestGenerator.C	/^int XactRequestGenerator::holdTime() const$/;"	f	class:XactRequestGenerator
i_allocateL1CacheBlock	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::i_allocateL1CacheBlock(const Address& addr)$/;"	f	class:L1Cache_Controller
i_leakage	network/orion_old/power_arbiter.h	/^	double i_leakage;	$/;"	m	struct:__anon57
i_leakage	network/orion_old/power_arbiter.h	/^	double i_leakage;$/;"	m	struct:__anon58
i_leakage	network/orion_old/power_array.h	/^	double i_leakage;	$/;"	m	struct:__anon70
i_leakage	network/orion_old/power_array.h	/^	double i_leakage;	$/;"	m	struct:__anon76
i_leakage	network/orion_old/power_array.h	/^	double i_leakage;$/;"	m	struct:__anon69
i_leakage	network/orion_old/power_array.h	/^	double i_leakage;$/;"	m	struct:__anon73
i_leakage	network/orion_old/power_array.h	/^	double i_leakage;$/;"	m	struct:__anon79
i_leakage	network/orion_old/power_crossbar.h	/^	double i_leakage;$/;"	m	struct:__anon87
i_leakage	network/orion_old/power_router_init.h	/^	double i_leakage;$/;"	m	struct:__anon89
i_popIncomingRequestQueue	generated/MI_example/Directory_Controller.C	/^void Directory_Controller::i_popIncomingRequestQueue(const Address& addr)$/;"	f	class:Directory_Controller
ideal_inv_all_L1s	slicc_interface/RubySlicc_Util2.C	/^void ideal_inv_all_L1s(NodeID chip_id, Address addr) {$/;"	f
ideal_inv_sharer_L1s	slicc_interface/RubySlicc_Util2.C	/^void ideal_inv_sharer_L1s(NodeID chip_id, Address addr, NetDest Sharers) {$/;"	f
ideal_inv_sharer_L1s_minus_requester	slicc_interface/RubySlicc_Util2.C	/^void ideal_inv_sharer_L1s_minus_requester(NodeID chip_id, Address addr, NetDest Sharers, MachineID requester) {$/;"	f
in	network/orion/SIM_permu.h	/^	LIB_Type_max_uint in;$/;"	m	struct:__anon40
in	network/orion/SIM_permu.h	/^	LIB_Type_max_uint in;$/;"	m	struct:__anon41
inNetLink	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	NetworkLink_d *inNetLink;$/;"	m	class:NetworkInterface_d
inNetLink	network/garnet-flexible-pipeline/NetworkInterface.h	/^	NetworkLink *inNetLink;$/;"	m	class:NetworkInterface
inNode_ptr	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	Vector<MessageBuffer *> inNode_ptr; \/\/ The Message buffers that takes messages from the protocol$/;"	m	class:NetworkInterface_d
inNode_ptr	network/garnet-flexible-pipeline/NetworkInterface.h	/^	Vector<MessageBuffer *> inNode_ptr; \/\/ The Message buffers that takes messages from the protocol$/;"	m	class:NetworkInterface
inTransaction	common/Driver.h	/^  virtual int inTransaction(int procID, int thread ) const{ $/;"	f	class:Driver
in_buf	network/orion/SIM_router.h	/^	SIM_array_t in_buf;$/;"	m	struct:__anon47
in_buf	network/orion/SIM_router.h	/^	int in_buf;$/;"	m	struct:__anon48
in_buf	network/orion_old/power_router_init.h	/^	power_array in_buf;$/;"	m	struct:__anon89
in_buf	network/orion_old/power_router_init.h	/^    int in_buf;$/;"	m	struct:__anon90
in_buf_info	network/orion/SIM_router.h	/^	SIM_array_info_t in_buf_info;$/;"	m	struct:__anon48
in_buf_info	network/orion_old/power_router_init.h	/^	power_array_info in_buf_info;$/;"	m	struct:__anon90
in_buffer_model	network/orion/SIM_router.h	/^	int in_buffer_model;$/;"	m	struct:__anon48
in_cbuf_crsbar	network/orion/SIM_router.h	/^	SIM_crossbar_t in_cbuf_crsbar;$/;"	m	struct:__anon47
in_n_switch	network/orion/SIM_router.h	/^	u_int in_n_switch;$/;"	m	struct:__anon48
in_n_switch	network/orion_old/power_router_init.h	/^	unsigned in_n_switch;$/;"	m	struct:__anon90
in_seg	network/orion/SIM_crossbar.h	/^	u_int in_seg;	\/* only used by segmented crossbar *\/$/;"	m	struct:__anon32
in_share_buf	network/orion/SIM_router.h	/^	int in_share_buf;	\/* whether input virtual classes share buffer *\/$/;"	m	struct:__anon48
in_share_buf	network/orion_old/power_router_init.h	/^	int in_share_buf;$/;"	m	struct:__anon90
in_share_switch	network/orion/SIM_router.h	/^	int in_share_switch;	\/* whether input virtual classes share switch *\/$/;"	m	struct:__anon48
in_share_switch	network/orion_old/power_router_init.h	/^	int in_share_switch;$/;"	m	struct:__anon90
inc_index	system/StoreBuffer.C	/^static void inc_index(int& index)$/;"	f	file:
include_stack	generated/MI_example/attrlex.c	/^static YY_BUFFER_STATE  include_stack[MAX_INCLUDE_DEPTH];$/;"	v	file:
include_stack_ptr	generated/MI_example/attrlex.c	/^static int              include_stack_ptr = 0;$/;"	v	file:
increment	system/BlockBloomFilter.C	/^void BlockBloomFilter::increment(const Address& addr)$/;"	f	class:BlockBloomFilter
increment	system/BulkBloomFilter.C	/^void BulkBloomFilter::increment(const Address& addr)$/;"	f	class:BulkBloomFilter
increment	system/GenericBloomFilter.C	/^void GenericBloomFilter::increment(const Address& addr)$/;"	f	class:GenericBloomFilter
increment	system/H3BloomFilter.C	/^void H3BloomFilter::increment(const Address& addr)$/;"	f	class:H3BloomFilter
increment	system/LSB_CountingBloomFilter.C	/^void LSB_CountingBloomFilter::increment(const Address& addr)$/;"	f	class:LSB_CountingBloomFilter
increment	system/MultiBitSelBloomFilter.C	/^void MultiBitSelBloomFilter::increment(const Address& addr)$/;"	f	class:MultiBitSelBloomFilter
increment	system/MultiGrainBloomFilter.C	/^void MultiGrainBloomFilter::increment(const Address& addr)$/;"	f	class:MultiGrainBloomFilter
increment	system/NonCountingBloomFilter.C	/^void NonCountingBloomFilter::increment(const Address& addr)$/;"	f	class:NonCountingBloomFilter
incrementL2Access	interfaces/OpalInterface.C	/^void OpalInterface::incrementL2Access(int procID) const{$/;"	f	class:OpalInterface
incrementL2Access	interfaces/mf_api.h	/^  void (*incrementL2Access)(int cpuNumber);$/;"	m	struct:mf_opal_api
incrementPrefetcherAccess	interfaces/OpalInterface.C	/^void OpalInterface::incrementPrefetcherAccess(int procID, int num_prefetches, int isinstr) const{$/;"	f	class:OpalInterface
incrementPrefetcherAccess	interfaces/mf_api.h	/^  void (*incrementPrefetcherAccess)(int cpuNumber, int num_prefetches, int isinstr);$/;"	m	struct:mf_opal_api
increment_credit	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline void increment_credit(int in_vc, bool free_signal)$/;"	f	class:InputUnit_d
increment_credit	network/garnet-fixed-pipeline/OutVcState_d.h	/^	inline void increment_credit()$/;"	f	class:OutVcState_d
increment_credit	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	inline void increment_credit()$/;"	f	class:VirtualChannel_d
increment_injected_flits	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	inline void increment_injected_flits()$/;"	f	class:GarnetNetwork_d
increment_network_latency	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	inline void increment_network_latency(Time latency)$/;"	f	class:GarnetNetwork_d
increment_queueing_latency	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	inline void increment_queueing_latency(Time latency)$/;"	f	class:GarnetNetwork_d
increment_recieved_flits	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	inline void increment_recieved_flits()$/;"	f	class:GarnetNetwork_d
init	config/RubyConfig.C	/^void RubyConfig::init()$/;"	f	class:RubyConfig
init	eventqueue/EventQueue.C	/^void EventQueue::init()$/;"	f	class:EventQueue
init	network/garnet-fixed-pipeline/Router_d.C	/^void Router_d::init()$/;"	f	class:Router_d
init	network/garnet-fixed-pipeline/SWallocator_d.C	/^void SWallocator_d::init()$/;"	f	class:SWallocator_d
init	network/garnet-fixed-pipeline/Switch_d.C	/^void Switch_d::init()$/;"	f	class:Switch_d
init	network/garnet-fixed-pipeline/VCallocator_d.C	/^void VCallocator_d::init()$/;"	f	class:VCallocator_d
init	network/simple/Throttle.C	/^void Throttle::init(NodeID node, int link_latency, int link_bandwidth_multiplier)$/;"	f	class:Throttle
init	network/simple/Topology.C	/^void Topology::init()$/;"	f	class:Topology
init	tester/Instruction.C	/^void Instruction::init(Opcode op, Address addr){$/;"	f	class:Instruction
initSummary	profiler/StoreTrace.C	/^void StoreTrace::initSummary()$/;"	f	class:StoreTrace
init_generate_values	init.C	/^static void init_generate_values( void )$/;"	f	file:
init_local	depreceated/module/ruby.c	/^void init_local() {$/;"	f
init_simulator	init.C	/^void init_simulator()$/;"	f
init_use_snoop	init.C	/^int init_use_snoop()$/;"	f
init_variables	init.C	/^void init_variables( void )$/;"	f
initialize	gpusim_ruby/gpusim_ruby.C	/^void gpusim_ruby::initialize() {$/;"	f	class:gpusim_ruby
initiate	tester/Check.C	/^void Check::initiate()$/;"	f	class:Check
initiateAction	tester/Check.C	/^void Check::initiateAction()$/;"	f	class:Check
initiateBeginTransaction	tester/depreceated/XactAbortRequestGenerator.C	/^void XactAbortRequestGenerator::initiateBeginTransaction()$/;"	f	class:XactAbortRequestGenerator
initiateBeginTransaction	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::initiateBeginTransaction()$/;"	f	class:XactRequestGenerator
initiateCheck	tester/Check.C	/^void Check::initiateCheck()$/;"	f	class:Check
initiateCommit	tester/depreceated/XactAbortRequestGenerator.C	/^void XactAbortRequestGenerator::initiateCommit()$/;"	f	class:XactAbortRequestGenerator
initiateCommit	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::initiateCommit()$/;"	f	class:XactRequestGenerator
initiateDone	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::initiateDone()$/;"	f	class:XactRequestGenerator
initiateInc	tester/depreceated/XactAbortRequestGenerator.C	/^void XactAbortRequestGenerator::initiateInc(Address addr)$/;"	f	class:XactAbortRequestGenerator
initiateInc	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::initiateInc(Address addr)$/;"	f	class:XactRequestGenerator
initiateLoad	tester/DetermInvGenerator.C	/^void DetermInvGenerator::initiateLoad()$/;"	f	class:DetermInvGenerator
initiateLoad	tester/DetermSeriesGETSGenerator.C	/^void DetermSeriesGETSGenerator::initiateLoad()$/;"	f	class:DetermSeriesGETSGenerator
initiateLoad	tester/depreceated/XactAbortRequestGenerator.C	/^void XactAbortRequestGenerator::initiateLoad(Address addr)$/;"	f	class:XactAbortRequestGenerator
initiateLoad	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::initiateLoad(Address addr)$/;"	f	class:XactRequestGenerator
initiateLoadCtr	tester/BarrierGenerator.C	/^void BarrierGenerator::initiateLoadCtr()$/;"	f	class:BarrierGenerator
initiateLoadFlag	tester/BarrierGenerator.C	/^void BarrierGenerator::initiateLoadFlag()$/;"	f	class:BarrierGenerator
initiatePrefetch	tester/Check.C	/^void Check::initiatePrefetch()$/;"	f	class:Check
initiatePrefetch	tester/Check.C	/^void Check::initiatePrefetch(Sequencer* targetSequencer_ptr)$/;"	f	class:Check
initiateRelease	tester/BarrierGenerator.C	/^void BarrierGenerator::initiateRelease()$/;"	f	class:BarrierGenerator
initiateRelease	tester/RequestGenerator.C	/^void RequestGenerator::initiateRelease()$/;"	f	class:RequestGenerator
initiateStore	tester/DetermGETXGenerator.C	/^void DetermGETXGenerator::initiateStore()$/;"	f	class:DetermGETXGenerator
initiateStore	tester/DetermInvGenerator.C	/^void DetermInvGenerator::initiateStore()$/;"	f	class:DetermInvGenerator
initiateStore	tester/depreceated/XactAbortRequestGenerator.C	/^void XactAbortRequestGenerator::initiateStore(Address addr)$/;"	f	class:XactAbortRequestGenerator
initiateStore	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::initiateStore(Address addr)$/;"	f	class:XactRequestGenerator
initiateStoreCtr	tester/BarrierGenerator.C	/^void BarrierGenerator::initiateStoreCtr()$/;"	f	class:BarrierGenerator
initiateStoreFlag	tester/BarrierGenerator.C	/^void BarrierGenerator::initiateStoreFlag()$/;"	f	class:BarrierGenerator
initiateSwap	tester/BarrierGenerator.C	/^void BarrierGenerator::initiateSwap()$/;"	f	class:BarrierGenerator
initiateSwap	tester/RequestGenerator.C	/^void RequestGenerator::initiateSwap()$/;"	f	class:RequestGenerator
initiateTest	tester/BarrierGenerator.C	/^void BarrierGenerator::initiateTest()$/;"	f	class:BarrierGenerator
initiateTest	tester/RequestGenerator.C	/^void RequestGenerator::initiateTest()$/;"	f	class:RequestGenerator
initiatingSequencer	tester/Check.C	/^Sequencer* Check::initiatingSequencer() const$/;"	f	class:Check
inn	network/orion/SIM_permu.h	/^	LIB_Type_max_uint inn[4];$/;"	m	struct:__anon40
input	common/Address.C	/^void Address::input(istream& in)$/;"	f	class:Address
input	recorder/TraceRecord.C	/^bool TraceRecord::input(istream& in)$/;"	f	class:TraceRecord
inputQueueEmpty	system/GpusimDramInterface.h	/^   bool inputQueueEmpty() { return m_input_queue.empty(); }$/;"	f	class:GpusimDramInterface
insert	common/MemfetchSet.C	/^void MemfetchSet::insert(MachineID machine, uint64 memfetch) {$/;"	f	class:MemfetchSet
insert	network/garnet-fixed-pipeline/flitBuffer_d.h	/^	inline void insert(flit_d *flt)$/;"	f	class:flitBuffer_d
insert	network/garnet-flexible-pipeline/flitBuffer.C	/^void flitBuffer::insert(flit *flt)$/;"	f	class:flitBuffer
insertFlit	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	inline void insertFlit(flit_d *t_flit)$/;"	f	class:VirtualChannel_d
insertRequest	system/Sequencer.C	/^bool Sequencer::insertRequest(const CacheMsg& request) {$/;"	f	class:Sequencer
insertSkipL1Request	system/Sequencer.C	/^void Sequencer::insertSkipL1Request(const CacheMsg& request) {$/;"	f	class:Sequencer
insertStore	system/StoreBuffer.C	/^void StoreBuffer::insertStore(const CacheMsg& request) $/;"	f	class:StoreBuffer
insert_flit	network/garnet-fixed-pipeline/OutputUnit_d.h	/^	inline void insert_flit(flit_d *t_flit)$/;"	f	class:OutputUnit_d
inst	interfaces/GpusimInterface.C	/^GpusimInterface *GpusimInterface::inst = NULL;$/;"	m	class:GpusimInterface	file:
inst	interfaces/GpusimInterface.h	/^  static GpusimInterface *inst;$/;"	m	class:GpusimInterface
inst	interfaces/OpalInterface.C	/^OpalInterface *OpalInterface::inst = NULL;$/;"	m	class:OpalInterface	file:
inst	interfaces/OpalInterface.h	/^  static OpalInterface *inst;$/;"	m	class:OpalInterface
installInterface	interfaces/OpalInterface.C	/^void OpalInterface::installInterface( mf_ruby_api_t *api ) {$/;"	f	class:OpalInterface
int32	common/Global.h	/^typedef int int32;$/;"	t
int64	common/Global.h	/^typedef long long int64;$/;"	t
int8	common/Global.h	/^typedef signed char int8;$/;"	t
intToAddress	slicc_interface/RubySlicc_Util.h	/^extern inline Address intToAddress(int addr)$/;"	f
intToID	slicc_interface/RubySlicc_Util.h	/^extern inline NodeID intToID(int nodenum)$/;"	f
int_to_MessageSizeType	network/Network.h	/^MessageSizeType int_to_MessageSizeType(int size) {$/;"	f
int_to_time	slicc_interface/RubySlicc_Util.h	/^extern inline Time int_to_time(int time)$/;"	f
integer_t	common/Global.h	/^typedef long long integer_t;$/;"	t
integer_t	simics/simics_api_dummy.c	/^typedef int integer_t;$/;"	t	file:
interface_t	simics/simics_api_dummy.c	/^typedef int interface_t;$/;"	t	file:
internalMergeFrom	common/SubBlock.C	/^void SubBlock::internalMergeFrom(const DataBlock& data)$/;"	f	class:SubBlock
internalMergeTo	common/SubBlock.C	/^void SubBlock::internalMergeTo(DataBlock& data) const$/;"	f	class:SubBlock
intersectionIsEmpty	common/BigSet.C	/^bool Set::intersectionIsEmpty(const Set& other_set) const$/;"	f	class:Set
intersectionIsEmpty	common/OptBigSet.h	/^  inline bool intersectionIsEmpty(const Set& other_set) const$/;"	f	class:Set
intersectionIsEmpty	common/Set.C	/^bool Set::intersectionIsEmpty(const Set& other_set) const$/;"	f	class:Set
intersectionIsNotEmpty	common/BigSet.C	/^bool Set::intersectionIsNotEmpty(const Set& other_set) const$/;"	f	class:Set
intersectionIsNotEmpty	common/NetDest.C	/^bool NetDest::intersectionIsNotEmpty(const NetDest& other_netDest) const$/;"	f	class:NetDest
intersectionIsNotEmpty	common/OptBigSet.h	/^  inline bool intersectionIsNotEmpty(const Set& other_set) const$/;"	f	class:Set
intersectionIsNotEmpty	common/Set.C	/^bool Set::intersectionIsNotEmpty(const Set& other_set) const$/;"	f	class:Set
invCap	network/orion/SIM_technology_v1.h	318;"	d
invCap	network/orion/SIM_technology_v2.h	151;"	d
invCap	network/orion/SIM_technology_v2.h	483;"	d
io_class	network/orion/SIM_router.h	/^	u_int io_class;$/;"	m	struct:__anon48
io_in_arb	network/orion/SIM_router.h	/^	SIM_arbiter_t io_in_arb;$/;"	m	struct:__anon47
io_in_arb_queue_info	network/orion/SIM_router.h	/^	SIM_array_info_t io_in_arb_queue_info;$/;"	m	struct:__anon48
io_in_buf	network/orion/SIM_router.h	/^	SIM_array_t io_in_buf;$/;"	m	struct:__anon47
io_in_buf	network/orion/SIM_router.h	/^	int io_in_buf;$/;"	m	struct:__anon48
io_in_buf_info	network/orion/SIM_router.h	/^	SIM_array_info_t io_in_buf_info;$/;"	m	struct:__anon48
io_n_switch	network/orion/SIM_router.h	/^	u_int io_n_switch;$/;"	m	struct:__anon48
ireg_t	simics/simics_api_dummy.c	/^typedef int ireg_t;$/;"	t	file:
isAddrReady	tester/DeterministicDriver.C	/^bool DeterministicDriver::isAddrReady(NodeID node, Vector<NodeID> addr_vector)$/;"	f	class:DeterministicDriver
isAddrReady	tester/DeterministicDriver.C	/^bool DeterministicDriver::isAddrReady(NodeID node, Vector<NodeID> addr_vector, Address addr)$/;"	f	class:DeterministicDriver
isBlockExclusive	generated/MI_example/Chip.C	/^bool Chip::isBlockExclusive(const Address& addr) const$/;"	f	class:Chip
isBlockExclusive	slicc_interface/AbstractChip.h	/^  virtual bool isBlockExclusive(const Address& addr) const { return false; }$/;"	f	class:AbstractChip
isBlockShared	generated/MI_example/Chip.C	/^bool Chip::isBlockShared(const Address& addr) const$/;"	f	class:Chip
isBlockShared	slicc_interface/AbstractChip.h	/^  virtual bool isBlockShared(const Address& addr) const { return false; }$/;"	f	class:AbstractChip
isBroadcast	common/BigSet.C	/^bool Set::isBroadcast() const$/;"	f	class:Set
isBroadcast	common/NetDest.C	/^bool NetDest::isBroadcast() const$/;"	f	class:NetDest
isBroadcast	common/OptBigSet.C	/^bool Set::isBroadcast() const$/;"	f	class:Set
isBroadcast	common/Set.C	/^bool Set::isBroadcast() const$/;"	f	class:Set
isBufferNotFull	network/garnet-flexible-pipeline/FlexibleConsumer.h	/^	virtual bool isBufferNotFull(int vc, int inport) {return true;}$/;"	f	class:FlexibleConsumer
isBufferNotFull	network/garnet-flexible-pipeline/NetworkInterface.h	/^	bool isBufferNotFull(int vc, int inport)$/;"	f	class:NetworkInterface
isBufferNotFull	network/garnet-flexible-pipeline/Router.C	/^bool Router::isBufferNotFull(int vc, int inport)$/;"	f	class:Router
isBufferNotFull_link	network/garnet-flexible-pipeline/NetworkLink.C	/^bool NetworkLink::isBufferNotFull_link(int vc)$/;"	f	class:NetworkLink
isBusy	system/PersistentArbiter.C	/^bool PersistentArbiter::isBusy() {$/;"	f	class:PersistentArbiter
isDetailNetwork	network/garnet-flexible-pipeline/NetworkConfig.h	/^		static bool isDetailNetwork() {return g_DETAIL_NETWORK; }$/;"	f	class:NetworkConfig
isElement	common/BigSet.C	/^bool Set::isElement(NodeID element) const$/;"	f	class:Set
isElement	common/NetDest.C	/^bool NetDest::isElement(MachineID element) const$/;"	f	class:NetDest
isElement	common/OptBigSet.h	/^  inline bool isElement(NodeID element) const$/;"	f	class:Set
isElement	common/Set.C	/^bool Set::isElement(NodeID element) const$/;"	f	class:Set
isEmpty	buffers/MessageBuffer.h	/^  bool isEmpty() const { return m_prio_heap.size() == 0; }$/;"	f	class:MessageBuffer
isEmpty	common/BigSet.C	/^bool Set::isEmpty() const$/;"	f	class:Set
isEmpty	common/NetDest.C	/^bool NetDest::isEmpty() const$/;"	f	class:NetDest
isEmpty	common/OptBigSet.C	/^bool Set::isEmpty() const$/;"	f	class:Set
isEmpty	common/Set.C	/^bool Set::isEmpty() const$/;"	f	class:Set
isEmpty	eventqueue/EventQueue.C	/^bool EventQueue::isEmpty() const $/;"	f	class:EventQueue
isEmpty	network/garnet-fixed-pipeline/flitBuffer_d.C	/^bool flitBuffer_d::isEmpty()$/;"	f	class:flitBuffer_d
isEmpty	network/garnet-flexible-pipeline/flitBuffer.C	/^bool flitBuffer::isEmpty()$/;"	f	class:flitBuffer
isEmpty	system/StoreBuffer.h	/^  bool isEmpty() const { return (m_size == 0); }$/;"	f	class:StoreBuffer
isEmpty	system/StoreCache.C	/^bool StoreCache::isEmpty() const$/;"	f	class:StoreCache
isEqual	common/BigSet.C	/^bool Set::isEqual(const Set& set) const$/;"	f	class:Set
isEqual	common/OptBigSet.C	/^bool Set::isEqual(const Set& set) const$/;"	f	class:Set
isEqual	common/Set.C	/^bool Set::isEqual(const Set& set)$/;"	f	class:Set
isFull	network/garnet-fixed-pipeline/flitBuffer_d.C	/^bool flitBuffer_d::isFull() $/;"	f	class:flitBuffer_d
isFull	network/garnet-flexible-pipeline/flitBuffer.C	/^bool flitBuffer::isFull() $/;"	f	class:flitBuffer
isGarnetNetwork	network/garnet-flexible-pipeline/NetworkConfig.h	/^		static bool isGarnetNetwork() {return g_GARNET_NETWORK; }$/;"	f	class:NetworkConfig
isInState	network/garnet-fixed-pipeline/OutVcState_d.h	/^	inline bool isInState(VC_state_type state, Time request_time)$/;"	f	class:OutVcState_d
isInState	network/garnet-flexible-pipeline/InVcState.C	/^bool InVcState::isInState(VC_state_type state, Time request_time)$/;"	f	class:InVcState
isInState	network/garnet-flexible-pipeline/OutVcState.C	/^bool OutVcState::isInState(VC_state_type state, Time request_time)$/;"	f	class:OutVcState
isIssuedAddress	system/PersistentArbiter.C	/^bool PersistentArbiter::isIssuedAddress(Address addr) {$/;"	f	class:PersistentArbiter
isL1OnChip	slicc_interface/RubySlicc_ComponentMapping.h	/^bool isL1OnChip(MachineID L1machID, NodeID L2NodeID)$/;"	f
isL2OnChip	slicc_interface/RubySlicc_ComponentMapping.h	/^bool isL2OnChip(MachineID L2machID, NodeID L2NodeID)$/;"	f
isLoadReady	tester/DeterministicDriver.C	/^bool DeterministicDriver::isLoadReady(NodeID node)$/;"	f	class:DeterministicDriver
isLoadReady	tester/DeterministicDriver.C	/^bool DeterministicDriver::isLoadReady(NodeID node, Address addr)$/;"	f	class:DeterministicDriver
isLocalProcessor	slicc_interface/RubySlicc_ComponentMapping.h	/^bool isLocalProcessor(MachineID thisId, MachineID tarID) $/;"	f
isLocked	system/NodePersistentTable.C	/^bool NodePersistentTable::isLocked(const Address& address) const$/;"	f	class:NodePersistentTable
isLocked	system/PersistentTable.C	/^bool PersistentTable::isLocked(const Address& address) const$/;"	f	class:PersistentTable
isNetworkTesting	network/garnet-flexible-pipeline/NetworkConfig.h	/^		static int isNetworkTesting() {return g_NETWORK_TESTING; }$/;"	f	class:NetworkConfig
isOpalLoaded	interfaces/OpalInterface.C	/^bool OpalInterface::isOpalLoaded( void ) {$/;"	f	class:OpalInterface
isParallel	system/H3BloomFilter.h	/^  bool isParallel;$/;"	m	class:H3BloomFilter
isParallel	system/MultiBitSelBloomFilter.h	/^  bool isParallel;$/;"	m	class:MultiBitSelBloomFilter
isPresent	system/DirectoryMemory.C	/^bool DirectoryMemory::isPresent(PhysAddress address)$/;"	f	class:DirectoryMemory
isPresent	system/TBETable.h	/^bool TBETable<ENTRY>::isPresent(const Address& address) const$/;"	f	class:TBETable
isReady	buffers/MessageBuffer.h	/^  bool isReady() const { $/;"	f	class:MessageBuffer
isReady	gpusim_ruby/gpusim_ruby.C	/^int gpusim_ruby::isReady( unsigned long long addr, unsigned req_size, unsigned sid, unsigned tid, $/;"	f	class:gpusim_ruby
isReady	interfaces/GpusimInterface.C	/^int  GpusimInterface::isReady( unsigned long long addr, unsigned req_size, unsigned sid, unsigned tid, CacheRequestType req_type, MemorySpaceType space)$/;"	f	class:GpusimInterface
isReady	interfaces/OpalInterface.C	/^int  OpalInterface::isReady( int cpuNumber, la_t logicalAddr, pa_t physicalAddr, OpalMemop_t typeOfRequest, int thread ) {$/;"	f	class:OpalInterface
isReady	interfaces/mf_api.h	/^  int  (*isReady)( int cpuNumber, la_t logicalAddr, pa_t physicalAddr, OpalMemop_t typeOfRequest, int thread );$/;"	m	struct:mf_ruby_api
isReady	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline bool isReady(int invc)$/;"	f	class:InputUnit_d
isReady	network/garnet-fixed-pipeline/NetworkLink_d.h	/^	inline bool isReady()$/;"	f	class:NetworkLink_d
isReady	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	inline bool isReady() $/;"	f	class:VirtualChannel_d
isReady	network/garnet-fixed-pipeline/flitBuffer_d.C	/^bool flitBuffer_d::isReady()$/;"	f	class:flitBuffer_d
isReady	network/garnet-flexible-pipeline/NetworkLink.C	/^bool NetworkLink::isReady()$/;"	f	class:NetworkLink
isReady	network/garnet-flexible-pipeline/flitBuffer.C	/^bool flitBuffer::isReady()$/;"	f	class:flitBuffer
isReady	system/GpusimDramInterface.C	/^bool GpusimDramInterface::isReady () {$/;"	f	class:GpusimDramInterface
isReady	system/MemoryControl.C	/^bool MemoryControl::isReady () {$/;"	f	class:MemoryControl
isReady	system/Sequencer.C	/^bool Sequencer::isReady(const CacheMsg& request) const {$/;"	f	class:Sequencer
isReady	system/StoreBuffer.C	/^bool StoreBuffer::isReady() const$/;"	f	class:StoreBuffer
isReady	system/TimerTable.C	/^bool TimerTable::isReady() const$/;"	f	class:TimerTable
isReadyForNext	network/garnet-fixed-pipeline/flitBuffer_d.C	/^bool flitBuffer_d::isReadyForNext()$/;"	f	class:flitBuffer_d
isReadyForNext	network/garnet-flexible-pipeline/flitBuffer.C	/^bool flitBuffer::isReadyForNext()$/;"	f	class:flitBuffer
isSet	system/BlockBloomFilter.C	/^bool BlockBloomFilter::isSet(const Address& addr) $/;"	f	class:BlockBloomFilter
isSet	system/BulkBloomFilter.C	/^bool BulkBloomFilter::isSet(const Address& addr) $/;"	f	class:BulkBloomFilter
isSet	system/GenericBloomFilter.C	/^bool GenericBloomFilter::isSet(const Address& addr) $/;"	f	class:GenericBloomFilter
isSet	system/H3BloomFilter.C	/^bool H3BloomFilter::isSet(const Address& addr)$/;"	f	class:H3BloomFilter
isSet	system/LSB_CountingBloomFilter.C	/^bool LSB_CountingBloomFilter::isSet(const Address& addr) $/;"	f	class:LSB_CountingBloomFilter
isSet	system/MultiBitSelBloomFilter.C	/^bool MultiBitSelBloomFilter::isSet(const Address& addr)$/;"	f	class:MultiBitSelBloomFilter
isSet	system/MultiGrainBloomFilter.C	/^bool MultiGrainBloomFilter::isSet(const Address& addr) $/;"	f	class:MultiGrainBloomFilter
isSet	system/NonCountingBloomFilter.C	/^bool NonCountingBloomFilter::isSet(const Address& addr) $/;"	f	class:NonCountingBloomFilter
isSet	system/TimerTable.h	/^  bool isSet(const Address& address) const { return m_map.exist(address); }$/;"	f	class:TimerTable
isStoreReady	tester/DeterministicDriver.C	/^bool DeterministicDriver::isStoreReady(NodeID node)$/;"	f	class:DeterministicDriver
isStoreReady	tester/DeterministicDriver.C	/^bool DeterministicDriver::isStoreReady(NodeID node, Address addr)$/;"	f	class:DeterministicDriver
isSubset	common/BigSet.h	/^  bool isSubset(const Set& test) const { return test.isSuperset(*this); }$/;"	f	class:Set
isSubset	common/NetDest.h	/^  bool isSubset(const NetDest& test) const { return test.isSuperset(*this); }$/;"	f	class:NetDest
isSubset	common/OptBigSet.h	/^  bool isSubset(const Set& test) const { return test.isSuperset(*this); }$/;"	f	class:Set
isSubset	common/Set.h	/^  bool isSubset(const Set& test) const { return test.isSuperset(*this); }$/;"	f	class:Set
isSuperset	common/BigSet.C	/^bool Set::isSuperset(const Set& test) const$/;"	f	class:Set
isSuperset	common/NetDest.C	/^bool NetDest::isSuperset(const NetDest& test) const$/;"	f	class:NetDest
isSuperset	common/OptBigSet.C	/^bool Set::isSuperset(const Set& test) const$/;"	f	class:Set
isSuperset	common/Set.C	/^bool Set::isSuperset(const Set& test) const$/;"	f	class:Set
isTagPresent	system/CacheMemory.h	/^bool CacheMemory<ENTRY>::isTagPresent(const Address& address) const$/;"	f	class:CacheMemory
isTagPresent	system/PerfectCacheMemory.h	/^bool PerfectCacheMemory<ENTRY>::isTagPresent(const Address& address) const$/;"	f	class:PerfectCacheMemory
isUnhandledTransaction	simics/depreceated/SimicsDriver.C	/^bool SimicsDriver::isUnhandledTransaction(memory_transaction_t* mem_trans) {$/;"	f	class:SimicsDriver
isVNetOrdered	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^ 	bool isVNetOrdered(int vnet) $/;"	f	class:GarnetNetwork_d
isVNetOrdered	network/garnet-flexible-pipeline/GarnetNetwork.h	/^ 	bool isVNetOrdered(int vnet) { return m_ordered[vnet]; }$/;"	f	class:GarnetNetwork
isVNetOrdered	network/simple/SimpleNetwork.h	/^  bool isVNetOrdered(int vnet) { return m_ordered[vnet]; }$/;"	f	class:SimpleNetwork
is_candidate_inport	network/garnet-fixed-pipeline/SWallocator_d.C	/^bool SWallocator_d::is_candidate_inport(int inport, int invc)$/;"	f	class:SWallocator_d
is_flip	network/orion/SIM_permu.h	45;"	d
is_free_signal	network/garnet-fixed-pipeline/flit_d.h	/^	bool is_free_signal()$/;"	f	class:flit_d
is_invc_candidate	network/garnet-fixed-pipeline/VCallocator_d.C	/^bool VCallocator_d::is_invc_candidate(int inport_iter, int invc_iter)$/;"	f	class:VCallocator_d
is_logic	network/orion/SIM_ALU.c	41;"	d	file:
is_next_stage	network/garnet-fixed-pipeline/flit_d.h	/^	inline bool is_next_stage(flit_stage t_stage)$/;"	f	class:flit_d
is_omega	network/orion/SIM_permu.h	44;"	d
is_pred_Addrfixed	slicc_interface/RubySlicc_TCpredictor_interface.C	/^bool is_pred_Addrfixed() {$/;"	f
is_pred_PCfixed	slicc_interface/RubySlicc_TCpredictor_interface.C	/^bool is_pred_PCfixed() {$/;"	f
is_pred_fixed	slicc_interface/RubySlicc_TCpredictor_interface.C	/^bool is_pred_fixed() {$/;"	f
is_pred_global	slicc_interface/RubySlicc_TCpredictor_interface.C	/^bool is_pred_global() {$/;"	f
is_pred_oracle	slicc_interface/RubySlicc_TCpredictor_interface.C	/^bool is_pred_oracle() {$/;"	f
is_pred_pcadaptive	slicc_interface/RubySlicc_TCpredictor_interface.C	/^bool is_pred_pcadaptive() {$/;"	f
is_pred_pcsampler	slicc_interface/RubySlicc_TCpredictor_interface.C	/^bool is_pred_pcsampler() {$/;"	f
is_pred_perL2	slicc_interface/RubySlicc_TCpredictor_interface.C	/^bool is_pred_perL2() {$/;"	f
is_rw_bitline	network/orion/SIM_array_l.c	/^static int is_rw_bitline( int model )$/;"	f	file:
is_rw_bitline	network/orion_old/power_array.C	/^static int is_rw_bitline( int model )$/;"	f	file:
is_stage	network/garnet-fixed-pipeline/flit_d.h	/^	inline bool is_stage(flit_stage t_stage)$/;"	f	class:flit_d
is_vc_idle	network/garnet-fixed-pipeline/OutputUnit_d.h	/^	inline bool is_vc_idle(int vc)$/;"	f	class:OutputUnit_d
issueRefresh	system/MemoryControl.C	/^bool MemoryControl::issueRefresh (int bank) {$/;"	f	class:MemoryControl
issueRequest	recorder/TraceRecord.C	/^void TraceRecord::issueRequest() const$/;"	f	class:TraceRecord
issueRequest	system/MemoryControl.C	/^void MemoryControl::issueRequest (int bank) {$/;"	f	class:MemoryControl
issueRequest	system/Sequencer.C	/^void Sequencer::issueRequest(const CacheMsg& request) {$/;"	f	class:Sequencer
issueSkipL1Request	system/Sequencer.C	/^void Sequencer::issueSkipL1Request(const CacheMsg& request) {$/;"	f	class:Sequencer
item_width	network/orion/SIM_array_internal.h	/^	u_int item_width;$/;"	m	struct:__anon21
item_width	network/orion_old/power_array.h	/^	unsigned item_width;$/;"	m	struct:__anon75
j_popIncomingUnblockQueue	generated/MI_example/Directory_Controller.C	/^void Directory_Controller::j_popIncomingUnblockQueue(const Address& addr)$/;"	f	class:Directory_Controller
joinThread	tester/RaceyDriver.C	/^void RaceyDriver::joinThread()$/;"	f	class:RaceyDriver
krise	network/orion/SIM_technology_v1.h	178;"	d
krise	network/orion/SIM_technology_v2.h	430;"	d
krise	network/orion/SIM_technology_v2.h	762;"	d
krise	network/orion_old/SIM_power.h	238;"	d
krise	network/orion_old/parm_technology.h	415;"	d
l2evict	system/TCpredictor.C	/^void TCpredictorPCAdaptive::l2evict(IntPairSet pcsharers) {$/;"	f	class:TCpredictorPCAdaptive
l_d1	network/orion/SIM_ALU.h	/^	LIB_Type_max_uint l_d1;$/;"	m	struct:__anon4
l_d2	network/orion/SIM_ALU.h	/^	LIB_Type_max_uint l_d2;$/;"	m	struct:__anon4
l_writeDataToMemory	generated/MI_example/Directory_Controller.C	/^void Directory_Controller::l_writeDataToMemory(const Address& addr)$/;"	f	class:Directory_Controller
la_t	common/Global.h	/^typedef uint64 la_t;$/;"	t
la_t	interfaces/mf_api.h	/^typedef physical_address_t la_t;$/;"	t
la_t	simics/simics_api_dummy.c	/^typedef int la_t;$/;"	t	file:
lang_void	simics/simics_api_dummy.c	/^typedef int lang_void;$/;"	t	file:
last_nonopt	tester/getopt.C	/^static int last_nonopt;$/;"	v	file:
lifetimeTrace_atomic	slicc_interface/RubySlicc_LifetimeTrace_interface.C	/^void lifetimeTrace_atomic(Time current_time, int address, NodeID core_id) {$/;"	f
lifetimeTrace_enabled	slicc_interface/RubySlicc_LifetimeTrace_interface.C	/^bool lifetimeTrace_enabled() {$/;"	f
lifetimeTrace_l2evict	slicc_interface/RubySlicc_LifetimeTrace_interface.C	/^void lifetimeTrace_l2evict(Time current_time, int address) {$/;"	f
lifetimeTrace_lease	slicc_interface/RubySlicc_LifetimeTrace_interface.C	/^void lifetimeTrace_lease(Time access_time, int address, NodeID core_id, int pc, Time lifetime) {$/;"	f
lifetimeTrace_read	slicc_interface/RubySlicc_LifetimeTrace_interface.C	/^void lifetimeTrace_read(Time access_time, int address, NodeID core_id, int pc) {$/;"	f
lifetimeTrace_write	slicc_interface/RubySlicc_LifetimeTrace_interface.C	/^void lifetimeTrace_write(Time current_time, int address, NodeID core_id) {$/;"	f
lin	network/orion/SIM_permu.h	/^	u_int lin[N_ONEHOT];$/;"	m	struct:__anon41
line_address	common/Address.h	/^Address line_address(const Address& addr) { Address temp(addr); temp.makeLineAddress(); return temp; }$/;"	f
linenum	generated/MI_example/attrlex.c	/^static int linenum=1;          \/* the current line number *\/$/;"	v	file:
linkBuffer	network/garnet-fixed-pipeline/NetworkLink_d.h	/^	flitBuffer_d *linkBuffer;$/;"	m	class:NetworkLink_d
linkBuffer	network/garnet-flexible-pipeline/NetworkLink.h	/^	flitBuffer *linkBuffer;$/;"	m	class:NetworkLink
linkUtilized	network/simple/Throttle.h	/^  void linkUtilized(double ratio) { m_links_utilized += ratio; }$/;"	f	class:Throttle
link_consumer	network/garnet-fixed-pipeline/NetworkLink_d.h	/^	Consumer *link_consumer;	$/;"	m	class:NetworkLink_d
link_consumer	network/garnet-flexible-pipeline/NetworkLink.h	/^	FlexibleConsumer *link_consumer;$/;"	m	class:NetworkLink
link_is_shortest_path_to_node	network/simple/Topology.C	/^static bool link_is_shortest_path_to_node(SwitchID src, SwitchID next, SwitchID final, $/;"	f	file:
link_source	network/garnet-flexible-pipeline/NetworkLink.h	/^	FlexibleConsumer *link_source;$/;"	m	class:NetworkLink
link_srcQueue	network/garnet-fixed-pipeline/NetworkLink_d.h	/^	flitBuffer_d *link_srcQueue;$/;"	m	class:NetworkLink_d
link_srcQueue	network/garnet-flexible-pipeline/NetworkLink.h	/^	flitBuffer *link_srcQueue;$/;"	m	class:NetworkLink
loadCPUStates	tester/RaceyDriver.h	/^  void loadCPUStates(int cpu_id, string filename) {$/;"	f	class:RaceyDriver
loadCompleted	tester/DeterministicDriver.C	/^void DeterministicDriver::loadCompleted(NodeID node, Address addr)$/;"	f	class:DeterministicDriver
loading	network/orion_old/power_router_init.h	/^}loading;$/;"	t	typeref:enum:__anon88
localId	system/PersistentArbiter.h	/^  NodeID localId;$/;"	m	struct:ArbiterEntry
local_memory_transaction_t_shadow	simics/depreceated/commands.C	/^memory_transaction_t local_memory_transaction_t_shadow;$/;"	v
lockersExist	system/PersistentArbiter.C	/^bool PersistentArbiter::lockersExist() {$/;"	f	class:PersistentArbiter
log_object	simics/simics_api_dummy.c	/^typedef int log_object;$/;"	t	file:
logical_address_t	simics/simics_api_dummy.c	/^typedef int logical_address_t;$/;"	t	file:
logtwo	network/orion/SIM_time.c	/^static double logtwo(double x)$/;"	f	file:
logtwo	network/orion_old/power_utils.C	/^double logtwo(double x)$/;"	f
long_enough_ago	slicc_interface/RubySlicc_Util.h	/^extern inline bool long_enough_ago(Time event)$/;"	f
long_options	tester/test_framework.C	/^static struct option const long_options[] =$/;"	v	file:
lookup	system/CacheMemory.h	/^ENTRY& CacheMemory<ENTRY>::lookup(const Address& address)$/;"	f	class:CacheMemory
lookup	system/CacheMemory.h	/^const ENTRY& CacheMemory<ENTRY>::lookup(const Address& address) const$/;"	f	class:CacheMemory
lookup	system/DirectoryMemory.C	/^Directory_Entry& DirectoryMemory::lookup(PhysAddress address)$/;"	f	class:DirectoryMemory
lookup	system/PerfectCacheMemory.h	/^ENTRY& PerfectCacheMemory<ENTRY>::lookup(const Address& address)$/;"	f	class:PerfectCacheMemory
lookup	system/PerfectCacheMemory.h	/^const ENTRY& PerfectCacheMemory<ENTRY>::lookup(const Address& address) const$/;"	f	class:PerfectCacheMemory
lookup	system/TBETable.h	/^ENTRY& TBETable<ENTRY>::lookup(const Address& address)$/;"	f	class:TBETable
lookup	system/TBETable.h	/^const ENTRY& TBETable<ENTRY>::lookup(const Address& address) const$/;"	f	class:TBETable
lookupRequest	simics/depreceated/SimicsProcessor.C	/^int SimicsProcessor::lookupRequest(Address addr, CacheRequestType type, int size) {$/;"	f	class:SimicsProcessor
lookupTraceForAddress	profiler/AddressProfiler.C	/^static AccessTraceForAddress& lookupTraceForAddress(const Address& addr, Map<Address, AccessTraceForAddress>* record_map)$/;"	f	file:
m_AccessMask	generated/MI_example/CacheMsg.h	/^  ruby_mem_access_byte_mask_t m_AccessMask; \/**< which bytes are being accessed?*\/$/;"	m	class:CacheMsg
m_AccessMode	generated/MI_example/CacheMsg.h	/^  AccessModeType m_AccessMode; \/**< user\/supervisor access type*\/$/;"	m	class:CacheMsg
m_Acks	generated/MI_example/MemoryMsg.h	/^  int m_Acks; \/**< How many acks to expect*\/$/;"	m	class:MemoryMsg
m_Acks	generated/MI_example/RequestMsg.h	/^  int m_Acks; \/**< How many acks to expect*\/$/;"	m	class:RequestMsg
m_Acks	generated/MI_example/ResponseMsg.h	/^  int m_Acks; \/**< How many acks to expect*\/$/;"	m	class:ResponseMsg
m_Address	generated/MI_example/CacheMsg.h	/^  Address m_Address; \/**< Line address for this request*\/$/;"	m	class:CacheMsg
m_Address	generated/MI_example/MemoryMsg.h	/^  Address m_Address; \/**< Physical address for this request*\/$/;"	m	class:MemoryMsg
m_Address	generated/MI_example/RequestMsg.h	/^  Address m_Address; \/**< Physical address for this request*\/$/;"	m	class:RequestMsg
m_Address	generated/MI_example/ResponseMsg.h	/^  Address m_Address; \/**< Physical address for this request*\/$/;"	m	class:ResponseMsg
m_Address	generated/MI_example/TriggerMsg.h	/^  Address m_Address; \/**< Physical address for this request*\/$/;"	m	class:TriggerMsg
m_Address	slicc_interface/AbstractCacheEntry.h	/^  Address m_Address; \/\/ Address of this block, required by CacheMemory$/;"	m	class:AbstractCacheEntry
m_CMP	gpusim_ruby/gpusim_ruby.h	/^    bool m_CMP;$/;"	m	struct:gpusim_ruby_config
m_CMP	slicc_interface/AbstractProtocol.h	/^  static const  bool m_CMP = false ;$/;"	m	class:AbstractProtocol
m_CacheState	generated/MI_example/L1Cache_Entry.h	/^  L1Cache_State m_CacheState; \/**< cache state*\/$/;"	m	class:L1Cache_Entry
m_DataBlk	generated/MI_example/Directory_Entry.h	/^  DataBlock m_DataBlk; \/**< data for the block*\/$/;"	m	class:Directory_Entry
m_DataBlk	generated/MI_example/L1Cache_Entry.h	/^  DataBlock m_DataBlk; \/**< data for the block*\/$/;"	m	class:L1Cache_Entry
m_DataBlk	generated/MI_example/L1Cache_TBE.h	/^  DataBlock m_DataBlk; \/**< data for the block, required for concurrent writebacks*\/$/;"	m	class:L1Cache_TBE
m_DataBlk	generated/MI_example/MemoryMsg.h	/^  DataBlock m_DataBlk; \/**< Data to writeback*\/$/;"	m	class:MemoryMsg
m_DataBlk	generated/MI_example/RequestMsg.h	/^  DataBlock m_DataBlk; \/**< data for the cache line*\/$/;"	m	class:RequestMsg
m_DataBlk	generated/MI_example/ResponseMsg.h	/^  DataBlock m_DataBlk; \/**< data for the cache line*\/$/;"	m	class:ResponseMsg
m_DelayedCycles	slicc_interface/Message.h	/^  int m_DelayedCycles; \/\/ my delayed cycles$/;"	m	class:Message
m_Destination	generated/MI_example/RequestMsg.h	/^  NetDest m_Destination; \/**< Multicast destination mask*\/$/;"	m	class:RequestMsg
m_Destination	generated/MI_example/ResponseMsg.h	/^  NetDest m_Destination; \/**< Node to whom the data is sent*\/$/;"	m	class:ResponseMsg
m_DirectoryState	generated/MI_example/Directory_Entry.h	/^  Directory_State m_DirectoryState; \/**< Directory state*\/$/;"	m	class:Directory_Entry
m_Directory_Controller_vec	generated/MI_example/Chip.h	/^  Vector < Directory_Controller* > m_Directory_Controller_vec;$/;"	m	class:Chip
m_Directory_GpusimDramBuffer_vec	slicc_interface/AbstractChip.h	/^  Vector < GpusimDramInterface* >m_Directory_GpusimDramBuffer_vec;$/;"	m	class:AbstractChip
m_Directory_directory_vec	generated/MI_example/Chip.h	/^  Vector < DirectoryMemory* >  m_Directory_directory_vec;$/;"	m	class:Chip
m_Directory_forwardFromDir_vec	generated/MI_example/Chip.h	/^  Vector < MessageBuffer* >  m_Directory_forwardFromDir_vec;$/;"	m	class:Chip
m_Directory_requestToDir_vec	generated/MI_example/Chip.h	/^  Vector < MessageBuffer* >  m_Directory_requestToDir_vec;$/;"	m	class:Chip
m_Directory_responseFromDir_vec	generated/MI_example/Chip.h	/^  Vector < MessageBuffer* >  m_Directory_responseFromDir_vec;$/;"	m	class:Chip
m_Directory_unblockToDir_vec	generated/MI_example/Chip.h	/^  Vector < MessageBuffer* >  m_Directory_unblockToDir_vec;$/;"	m	class:Chip
m_Dirty	generated/MI_example/L1Cache_Entry.h	/^  bool m_Dirty; \/**< Is the data dirty (different than memory)?*\/$/;"	m	class:L1Cache_Entry
m_Dirty	generated/MI_example/ResponseMsg.h	/^  bool m_Dirty; \/**< Is the data dirty (different than memory)?*\/$/;"	m	class:ResponseMsg
m_ExposedAction	generated/MI_example/CacheMsg.h	/^  bool m_ExposedAction; \/**< Is this request part of an exposed action*\/$/;"	m	class:CacheMsg
m_L1Cache_Controller_vec	generated/MI_example/Chip.h	/^  Vector < L1Cache_Controller* > m_L1Cache_Controller_vec;$/;"	m	class:Chip
m_L1Cache_L1DcacheMemory_vec	slicc_interface/AbstractChip.h	/^  Vector < CacheMemory<L1Cache_Entry>* > m_L1Cache_L1DcacheMemory_vec;$/;"	m	class:AbstractChip
m_L1Cache_L1IcacheMemory_vec	slicc_interface/AbstractChip.h	/^  Vector < CacheMemory<L1Cache_Entry>* > m_L1Cache_L1IcacheMemory_vec;$/;"	m	class:AbstractChip
m_L1Cache_L2cacheMemory_vec	slicc_interface/AbstractChip.h	/^  Vector < CacheMemory<L1Cache_Entry>* > m_L1Cache_L2cacheMemory_vec;$/;"	m	class:AbstractChip
m_L1Cache_TBEs_vec	generated/MI_example/Chip.h	/^  Vector < TBETable<L1Cache_TBE>* >  m_L1Cache_TBEs_vec;$/;"	m	class:Chip
m_L1Cache_cacheMemory_vec	slicc_interface/AbstractChip.h	/^  Vector < CacheMemory<L1Cache_Entry>* > m_L1Cache_cacheMemory_vec;$/;"	m	class:AbstractChip
m_L1Cache_forwardToCache_vec	generated/MI_example/Chip.h	/^  Vector < MessageBuffer* >  m_L1Cache_forwardToCache_vec;$/;"	m	class:Chip
m_L1Cache_idealInvQueue_vec	slicc_interface/AbstractChip.h	/^  Vector < MessageBuffer* > m_L1Cache_idealInvQueue_vec;        \/\/ queue for ideal invalidations$/;"	m	class:AbstractChip
m_L1Cache_mandatoryQueue_vec	slicc_interface/AbstractChip.h	/^  Vector < MessageBuffer* >m_L1Cache_mandatoryQueue_vec;$/;"	m	class:AbstractChip
m_L1Cache_requestFromCache_vec	generated/MI_example/Chip.h	/^  Vector < MessageBuffer* >  m_L1Cache_requestFromCache_vec;$/;"	m	class:Chip
m_L1Cache_responseFromCache_vec	generated/MI_example/Chip.h	/^  Vector < MessageBuffer* >  m_L1Cache_responseFromCache_vec;$/;"	m	class:Chip
m_L1Cache_responseToCache_vec	generated/MI_example/Chip.h	/^  Vector < MessageBuffer* >  m_L1Cache_responseToCache_vec;$/;"	m	class:Chip
m_L1Cache_sequencer_vec	slicc_interface/AbstractChip.h	/^  Vector < Sequencer* >  m_L1Cache_sequencer_vec; \/\/ All chip should have a sequencer$/;"	m	class:AbstractChip
m_L1Cache_storeBuffer_vec	slicc_interface/AbstractChip.h	/^  Vector < StoreBuffer* > m_L1Cache_storeBuffer_vec;$/;"	m	class:AbstractChip
m_L1D_cache_profiler_ptr	profiler/Profiler.h	/^  CacheProfiler* m_L1D_cache_profiler_ptr;$/;"	m	class:Profiler
m_L1I_cache_profiler_ptr	profiler/Profiler.h	/^  CacheProfiler* m_L1I_cache_profiler_ptr;$/;"	m	class:Profiler
m_L1tbeProfile	profiler/Profiler.h	/^  Histogram m_L1tbeProfile;$/;"	m	class:Profiler
m_L2Cache_GpusimDramBuffer_vec	slicc_interface/AbstractChip.h	/^  Vector < GpusimDramInterface* >m_L2Cache_GpusimDramBuffer_vec;$/;"	m	class:AbstractChip
m_L2Cache_L2cacheMemory_vec	slicc_interface/AbstractChip.h	/^  Vector < CacheMemory<L1Cache_Entry>* > m_L2Cache_L2cacheMemory_vec;$/;"	m	class:AbstractChip
m_L2MissLatencyHistogram	profiler/Profiler.h	/^  Histogram m_L2MissLatencyHistogram;$/;"	m	class:Profiler
m_L2_cache_profiler_ptr	profiler/Profiler.h	/^  CacheProfiler* m_L2_cache_profiler_ptr;$/;"	m	class:Profiler
m_L2tbeProfile	profiler/Profiler.h	/^  Histogram m_L2tbeProfile;$/;"	m	class:Profiler
m_LastEnqueueTime	slicc_interface/Message.h	/^  Time m_LastEnqueueTime; \/\/ my last enqueue time$/;"	m	class:Message
m_LastRef	slicc_interface/AbstractCacheEntry.h	/^  Time m_LastRef; \/\/ Last time this block was referenced, required by CacheMemory$/;"	m	class:AbstractCacheEntry
m_LifetimeTrace_ptr	system/System.h	/^  LifetimeTrace* m_LifetimeTrace_ptr;$/;"	m	class:System
m_Logged	generated/MI_example/L1Cache_TBE.h	/^  bool m_Logged; \/**< Has this block been logged in the current transaction?*\/$/;"	m	class:L1Cache_TBE
m_LogicalAddress	generated/MI_example/CacheMsg.h	/^  Address m_LogicalAddress; \/**< Virtual address for this request*\/$/;"	m	class:CacheMsg
m_MessageSize	generated/MI_example/MemoryMsg.h	/^  MessageSizeType m_MessageSize; \/**< size category of the message*\/$/;"	m	class:MemoryMsg
m_MessageSize	generated/MI_example/RequestMsg.h	/^  MessageSizeType m_MessageSize; \/**< size category of the message*\/$/;"	m	class:RequestMsg
m_MessageSize	generated/MI_example/ResponseMsg.h	/^  MessageSizeType m_MessageSize; \/**< size category of the message*\/$/;"	m	class:ResponseMsg
m_OriginalRequestorMachId	generated/MI_example/MemoryMsg.h	/^  MachineID m_OriginalRequestorMachId; \/**< What component originally requested*\/$/;"	m	class:MemoryMsg
m_Owner	generated/MI_example/Directory_Entry.h	/^  NetDest m_Owner; \/**< Owner of this block*\/$/;"	m	class:Directory_Entry
m_Permission	slicc_interface/AbstractCacheEntry.h	/^  AccessPermission m_Permission; \/\/ Access permission for this block, required by CacheMemory$/;"	m	class:AbstractCacheEntry
m_PhysicalAddress	generated/MI_example/CacheMsg.h	/^  Address m_PhysicalAddress; \/**< Physical address for this request*\/$/;"	m	class:CacheMsg
m_Prefetch	generated/MI_example/CacheMsg.h	/^  PrefetchBit m_Prefetch; \/**< Is this a prefetch request*\/$/;"	m	class:CacheMsg
m_Prefetch	generated/MI_example/MemoryMsg.h	/^  PrefetchBit m_Prefetch; \/**< Is this a prefetch request*\/$/;"	m	class:MemoryMsg
m_ProgramCounter	generated/MI_example/CacheMsg.h	/^  Address m_ProgramCounter; \/**< Program counter of the instruction that caused the miss*\/$/;"	m	class:CacheMsg
m_ReadX	generated/MI_example/MemoryMsg.h	/^  bool m_ReadX; \/**< Exclusive*\/$/;"	m	class:MemoryMsg
m_Requestor	generated/MI_example/RequestMsg.h	/^  MachineID m_Requestor; \/**< Node who initiated the request*\/$/;"	m	class:RequestMsg
m_SWPrefetchL2MissLatencyHistogram	profiler/Profiler.h	/^  Histogram  m_SWPrefetchL2MissLatencyHistogram;$/;"	m	class:Profiler
m_SWPrefetchLatencyHistograms	profiler/Profiler.h	/^  Vector<Histogram> m_SWPrefetchLatencyHistograms;$/;"	m	class:Profiler
m_SWPrefetchMachLatencyHistograms	profiler/Profiler.h	/^  Vector<Histogram> m_SWPrefetchMachLatencyHistograms;$/;"	m	class:Profiler
m_Sender	generated/MI_example/MemoryMsg.h	/^  MachineID m_Sender; \/**< What component sent the data*\/$/;"	m	class:MemoryMsg
m_Sender	generated/MI_example/ResponseMsg.h	/^  MachineID m_Sender; \/**< Node who sent the data*\/$/;"	m	class:ResponseMsg
m_Sharers	generated/MI_example/Directory_Entry.h	/^  NetDest m_Sharers; \/**< Sharers for this block*\/$/;"	m	class:Directory_Entry
m_Size	generated/MI_example/CacheMsg.h	/^  int m_Size; \/**< size in bytes of access*\/$/;"	m	class:CacheMsg
m_Space	generated/MI_example/CacheMsg.h	/^  MemorySpaceType m_Space; \/**< Memory space of request (GLOBAL, LOCAL)*\/$/;"	m	class:CacheMsg
m_SummaryIsStale	simics/depreceated/SimicsHypervisor.h	/^  bool m_SummaryIsStale;$/;"	m	class:THEntry
m_TBEState	generated/MI_example/L1Cache_TBE.h	/^  L1Cache_State m_TBEState; \/**< Transient state*\/$/;"	m	class:L1Cache_TBE
m_TCpredictorContainer_ptr	system/System.h	/^  TCpredictorContainer* m_TCpredictorContainer_ptr;$/;"	m	class:System
m_ThreadID	generated/MI_example/CacheMsg.h	/^  int m_ThreadID; \/**< The SMT thread that initiated this request*\/$/;"	m	class:CacheMsg
m_Timestamp	generated/MI_example/CacheMsg.h	/^  uint64 m_Timestamp; \/**< The transaction timestamp of this request. Last commit time if request is non-transactional*\/$/;"	m	class:CacheMsg
m_Trans	generated/MI_example/L1Cache_TBE.h	/^  bool m_Trans; \/**< Is this block part of a the current transaction?*\/$/;"	m	class:L1Cache_TBE
m_TwoLevelCache	generated/MI_example/Protocol.h	/^  static const bool m_TwoLevelCache = (false) ;$/;"	m	class:Protocol
m_TwoLevelCache	slicc_interface/AbstractProtocol.h	/^  static const  bool m_TwoLevelCache = false ;$/;"	m	class:AbstractProtocol
m_Type	generated/MI_example/CacheMsg.h	/^  CacheRequestType m_Type; \/**< Type of request (LD, ST, etc)*\/$/;"	m	class:CacheMsg
m_Type	generated/MI_example/MemoryMsg.h	/^  MemoryRequestType m_Type; \/**< Type of memory request (MEMORY_READ or MEMORY_WB)*\/$/;"	m	class:MemoryMsg
m_Type	generated/MI_example/RequestMsg.h	/^  CoherenceRequestType m_Type; \/**< Type of request (GetS, GetX, PutX, etc)*\/$/;"	m	class:RequestMsg
m_Type	generated/MI_example/ResponseMsg.h	/^  CoherenceResponseType m_Type; \/**< Type of response (Ack, Data, etc)*\/$/;"	m	class:ResponseMsg
m_Type	generated/MI_example/TriggerMsg.h	/^  TriggerType m_Type; \/**< Type of trigger*\/$/;"	m	class:TriggerMsg
m_Version	generated/MI_example/CacheMsg.h	/^  int m_Version; \/**< Version associated with this request*\/$/;"	m	class:CacheMsg
m_a_in_buf	network/orion/NetworkPowerArea.h	/^	double m_a_in_buf;$/;"	m	class:RouterPowerArea_d
m_a_sw	network/orion/NetworkPowerArea.h	/^	double m_a_sw;$/;"	m	class:RouterPowerArea_d
m_a_total	network/orion/NetworkPowerArea.h	/^	double m_a_total;$/;"	m	class:RouterPowerArea_d
m_a_vc	network/orion/NetworkPowerArea.h	/^	double m_a_vc;$/;"	m	class:RouterPowerArea_d
m_a_xbar	network/orion/NetworkPowerArea.h	/^	double m_a_xbar;$/;"	m	class:RouterPowerArea_d
m_abortAddressMap_ptr	profiler/Profiler.h	/^  Map <Address, int>* m_abortAddressMap_ptr;$/;"	m	class:Profiler
m_abortDelays	profiler/Profiler.h	/^  Histogram m_abortDelays;$/;"	m	class:Profiler
m_abortIDMap_ptr	profiler/Profiler.h	/^  Map <int, int>* m_abortIDMap_ptr;$/;"	m	class:Profiler
m_abortPCMap_ptr	profiler/Profiler.h	/^  Map <Address, int>* m_abortPCMap_ptr;$/;"	m	class:Profiler
m_abortPending	tester/depreceated/XactRequestGenerator.h	/^  bool m_abortPending;$/;"	m	class:XactRequestGenerator
m_abortPerBlockDelay	profiler/Profiler.h	/^  int m_abortPerBlockDelay;$/;"	m	class:Profiler
m_abortStarupDelay	profiler/Profiler.h	/^  int m_abortStarupDelay;$/;"	m	class:Profiler
m_accessModeTypeHistogram	profiler/CacheProfiler.h	/^  int64 m_accessModeTypeHistogram[AccessModeType_NUM];$/;"	m	class:CacheProfiler
m_access_mode	system/StoreBuffer.C	/^  AccessModeType m_access_mode;$/;"	m	struct:StoreBufferEntry	file:
m_access_mode	tester/Check.h	/^  AccessModeType m_access_mode;$/;"	m	class:Check
m_access_time	profiler/LifetimeTrace.h	/^    Time m_access_time;             \/\/ time at which access occurred$/;"	m	struct:LifetimeAccess
m_active_requests	simics/depreceated/SimicsProcessor.h	/^  Vector<struct CacheRequest> m_active_requests;$/;"	m	class:SimicsProcessor
m_addr	gpusim_ruby/gpusim_ruby.h	/^   unsigned long long m_addr;$/;"	m	struct:ruby_dram_req_info
m_addr	profiler/AccessTraceForAddress.h	/^  Address m_addr;$/;"	m	class:AccessTraceForAddress
m_addr	profiler/StoreTrace.h	/^  Address m_addr;$/;"	m	class:StoreTrace
m_addr	system/MemoryNode.h	/^  physical_address_t m_addr;$/;"	m	class:MemoryNode
m_addr	system/StoreCache.C	/^  Address m_addr;$/;"	m	struct:StoreCacheEntry	file:
m_addr_chunk_granularity	system/TCpredictor.h	/^    int m_addr_chunk_granularity;$/;"	m	class:TCpredictorAddrfixed
m_address	common/Address.h	/^  physical_address_t m_address;$/;"	m	class:Address
m_address	common/SubBlock.h	/^  Address m_address;$/;"	m	class:SubBlock
m_address	profiler/LifetimeTrace.h	/^    physical_address_t  m_address;  \/\/ physical address$/;"	m	struct:LifetimeAccess
m_address	tester/BarrierGenerator.h	/^  Address m_address;$/;"	m	class:BarrierGenerator
m_address	tester/Check.h	/^  Address m_address;$/;"	m	class:Check
m_address	tester/DetermGETXGenerator.h	/^  Address m_address;$/;"	m	class:DetermGETXGenerator
m_address	tester/DetermInvGenerator.h	/^  Address m_address;$/;"	m	class:DetermInvGenerator
m_address	tester/DetermSeriesGETSGenerator.h	/^  Address m_address;$/;"	m	class:DetermSeriesGETSGenerator
m_address	tester/Instruction.h	/^  Address m_address;$/;"	m	class:Instruction
m_address	tester/RequestGenerator.h	/^  Address m_address;$/;"	m	class:RequestGenerator
m_address	tester/depreceated/XactAbortRequestGenerator.h	/^  Address m_address;$/;"	m	class:XactAbortRequestGenerator
m_address	tester/depreceated/XactRequestGenerator.h	/^  Address m_address;$/;"	m	class:XactRequestGenerator
m_address_profiler_ptr	profiler/Profiler.h	/^  AddressProfiler* m_address_profiler_ptr;$/;"	m	class:Profiler
m_ageCounter	system/MemoryControl.h	/^  int m_ageCounter;         \/\/ age of old requests; to detect starvation$/;"	m	class:MemoryControl
m_allMissLatencyHistogram	profiler/Profiler.h	/^  Histogram m_allMissLatencyHistogram;$/;"	m	class:Profiler
m_allSWPrefetchLatencyHistogram	profiler/Profiler.h	/^  Histogram  m_allSWPrefetchLatencyHistogram;$/;"	m	class:Profiler
m_all_sharing_histogram	profiler/Profiler.h	/^  Histogram m_all_sharing_histogram;$/;"	m	class:Profiler
m_asi_counters	simics/depreceated/SimicsDriver.h	/^  Vector<integer_t> m_asi_counters;$/;"	m	class:SimicsDriver
m_assoc	system/AbstractReplacementPolicy.h	/^  unsigned int m_assoc;          \/** set associativity *\/$/;"	m	class:AbstractReplacementPolicy
m_atomic_last_counter	simics/depreceated/SimicsDriver.h	/^  integer_t m_atomic_last_counter;$/;"	m	class:SimicsDriver
m_atomic_load_counter	simics/depreceated/SimicsDriver.h	/^  integer_t m_atomic_load_counter;$/;"	m	class:SimicsDriver
m_atomics	profiler/AccessTraceForAddress.h	/^  uint64 m_atomics;$/;"	m	class:AccessTraceForAddress
m_average_latency_estimate	profiler/Profiler.h	/^  Histogram m_average_latency_estimate;$/;"	m	class:Profiler
m_awakened	system/MemoryControl.h	/^  int m_awakened;$/;"	m	class:MemoryControl
m_b_contiguous	simics/depreceated/ContiguousAddressTranslator.h	/^  bool m_b_contiguous;$/;"	m	class:ContiguousAddressTranslator
m_bandwidth_since_sample	network/simple/Throttle.h	/^  int m_bandwidth_since_sample;$/;"	m	class:Throttle
m_bankBusyCounter	system/MemoryControl.h	/^  int* m_bankBusyCounter;$/;"	m	class:MemoryControl
m_bankQueues	system/MemoryControl.h	/^  list<MemoryNode>* m_bankQueues;$/;"	m	class:MemoryControl
m_bank_bit_0	system/MemoryControl.h	/^  int m_bank_bit_0;$/;"	m	class:MemoryControl
m_bank_busy_time	system/MemoryControl.h	/^  int m_bank_busy_time;$/;"	m	class:MemoryControl
m_bank_queue_size	system/MemoryControl.h	/^  unsigned int m_bank_queue_size;$/;"	m	class:MemoryControl
m_banks_per_rank	system/MemoryControl.h	/^  int m_banks_per_rank;$/;"	m	class:MemoryControl
m_barrier_done	tester/BarrierGenerator.h	/^  bool m_barrier_done;$/;"	m	class:BarrierGenerator
m_bash_counter	network/simple/Throttle.h	/^  int m_bash_counter;$/;"	m	class:Throttle
m_basic_bus_busy_time	system/MemoryControl.h	/^  int m_basic_bus_busy_time;$/;"	m	class:MemoryControl
m_bins	common/Histogram.h	/^  int m_bins;           \/\/ the number of buckets$/;"	m	class:Histogram
m_binsize	common/Histogram.h	/^  int m_binsize;                \/\/ the size of each bucket$/;"	m	class:Histogram
m_bits	common/BigSet.h	/^  Vector<uint8> m_bits;  \/\/ This is an vector of uint8 to reduce the size of the set$/;"	m	class:Set
m_bits	common/NetDest.h	/^  Vector < Set > m_bits;  \/\/ a Vector of bit vectors - i.e. Sets$/;"	m	class:NetDest
m_bits	common/Set.h	/^  uint32 m_bits;  \/\/ Set as a bit vector$/;"	m	class:Set
m_blockLifetimes_EVICT_pow2	profiler/Profiler.h	/^  Histogram m_blockLifetimes_EVICT_pow2;                    \/\/ pow2 histogram of EVICT lifetimes$/;"	m	class:Profiler
m_blockLifetimes_WRITE_pow2	profiler/Profiler.h	/^  Histogram m_blockLifetimes_WRITE_pow2;                    \/\/ pow2 histogram of WRITE lifetimes$/;"	m	class:Profiler
m_blockLifetimes_perAddr_granularity	profiler/Profiler.h	/^  int m_blockLifetimes_perAddr_granularity;                 \/\/ granularity in bytes in which to track addresses$/;"	m	class:Profiler
m_blockLifetimes_perAddr_pow2	profiler/Profiler.h	/^  Map<unsigned,Histogram>* m_blockLifetimes_perAddr_pow2;   \/\/ pow2 histogram of lifetimes for each address$/;"	m	class:Profiler
m_blockLifetimes_perPC_pow2	profiler/Profiler.h	/^  Map<unsigned,Histogram>* m_blockLifetimes_perPC_pow2;     \/\/ pow2 histogram of lifetimes for each unique PC$/;"	m	class:Profiler
m_blockLifetimes_pow2	profiler/Profiler.h	/^  Histogram m_blockLifetimes_pow2;                          \/\/ pow2 histogram of all lifetimes$/;"	m	class:Profiler
m_buffer	network/garnet-fixed-pipeline/flitBuffer_d.h	/^	PrioHeap <flit_d *> m_buffer;$/;"	m	class:flitBuffer_d
m_buffer	network/garnet-flexible-pipeline/flitBuffer.h	/^	PrioHeap <flit *> m_buffer;$/;"	m	class:flitBuffer
m_buffer_size	buffers/MessageBuffer.h	/^  Histogram m_buffer_size;$/;"	m	class:MessageBuffer
m_buffers_to_free	network/simple/SimpleNetwork.h	/^  Vector<MessageBuffer*> m_buffers_to_free;$/;"	m	class:SimpleNetwork
m_buffers_to_free	network/simple/Switch.h	/^  Vector<MessageBuffer*> m_buffers_to_free;$/;"	m	class:Switch
m_busBusyCounter_Basic	system/MemoryControl.h	/^  int m_busBusyCounter_Basic;$/;"	m	class:MemoryControl
m_busBusyCounter_ReadNewRank	system/MemoryControl.h	/^  int m_busBusyCounter_ReadNewRank;$/;"	m	class:MemoryControl
m_busBusyCounter_Write	system/MemoryControl.h	/^  int m_busBusyCounter_Write;$/;"	m	class:MemoryControl
m_busBusy_WhichRank	system/MemoryControl.h	/^  int m_busBusy_WhichRank;  \/\/ which rank last granted$/;"	m	class:MemoryControl
m_busy	system/PersistentArbiter.h	/^  bool m_busy;$/;"	m	class:PersistentArbiter
m_busyBankCount	profiler/Profiler.h	/^  integer_t m_busyBankCount;$/;"	m	class:Profiler
m_busyControllerCount	profiler/Profiler.h	/^  Vector < Vector < integer_t > > m_busyControllerCount;$/;"	m	class:Profiler
m_busytbeCount	profiler/Profiler.h	/^  integer_t m_busytbeCount;$/;"	m	class:Profiler
m_bw_multiplier_vector	network/simple/Topology.h	/^  Vector<int> m_bw_multiplier_vector;$/;"	m	class:Topology
m_byte_counters	system/StoreCache.C	/^  Vector<int> m_byte_counters;$/;"	m	struct:StoreCacheEntry	file:
m_cache	system/CacheMemory.h	/^  Vector<Vector<ENTRY> > m_cache;$/;"	m	class:CacheMemory
m_cache_assoc	system/CacheMemory.h	/^  int m_cache_assoc;$/;"	m	class:CacheMemory
m_cache_flush_counter	simics/depreceated/SimicsDriver.h	/^  integer_t m_cache_flush_counter;$/;"	m	class:SimicsDriver
m_cache_num_set_bits	system/CacheMemory.h	/^  int m_cache_num_set_bits;$/;"	m	class:CacheMemory
m_cache_num_sets	system/CacheMemory.h	/^  int m_cache_num_sets;$/;"	m	class:CacheMemory
m_cache_to_cache	profiler/Profiler.h	/^  int64 m_cache_to_cache;$/;"	m	class:Profiler
m_callback_queue	interfaces/GpusimInterface.h	/^  std::vector<callback_queue> m_callback_queue; $/;"	m	class:GpusimInterface
m_checkTable	tester/Tester.h	/^  CheckTable m_checkTable;$/;"	m	class:Tester
m_check_vector	tester/CheckTable.h	/^  Vector<Check*> m_check_vector;$/;"	m	class:CheckTable
m_chip_ptr	generated/MI_example/Chip.h	/^  Chip* m_chip_ptr;$/;"	m	class:Chip
m_chip_ptr	generated/MI_example/Directory_Controller.h	/^  Chip* m_chip_ptr;$/;"	m	class:Directory_Controller
m_chip_ptr	generated/MI_example/L1Cache_Controller.h	/^  Chip* m_chip_ptr;$/;"	m	class:L1Cache_Controller
m_chip_ptr	system/CacheMemory.h	/^  AbstractChip* m_chip_ptr;$/;"	m	class:CacheMemory
m_chip_ptr	system/DirectoryMemory.h	/^  Chip* m_chip_ptr;$/;"	m	class:DirectoryMemory
m_chip_ptr	system/GenericBloomFilter.h	/^  AbstractChip* m_chip_ptr;$/;"	m	class:GenericBloomFilter
m_chip_ptr	system/GlobalWriteVector.h	/^   Chip* m_chip_ptr;$/;"	m	class:GlobalWriteVector
m_chip_ptr	system/GpusimDramInterface.h	/^   AbstractChip* m_chip_ptr;$/;"	m	class:GpusimDramInterface
m_chip_ptr	system/MemoryControl.h	/^  AbstractChip* m_chip_ptr;$/;"	m	class:MemoryControl
m_chip_ptr	system/NodePersistentTable.h	/^  AbstractChip* m_chip_ptr;$/;"	m	class:NodePersistentTable
m_chip_ptr	system/PerfectCacheMemory.h	/^  AbstractChip* m_chip_ptr;$/;"	m	class:PerfectCacheMemory
m_chip_ptr	system/PersistentArbiter.h	/^  AbstractChip* m_chip_ptr;$/;"	m	class:PersistentArbiter
m_chip_ptr	system/PersistentTable.h	/^  AbstractChip* m_chip_ptr;$/;"	m	class:PersistentTable
m_chip_ptr	system/Sequencer.h	/^  AbstractChip* m_chip_ptr;$/;"	m	class:Sequencer
m_chip_ptr	system/StoreBuffer.h	/^  AbstractChip* m_chip_ptr;$/;"	m	class:StoreBuffer
m_chip_ptr	system/TBETable.h	/^  AbstractChip* m_chip_ptr;$/;"	m	class:TBETable
m_chip_ptr	system/TimerTable.h	/^  Chip* m_chip_ptr;$/;"	m	class:TimerTable
m_chip_vector	system/System.h	/^  Vector<AbstractChip*> m_chip_vector;$/;"	m	class:System
m_cl_fixed_lease	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_cl_fixed_lease;$/;"	m	struct:gpusim_ruby_config
m_cl_pred_addrfixed_infile	gpusim_ruby/gpusim_ruby.h	/^    char* m_cl_pred_addrfixed_infile;$/;"	m	struct:gpusim_ruby_config
m_cl_pred_global_expiredhit	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_cl_pred_global_expiredhit;$/;"	m	struct:gpusim_ruby_config
m_cl_pred_global_l2evict	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_cl_pred_global_l2evict;$/;"	m	struct:gpusim_ruby_config
m_cl_pred_global_writeunexpired	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_cl_pred_global_writeunexpired;$/;"	m	struct:gpusim_ruby_config
m_cl_pred_pcadaptive_expiredhit	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_cl_pred_pcadaptive_expiredhit;$/;"	m	struct:gpusim_ruby_config
m_cl_pred_pcadaptive_l2evict	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_cl_pred_pcadaptive_l2evict;$/;"	m	struct:gpusim_ruby_config
m_cl_pred_pcadaptive_writeunexpired	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_cl_pred_pcadaptive_writeunexpired;$/;"	m	struct:gpusim_ruby_config
m_cl_pred_pcfixed_infile	gpusim_ruby/gpusim_ruby.h	/^    char* m_cl_pred_pcfixed_infile;$/;"	m	struct:gpusim_ruby_config
m_cl_pred_perL2_expiredhit	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_cl_pred_perL2_expiredhit;$/;"	m	struct:gpusim_ruby_config
m_cl_pred_perL2_l2evict	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_cl_pred_perL2_l2evict;$/;"	m	struct:gpusim_ruby_config
m_cl_pred_perL2_writeunexpired	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_cl_pred_perL2_writeunexpired;$/;"	m	struct:gpusim_ruby_config
m_cl_predictor_type	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_cl_predictor_type;$/;"	m	struct:gpusim_ruby_config
m_cl_stall_evict	profiler/Profiler.h	/^  Histogram m_cl_stall_evict;$/;"	m	class:Profiler
m_cl_stall_fence	profiler/Profiler.h	/^  Histogram m_cl_stall_fence;$/;"	m	class:Profiler
m_commitIDMap_ptr	profiler/Profiler.h	/^  Map <int, int>* m_commitIDMap_ptr;$/;"	m	class:Profiler
m_component_inter_switches	network/simple/Topology.h	/^  Matrix m_component_inter_switches;$/;"	m	class:Topology
m_component_latencies	network/simple/Topology.h	/^  Matrix m_component_latencies;$/;"	m	class:Topology
m_config	gpusim_ruby/gpusim_ruby.h	/^   gpusim_ruby_config m_config;$/;"	m	class:gpusim_ruby
m_conflicting_histogram	profiler/Profiler.h	/^  Histogram m_conflicting_histogram;$/;"	m	class:Profiler
m_conflicting_map_ptr	profiler/Profiler.h	/^  Map<Address, Time>* m_conflicting_map_ptr;$/;"	m	class:Profiler
m_consumer_ptr	buffers/MessageBuffer.h	/^  Consumer* m_consumer_ptr;  \/\/ Consumer to signal a wakeup(), can be NULL$/;"	m	class:MessageBuffer
m_consumer_ptr	eventqueue/EventQueueNode.h	/^  Consumer* m_consumer_ptr;  $/;"	m	class:EventQueueNode
m_consumer_ptr	system/GpusimDramInterface.h	/^   Consumer* m_consumer_ptr;  \/\/ Consumer to signal a wakeup()$/;"	m	class:GpusimDramInterface
m_consumer_ptr	system/MemoryControl.h	/^  Consumer* m_consumer_ptr;  \/\/ Consumer to signal a wakeup()$/;"	m	class:MemoryControl
m_consumer_ptr	system/TimerTable.h	/^  Consumer* m_consumer_ptr;  \/\/ Consumer to signal a wakeup()$/;"	m	class:TimerTable
m_container	system/TCpredictor.h	/^    Consumer* m_container;      \/\/ pointer to container for wakeup purposes$/;"	m	class:TCpredictorPCSampler
m_core_freq	gpusim_ruby/gpusim_ruby.h	/^    double m_core_freq;$/;"	m	struct:gpusim_ruby_config
m_core_id	profiler/LifetimeTrace.h	/^    int m_core_id;                  \/\/ Id of L1$/;"	m	struct:LifetimeAccess
m_count	common/Histogram.h	/^  int64 m_count;                \/\/ the number of elements added$/;"	m	class:Histogram
m_count	system/BlockBloomFilter.h	/^  int m_count;$/;"	m	class:BlockBloomFilter
m_count	system/BulkBloomFilter.h	/^  int m_count;$/;"	m	class:BulkBloomFilter
m_count	system/H3BloomFilter.h	/^  int m_count;$/;"	m	class:H3BloomFilter
m_count	system/LSB_CountingBloomFilter.h	/^  int m_count;$/;"	m	class:LSB_CountingBloomFilter
m_count	system/MultiBitSelBloomFilter.h	/^  int m_count;$/;"	m	class:MultiBitSelBloomFilter
m_count	system/MultiGrainBloomFilter.h	/^  int m_count;$/;"	m	class:MultiGrainBloomFilter
m_count	system/NonCountingBloomFilter.h	/^  int m_count;$/;"	m	class:NonCountingBloomFilter
m_count_bits	system/BlockBloomFilter.h	/^  int m_count_bits;$/;"	m	class:BlockBloomFilter
m_count_bits	system/BulkBloomFilter.h	/^  int m_count_bits;$/;"	m	class:BulkBloomFilter
m_count_bits	system/H3BloomFilter.h	/^  int m_count_bits;$/;"	m	class:H3BloomFilter
m_count_bits	system/LSB_CountingBloomFilter.h	/^  int m_count_bits;$/;"	m	class:LSB_CountingBloomFilter
m_count_bits	system/MultiBitSelBloomFilter.h	/^  int m_count_bits;$/;"	m	class:MultiBitSelBloomFilter
m_count_bits	system/MultiGrainBloomFilter.h	/^  int m_count_bits;$/;"	m	class:MultiGrainBloomFilter
m_count_bits	system/NonCountingBloomFilter.h	/^  int m_count_bits;$/;"	m	class:NonCountingBloomFilter
m_counter	tester/BarrierGenerator.h	/^  int m_counter;$/;"	m	class:BarrierGenerator
m_counter	tester/DetermGETXGenerator.h	/^  int m_counter;$/;"	m	class:DetermGETXGenerator
m_counter	tester/DetermInvGenerator.h	/^  int m_counter;$/;"	m	class:DetermInvGenerator
m_counter	tester/DetermSeriesGETSGenerator.h	/^  int m_counter;$/;"	m	class:DetermSeriesGETSGenerator
m_counter	tester/RequestGenerator.h	/^  int m_counter;$/;"	m	class:RequestGenerator
m_counter	tester/depreceated/XactAbortRequestGenerator.h	/^  int m_counter;$/;"	m	class:XactAbortRequestGenerator
m_counter	tester/depreceated/XactRequestGenerator.h	/^  int m_counter;$/;"	m	class:XactRequestGenerator
m_counters	generated/MI_example/Directory_Profiler.h	/^  int m_counters[Directory_State_NUM][Directory_Event_NUM];$/;"	m	class:Directory_Profiler
m_counters	generated/MI_example/L1Cache_Profiler.h	/^  int m_counters[L1Cache_State_NUM][L1Cache_Event_NUM];$/;"	m	class:L1Cache_Profiler
m_cpuLastRunOn	simics/depreceated/SimicsHypervisor.h	/^  int m_cpuLastRunOn;$/;"	m	class:THEntry
m_credit_count	network/garnet-fixed-pipeline/OutVcState_d.h	/^	int m_credit_count;$/;"	m	class:OutVcState_d
m_credit_count	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	int m_credit_count;$/;"	m	class:VirtualChannel_d
m_credit_link	network/garnet-fixed-pipeline/InputUnit_d.h	/^	CreditLink_d *m_credit_link;$/;"	m	class:InputUnit_d
m_credit_link	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	CreditLink_d *m_credit_link;$/;"	m	class:NetworkInterface_d
m_credit_link	network/garnet-fixed-pipeline/OutputUnit_d.h	/^	CreditLink_d *m_credit_link;$/;"	m	class:OutputUnit_d
m_creditlink_ptr_vector	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	Vector<CreditLink_d *> m_creditlink_ptr_vector; \/\/ All links in the network	$/;"	m	class:GarnetNetwork_d
m_crossbar_activity	network/garnet-fixed-pipeline/Switch_d.h	/^	double m_crossbar_activity;$/;"	m	class:Switch_d
m_current_cycle_count	simics/depreceated/SimicsProcessor.h	/^  integer_t m_current_cycle_count;$/;"	m	class:SimicsProcessor
m_current_instruction_count	simics/depreceated/SimicsProcessor.h	/^  integer_t m_current_instruction_count;$/;"	m	class:SimicsProcessor
m_cycles_executed_at_start	profiler/Profiler.h	/^  Vector<int64> m_cycles_executed_at_start;$/;"	m	class:Profiler
m_data	common/DataBlock.h	/^  Vector<uint8> m_data;$/;"	m	class:DataBlock
m_data	common/Histogram.h	/^  Vector<int64> m_data;$/;"	m	class:Histogram
m_data	common/SubBlock.h	/^  Vector<uint> m_data;$/;"	m	class:SubBlock
m_dataAccessTrace	profiler/AddressProfiler.h	/^  Map<Address, AccessTraceForAddress>* m_dataAccessTrace;$/;"	m	class:AddressProfiler
m_data_address	recorder/TraceRecord.h	/^  Address m_data_address;$/;"	m	class:TraceRecord
m_data_requests	simics/depreceated/SimicsDriver.h	/^  integer_t m_data_requests;$/;"	m	class:SimicsDriver
m_datablock	system/StoreCache.C	/^  DataBlock m_datablock;$/;"	m	struct:StoreCacheEntry	file:
m_deadlock_check_scheduled	system/Sequencer.h	/^  bool m_deadlock_check_scheduled;$/;"	m	class:Sequencer
m_deadlock_check_scheduled	system/StoreBuffer.h	/^  bool m_deadlock_check_scheduled;$/;"	m	class:StoreBuffer
m_deadlock_threshold	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_deadlock_threshold;$/;"	m	struct:gpusim_ruby_config
m_debug	system/GpusimDramInterface.h	/^   int m_debug;              \/\/ turn on printf's$/;"	m	class:GpusimDramInterface
m_debug	system/MemoryControl.h	/^  int m_debug;              \/\/ turn on printf's$/;"	m	class:MemoryControl
m_debug_filter_string	gpusim_ruby/gpusim_ruby.h	/^    char* m_debug_filter_string;$/;"	m	struct:gpusim_ruby_config
m_debug_output_filename	gpusim_ruby/gpusim_ruby.h	/^    char* m_debug_output_filename;$/;"	m	struct:gpusim_ruby_config
m_debug_start_time	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_debug_start_time;$/;"	m	struct:gpusim_ruby_config
m_debug_verbosity_string	gpusim_ruby/gpusim_ruby.h	/^    char* m_debug_verbosity_string;$/;"	m	struct:gpusim_ruby_config
m_delayedCyclesHistogram	profiler/Profiler.h	/^  Histogram m_delayedCyclesHistogram;$/;"	m	class:Profiler
m_delayedCyclesNonPFHistogram	profiler/Profiler.h	/^  Histogram m_delayedCyclesNonPFHistogram;$/;"	m	class:Profiler
m_delayedCyclesVCHistograms	profiler/Profiler.h	/^  Vector<Histogram> m_delayedCyclesVCHistograms;$/;"	m	class:Profiler
m_demand_misses	profiler/CacheProfiler.h	/^  int64 m_demand_misses;$/;"	m	class:CacheProfiler
m_description	eventqueue/EventQueue_tester.C	/^  int m_description;$/;"	m	class:TestConsumer1	file:
m_description	eventqueue/EventQueue_tester.C	/^  int m_description;$/;"	m	class:TestConsumer2	file:
m_description	profiler/CacheProfiler.h	/^  string m_description;$/;"	m	class:CacheProfiler
m_description	system/CacheMemory.h	/^  string m_description;$/;"	m	class:CacheMemory
m_device_initiator_counter	simics/depreceated/SimicsDriver.h	/^  integer_t m_device_initiator_counter;$/;"	m	class:SimicsDriver
m_dimm_bit_0	system/MemoryControl.h	/^  int m_dimm_bit_0;$/;"	m	class:MemoryControl
m_dimms_per_channel	system/MemoryControl.h	/^  int m_dimms_per_channel;$/;"	m	class:MemoryControl
m_dir_assoc	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_dir_assoc;$/;"	m	struct:gpusim_ruby_config
m_dir_sets_bits	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_dir_sets_bits;$/;"	m	struct:gpusim_ruby_config
m_dir_t_per_cycle	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_dir_t_per_cycle;$/;"	m	struct:gpusim_ruby_config
m_done_counter	tester/DeterministicDriver.h	/^  int m_done_counter;$/;"	m	class:DeterministicDriver
m_done_counter	tester/RaceyDriver.h	/^  int m_done_counter;$/;"	m	class:RaceyDriver
m_done_counter	tester/SyntheticDriver.h	/^  int m_done_counter;$/;"	m	class:SyntheticDriver
m_driver	tester/BarrierGenerator.h	/^  SyntheticDriver& m_driver;$/;"	m	class:BarrierGenerator
m_driver	tester/DetermGETXGenerator.h	/^  DeterministicDriver& m_driver;$/;"	m	class:DetermGETXGenerator
m_driver	tester/DetermInvGenerator.h	/^  DeterministicDriver& m_driver;$/;"	m	class:DetermInvGenerator
m_driver	tester/DetermSeriesGETSGenerator.h	/^  DeterministicDriver& m_driver;$/;"	m	class:DetermSeriesGETSGenerator
m_driver	tester/RequestGenerator.h	/^  SyntheticDriver& m_driver;$/;"	m	class:RequestGenerator
m_driver	tester/depreceated/XactAbortRequestGenerator.h	/^  SyntheticDriver& m_driver;$/;"	m	class:XactAbortRequestGenerator
m_driver	tester/depreceated/XactRequestGenerator.h	/^  SyntheticDriver& m_driver;$/;"	m	class:XactRequestGenerator
m_driver_ptr	gpusim_ruby/gpusim_ruby.h	/^   GpusimInterface * m_driver_ptr; $/;"	m	class:gpusim_ruby
m_driver_ptr	system/System.h	/^  Driver* m_driver_ptr;$/;"	m	class:System
m_duplicate_instruction_fetch_counter	simics/depreceated/SimicsDriver.h	/^  integer_t m_duplicate_instruction_fetch_counter;$/;"	m	class:SimicsDriver
m_effective_assoc	system/PseudoLRUPolicy.h	/^  unsigned int m_effective_assoc;    \/** nearest (to ceiling) power of 2 *\/$/;"	m	class:PseudoLRUPolicy
m_enabled	recorder/Tracer.h	/^  bool m_enabled;$/;"	m	class:Tracer
m_endAddrs	simics/depreceated/ContiguousAddressTranslator.h	/^  Vector<uint64> m_endAddrs;$/;"	m	class:ContiguousAddressTranslator
m_endpoint_switches	network/simple/SimpleNetwork.h	/^  Vector<Switch*> m_endpoint_switches;$/;"	m	class:SimpleNetwork
m_enqueue_time	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	Time m_enqueue_time;$/;"	m	class:VirtualChannel_d
m_enqueue_time	network/garnet-fixed-pipeline/flit_d.h	/^	Time m_enqueue_time, m_time; $/;"	m	class:flit_d
m_enqueue_time	network/garnet-flexible-pipeline/flit.h	/^	Time m_enqueue_time, m_time; $/;"	m	class:flit
m_entries	system/DirectoryMemory.h	/^  DirectoryMap m_entries;$/;"	m	class:DirectoryMemory
m_entries	system/PersistentArbiter.h	/^  Vector<ArbiterEntry> m_entries;$/;"	m	class:PersistentArbiter
m_entry	system/PerfectCacheMemory.h	/^  ENTRY m_entry;$/;"	m	class:PerfectCacheLineState
m_eventPending	tester/depreceated/XactRequestGenerator.h	/^  bool m_eventPending;$/;"	m	class:XactRequestGenerator
m_event_counters	generated/MI_example/Directory_Profiler.h	/^  int m_event_counters[Directory_Event_NUM];$/;"	m	class:Directory_Profiler
m_event_counters	generated/MI_example/L1Cache_Profiler.h	/^  int m_event_counters[L1Cache_Event_NUM];$/;"	m	class:L1Cache_Profiler
m_exception_counter	simics/depreceated/SimicsDriver.h	/^  integer_t m_exception_counter;$/;"	m	class:SimicsDriver
m_explicit_training_mask	profiler/Profiler.h	/^  Histogram m_explicit_training_mask;$/;"	m	class:Profiler
m_extraWBs	profiler/Profiler.h	/^  int m_extraWBs;$/;"	m	class:Profiler
m_fast_path_counter	simics/depreceated/SimicsDriver.h	/^  integer_t m_fast_path_counter;$/;"	m	class:SimicsDriver
m_filter	common/Debug.h	/^  int m_filter;$/;"	m	class:Debug
m_filter	system/BlockBloomFilter.h	/^  Vector<int> m_filter;$/;"	m	class:BlockBloomFilter
m_filter	system/BulkBloomFilter.h	/^  Vector<int> m_filter;$/;"	m	class:BulkBloomFilter
m_filter	system/GenericBloomFilter.h	/^  AbstractBloomFilter* m_filter;$/;"	m	class:GenericBloomFilter
m_filter	system/H3BloomFilter.h	/^  Vector<int> m_filter;$/;"	m	class:H3BloomFilter
m_filter	system/LSB_CountingBloomFilter.h	/^  Vector<int> m_filter;$/;"	m	class:LSB_CountingBloomFilter
m_filter	system/MultiBitSelBloomFilter.h	/^  Vector<int> m_filter;$/;"	m	class:MultiBitSelBloomFilter
m_filter	system/MultiGrainBloomFilter.h	/^  Vector<int> m_filter;$/;"	m	class:MultiGrainBloomFilter
m_filter	system/NonCountingBloomFilter.h	/^  Vector<int> m_filter;$/;"	m	class:NonCountingBloomFilter
m_filter_action_histogram	profiler/Profiler.h	/^  Histogram m_filter_action_histogram;$/;"	m	class:Profiler
m_filter_size	system/BlockBloomFilter.h	/^  int m_filter_size;$/;"	m	class:BlockBloomFilter
m_filter_size	system/BulkBloomFilter.h	/^  int m_filter_size;$/;"	m	class:BulkBloomFilter
m_filter_size	system/H3BloomFilter.h	/^  int m_filter_size;$/;"	m	class:H3BloomFilter
m_filter_size	system/LSB_CountingBloomFilter.h	/^  int m_filter_size;$/;"	m	class:LSB_CountingBloomFilter
m_filter_size	system/MultiBitSelBloomFilter.h	/^  int m_filter_size;$/;"	m	class:MultiBitSelBloomFilter
m_filter_size	system/MultiGrainBloomFilter.h	/^  int m_filter_size;$/;"	m	class:MultiGrainBloomFilter
m_filter_size	system/NonCountingBloomFilter.h	/^  int m_filter_size;$/;"	m	class:NonCountingBloomFilter
m_filter_size_bits	system/BlockBloomFilter.h	/^  int m_filter_size_bits;$/;"	m	class:BlockBloomFilter
m_filter_size_bits	system/BulkBloomFilter.h	/^  int m_filter_size_bits;$/;"	m	class:BulkBloomFilter
m_filter_size_bits	system/H3BloomFilter.h	/^  int m_filter_size_bits;$/;"	m	class:H3BloomFilter
m_filter_size_bits	system/LSB_CountingBloomFilter.h	/^  int m_filter_size_bits;$/;"	m	class:LSB_CountingBloomFilter
m_filter_size_bits	system/MultiBitSelBloomFilter.h	/^  int m_filter_size_bits;$/;"	m	class:MultiBitSelBloomFilter
m_filter_size_bits	system/MultiGrainBloomFilter.h	/^  int m_filter_size_bits;$/;"	m	class:MultiGrainBloomFilter
m_filter_size_bits	system/NonCountingBloomFilter.h	/^  int m_filter_size_bits;$/;"	m	class:NonCountingBloomFilter
m_finish_time	tester/DeterministicDriver.h	/^  Time m_finish_time;$/;"	m	class:DeterministicDriver
m_finish_time	tester/RaceyDriver.h	/^  Time m_finish_time;$/;"	m	class:RaceyDriver
m_finish_time	tester/SyntheticDriver.h	/^  Time m_finish_time;$/;"	m	class:SyntheticDriver
m_first_store	profiler/StoreTrace.h	/^  Time m_first_store;$/;"	m	class:StoreTrace
m_flit_destination	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^   Vector<long long > m_flit_destination;    \/\/ stats - keep track of flits by their destination$/;"	m	class:NetworkInterface_d
m_flit_size	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_flit_size;$/;"	m	struct:gpusim_ruby_config
m_flit_width	network/garnet-fixed-pipeline/NetworkLink_d.h	/^	int m_flit_width;$/;"	m	class:NetworkLink_d
m_flit_width	network/garnet-fixed-pipeline/Router_d.h	/^	int m_flit_width;$/;"	m	class:Router_d
m_flits_injected	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	int m_flits_recieved, m_flits_injected;$/;"	m	class:GarnetNetwork_d
m_flits_recieved	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	int m_flits_recieved, m_flits_injected;$/;"	m	class:GarnetNetwork_d
m_fout	common/Debug.h	/^  std::fstream m_fout;$/;"	m	class:Debug
m_fromNetQueues	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^  	Vector<Vector<MessageBuffer*> > m_fromNetQueues;$/;"	m	class:GarnetNetwork_d
m_fromNetQueues	network/garnet-flexible-pipeline/GarnetNetwork.h	/^  	Vector<Vector<MessageBuffer*> > m_fromNetQueues;$/;"	m	class:GarnetNetwork
m_fromNetQueues	network/simple/SimpleNetwork.h	/^  Vector<Vector<MessageBuffer*> > m_fromNetQueues;$/;"	m	class:SimpleNetwork
m_g7_PrivilegeToUserMode	simics/depreceated/SimicsHypervisor.h	/^  Vector<uinteger_t>         m_g7_PrivilegeToUserMode;$/;"	m	class:SimicsHypervisor
m_g7_UserToPrivilegeMode	simics/depreceated/SimicsHypervisor.h	/^  Vector<uinteger_t>         m_g7_UserToPrivilegeMode;$/;"	m	class:SimicsHypervisor
m_garnet	gpusim_ruby/gpusim_ruby.h	/^    bool m_garnet;$/;"	m	struct:gpusim_ruby_config
m_generator_vector	tester/DeterministicDriver.h	/^  Vector<SpecifiedGenerator*> m_generator_vector;$/;"	m	class:DeterministicDriver
m_gets_mask_prediction	profiler/Profiler.h	/^  Histogram m_gets_mask_prediction;$/;"	m	class:Profiler
m_gets_sharing_histogram	profiler/AddressProfiler.h	/^  Histogram m_gets_sharing_histogram;$/;"	m	class:AddressProfiler
m_getx_mask_prediction	profiler/Profiler.h	/^  Histogram m_getx_mask_prediction;$/;"	m	class:Profiler
m_getx_sharing_histogram	profiler/AddressProfiler.h	/^  Histogram m_getx_sharing_histogram;$/;"	m	class:AddressProfiler
m_globalTime	eventqueue/EventQueue.h	/^  Time m_globalTime;$/;"	m	class:EventQueue
m_globalWriteTimes	system/GlobalWriteVector.h	/^   Vector<Time> m_globalWriteTimes;$/;"	m	class:GlobalWriteVector
m_global_arbiter_activity	network/garnet-fixed-pipeline/SWallocator_d.h	/^	double m_local_arbiter_activity, m_global_arbiter_activity;$/;"	m	class:SWallocator_d
m_global_arbiter_activity	network/garnet-fixed-pipeline/VCallocator_d.h	/^	double m_local_arbiter_activity, m_global_arbiter_activity;$/;"	m	class:VCallocator_d
m_gmem_skip_L1D	gpusim_ruby/gpusim_ruby.h	/^    bool m_gmem_skip_L1D;$/;"	m	struct:gpusim_ruby_config
m_goodPredictions	profiler/Profiler.h	/^  int m_goodPredictions;$/;"	m	class:Profiler
m_head	system/StoreBuffer.h	/^  int m_head;$/;"	m	class:StoreBuffer
m_histogram_ptr	profiler/AccessTraceForAddress.h	/^  Histogram* m_histogram_ptr;$/;"	m	class:AccessTraceForAddress
m_hit_return_counter	simics/depreceated/SimicsDriver.h	/^  integer_t m_hit_return_counter;$/;"	m	class:SimicsDriver
m_hw_prefetches	profiler/CacheProfiler.h	/^  int64 m_hw_prefetches;$/;"	m	class:CacheProfiler
m_hypervisor	simics/depreceated/SimicsDriver.h	/^  SimicsHypervisor *m_hypervisor; $/;"	m	class:SimicsDriver
m_icnt_freq	gpusim_ruby/gpusim_ruby.h	/^    double m_icnt_freq;$/;"	m	struct:gpusim_ruby_config
m_id	generated/MI_example/Directory_Controller.h	/^  NodeID m_id;$/;"	m	class:Directory_Controller
m_id	generated/MI_example/L1Cache_Controller.h	/^  NodeID m_id;$/;"	m	class:L1Cache_Controller
m_id	network/garnet-fixed-pipeline/InputUnit_d.h	/^	int m_id;$/;"	m	class:InputUnit_d
m_id	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	NodeID m_id;$/;"	m	class:NetworkInterface_d
m_id	network/garnet-fixed-pipeline/NetworkLink_d.h	/^	int m_id;$/;"	m	class:NetworkLink_d
m_id	network/garnet-fixed-pipeline/OutVcState_d.h	/^	int m_id ;$/;"	m	class:OutVcState_d
m_id	network/garnet-fixed-pipeline/OutputUnit_d.h	/^	int m_id;$/;"	m	class:OutputUnit_d
m_id	network/garnet-fixed-pipeline/Router_d.h	/^	int m_id;$/;"	m	class:Router_d
m_id	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	int m_id;$/;"	m	class:VirtualChannel_d
m_id	network/garnet-fixed-pipeline/flit_d.h	/^	int m_id;$/;"	m	class:flit_d
m_id	network/garnet-flexible-pipeline/InVcState.h	/^	int m_id;$/;"	m	class:InVcState
m_id	network/garnet-flexible-pipeline/NetworkInterface.h	/^	NodeID m_id;$/;"	m	class:NetworkInterface
m_id	network/garnet-flexible-pipeline/NetworkLink.h	/^	int m_id, m_latency;$/;"	m	class:NetworkLink
m_id	network/garnet-flexible-pipeline/OutVcState.h	/^	int m_id ;$/;"	m	class:OutVcState
m_id	network/garnet-flexible-pipeline/Router.h	/^	int m_id;$/;"	m	class:Router
m_id	network/garnet-flexible-pipeline/flit.h	/^	int m_id;$/;"	m	class:flit
m_id	slicc_interface/AbstractChip.h	/^  NodeID                 m_id;            \/\/ Chip id$/;"	m	class:AbstractChip
m_idleCount	system/MemoryControl.h	/^  int m_idleCount;          \/\/ watchdog timer for shutting down$/;"	m	class:MemoryControl
m_idle_xactmgr	simics/depreceated/SimicsHypervisor.h	/^  Vector<TransactionInterfaceManager*>   m_idle_xactmgr;$/;"	m	class:SimicsHypervisor
m_in	network/simple/PerfectSwitch.h	/^  Vector<Vector<MessageBuffer*> > m_in;$/;"	m	class:PerfectSwitch
m_in	network/simple/Throttle.h	/^  Vector<MessageBuffer*> m_in;$/;"	m	class:Throttle
m_in_link	network/garnet-fixed-pipeline/InputUnit_d.h	/^	NetworkLink_d *m_in_link;$/;"	m	class:InputUnit_d
m_in_link	network/garnet-flexible-pipeline/Router.h	/^	Vector<NetworkLink *> m_in_link;$/;"	m	class:Router
m_in_port	network/garnet-fixed-pipeline/OutVcState_d.h	/^	int m_in_port;$/;"	m	class:OutVcState_d
m_in_port	network/garnet-flexible-pipeline/NetworkLink.h	/^	int m_in_port, m_out_port;$/;"	m	class:NetworkLink
m_in_use	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	Vector<bool> m_in_use;$/;"	m	class:GarnetNetwork_d
m_in_use	network/garnet-flexible-pipeline/GarnetNetwork.h	/^	Vector<bool> m_in_use;$/;"	m	class:GarnetNetwork
m_in_use	network/simple/SimpleNetwork.h	/^  Vector<bool> m_in_use;$/;"	m	class:SimpleNetwork
m_in_vc	network/garnet-fixed-pipeline/OutVcState_d.h	/^	int m_in_vc;$/;"	m	class:OutVcState_d
m_in_vc_state	network/garnet-flexible-pipeline/Router.h	/^	Vector<Vector<InVcState * > > m_in_vc_state;$/;"	m	class:Router
m_inferredAborts	profiler/Profiler.h	/^  int m_inferredAborts;$/;"	m	class:Profiler
m_initial_cycle_count	simics/depreceated/SimicsProcessor.h	/^  integer_t m_initial_cycle_count;$/;"	m	class:SimicsProcessor
m_initial_instruction_count	simics/depreceated/SimicsProcessor.h	/^  integer_t m_initial_instruction_count;$/;"	m	class:SimicsProcessor
m_initiatingNode	tester/Check.h	/^  NodeID m_initiatingNode;$/;"	m	class:Check
m_input_buffer	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	flitBuffer_d *m_input_buffer;$/;"	m	class:VirtualChannel_d
m_input_queue	system/GpusimDramInterface.h	/^   list<MsgPtr*> m_input_queue;$/;"	m	class:GpusimDramInterface
m_input_queue	system/MemoryControl.h	/^  list<MemoryNode> m_input_queue;$/;"	m	class:MemoryControl
m_input_unit	network/garnet-fixed-pipeline/Router_d.h	/^	Vector<InputUnit_d *> m_input_unit;$/;"	m	class:Router_d
m_input_unit	network/garnet-fixed-pipeline/SWallocator_d.h	/^	Vector<InputUnit_d *> m_input_unit;$/;"	m	class:SWallocator_d
m_input_unit	network/garnet-fixed-pipeline/VCallocator_d.h	/^	Vector<InputUnit_d *> m_input_unit ;$/;"	m	class:VCallocator_d
m_insn_requests	simics/depreceated/SimicsDriver.h	/^  integer_t m_insn_requests;$/;"	m	class:SimicsDriver
m_inst_profiler_ptr	profiler/Profiler.h	/^  AddressProfiler* m_inst_profiler_ptr;$/;"	m	class:Profiler
m_instructions	tester/depreceated/XactAbortRequestGenerator.h	/^  Instruction *m_instructions;$/;"	m	class:XactAbortRequestGenerator
m_instructions	tester/depreceated/XactRequestGenerator.h	/^  Instruction *m_instructions;$/;"	m	class:XactRequestGenerator
m_instructions_executed_at_start	profiler/Profiler.h	/^  Vector<int64> m_instructions_executed_at_start;$/;"	m	class:Profiler
m_internal_cache_ptr	system/StoreCache.h	/^  Map<Address, StoreCacheEntry>* m_internal_cache_ptr;$/;"	m	class:StoreCache
m_internal_dest	slicc_interface/NetworkMessage.h	/^  NetDest m_internal_dest;$/;"	m	class:NetworkMessage
m_internal_dest_valid	slicc_interface/NetworkMessage.h	/^  bool m_internal_dest_valid;$/;"	m	class:NetworkMessage
m_isRunning	simics/depreceated/SimicsHypervisor.h	/^  bool m_isRunning;$/;"	m	class:THEntry
m_isVirtualized	simics/depreceated/SimicsHypervisor.h	/^  bool m_isVirtualized;$/;"	m	class:THEntry
m_is_dirty_wb	system/MemoryNode.h	/^  bool m_is_dirty_wb;$/;"	m	class:MemoryNode
m_is_free_signal	network/garnet-fixed-pipeline/flit_d.h	/^	bool m_is_free_signal;$/;"	m	class:flit_d
m_is_instruction_cache	system/CacheMemory.h	/^  bool m_is_instruction_cache;$/;"	m	class:CacheMemory
m_is_mem_read	system/MemoryNode.h	/^  bool m_is_mem_read;$/;"	m	class:MemoryNode
m_issued_address	system/PersistentArbiter.h	/^  Address m_issued_address;$/;"	m	class:PersistentArbiter
m_l1_assoc	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_l1_assoc;$/;"	m	struct:gpusim_ruby_config
m_l1_sets_bits	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_l1_sets_bits;$/;"	m	struct:gpusim_ruby_config
m_l1_t_per_cycle	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_l1_t_per_cycle;$/;"	m	struct:gpusim_ruby_config
m_l2_assoc	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_l2_assoc;$/;"	m	struct:gpusim_ruby_config
m_l2_sets_bits	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_l2_sets_bits;$/;"	m	struct:gpusim_ruby_config
m_l2_t_per_cycle	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_l2_t_per_cycle;$/;"	m	struct:gpusim_ruby_config
m_largest_bin	common/Histogram.h	/^  int m_largest_bin;      \/\/ the largest bin used$/;"	m	class:Histogram
m_last_arrival_time	buffers/MessageBuffer.h	/^  Time m_last_arrival_time;$/;"	m	class:MessageBuffer
m_last_bandwidth_sample	network/simple/Throttle.h	/^  Time m_last_bandwidth_sample;$/;"	m	class:Throttle
m_last_issue	tester/DeterministicDriver.h	/^  Time m_last_issue;$/;"	m	class:DeterministicDriver
m_last_primary_context	simics/depreceated/SimicsHypervisor.h	/^  Vector<integer_t>         m_last_primary_context;$/;"	m	class:SimicsHypervisor
m_last_progress_vector	tester/DeterministicDriver.h	/^  Vector<Time> m_last_progress_vector;$/;"	m	class:DeterministicDriver
m_last_progress_vector	tester/SyntheticDriver.h	/^  Vector<Time> m_last_progress_vector;$/;"	m	class:SyntheticDriver
m_last_progress_vector	tester/Tester.h	/^  Vector<Time> m_last_progress_vector;$/;"	m	class:Tester
m_last_ref_ptr	system/AbstractReplacementPolicy.h	/^  Time **m_last_ref_ptr;         \/** timestamp of last reference *\/$/;"	m	class:AbstractReplacementPolicy
m_last_scheduled_wakeup	common/Consumer.h	/^  Time m_last_scheduled_wakeup;$/;"	m	class:Consumer
m_last_store	profiler/StoreTrace.h	/^  Time m_last_store;$/;"	m	class:StoreTrace
m_last_transition	tester/BarrierGenerator.h	/^  Time m_last_transition;$/;"	m	class:BarrierGenerator
m_last_transition	tester/DetermGETXGenerator.h	/^  Time m_last_transition;$/;"	m	class:DetermGETXGenerator
m_last_transition	tester/DetermInvGenerator.h	/^  Time m_last_transition;$/;"	m	class:DetermInvGenerator
m_last_transition	tester/DetermSeriesGETSGenerator.h	/^  Time m_last_transition;$/;"	m	class:DetermSeriesGETSGenerator
m_last_transition	tester/RequestGenerator.h	/^  Time m_last_transition;$/;"	m	class:RequestGenerator
m_last_transition	tester/depreceated/XactAbortRequestGenerator.h	/^  Time m_last_transition;$/;"	m	class:XactAbortRequestGenerator
m_last_transition	tester/depreceated/XactRequestGenerator.h	/^  Time m_last_transition;$/;"	m	class:XactRequestGenerator
m_last_user_thread	simics/depreceated/SimicsHypervisor.h	/^  Vector<uinteger_t>         m_last_user_thread;$/;"	m	class:SimicsHypervisor
m_last_wakeup	common/Consumer.h	/^  Time m_last_wakeup;$/;"	m	class:Consumer
m_last_writer	profiler/StoreTrace.h	/^  NodeID m_last_writer;$/;"	m	class:StoreTrace
m_latency	network/garnet-fixed-pipeline/NetworkLink_d.h	/^	int m_latency;$/;"	m	class:NetworkLink_d
m_latency	network/garnet-flexible-pipeline/NetworkLink.h	/^	int m_id, m_latency;$/;"	m	class:NetworkLink
m_latency_L1toL2	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_latency_L1toL2;$/;"	m	struct:gpusim_ruby_config
m_latency_L1toL2_multiplier	gpusim_ruby/gpusim_ruby.h	/^    float m_latency_L1toL2_multiplier;$/;"	m	struct:gpusim_ruby_config
m_latency_L2toMem	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_latency_L2toMem;$/;"	m	struct:gpusim_ruby_config
m_latency_L2toMem_multiplier	gpusim_ruby/gpusim_ruby.h	/^    float m_latency_L2toMem_multiplier;$/;"	m	struct:gpusim_ruby_config
m_lease	system/TCpredictor.h	/^    int m_lease;$/;"	m	class:TCpredictorGlobal
m_leases	system/TCpredictor.h	/^    std::vector<int> m_leases;$/;"	m	class:TCpredictorPerL2
m_lifetime	profiler/LifetimeTrace.h	/^    Time m_lifetime;                \/\/ lifetime of access$/;"	m	struct:LifetimeAccess
m_lifetime_profiler_peraddr_outfile	gpusim_ruby/gpusim_ruby.h	/^    char* m_lifetime_profiler_peraddr_outfile;$/;"	m	struct:gpusim_ruby_config
m_lifetime_profiler_peraddr_outmode	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_lifetime_profiler_peraddr_outmode;$/;"	m	struct:gpusim_ruby_config
m_lifetime_profiler_perpc_outfile	gpusim_ruby/gpusim_ruby.h	/^    char* m_lifetime_profiler_perpc_outfile;$/;"	m	struct:gpusim_ruby_config
m_lifetime_profiler_perpc_outmode	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_lifetime_profiler_perpc_outmode;$/;"	m	struct:gpusim_ruby_config
m_lifetimetrace_enabled	gpusim_ruby/gpusim_ruby.h	/^    bool m_lifetimetrace_enabled;$/;"	m	struct:gpusim_ruby_config
m_lifetimetrace_outfile	gpusim_ruby/gpusim_ruby.h	/^    char * m_lifetimetrace_outfile;$/;"	m	struct:gpusim_ruby_config
m_line_counter	system/StoreCache.C	/^  int m_line_counter;$/;"	m	struct:StoreCacheEntry	file:
m_lingering_request_address	simics/depreceated/SimicsProcessor.h	/^  Address m_lingering_request_address;$/;"	m	class:SimicsProcessor
m_link	network/simple/PerfectSwitch.h	/^  int m_link;$/;"	m	class:LinkOrder
m_link_bandwidth_multiplier	network/simple/Throttle.h	/^  int m_link_bandwidth_multiplier;$/;"	m	class:Throttle
m_link_latency	network/simple/Throttle.h	/^  int m_link_latency;$/;"	m	class:Throttle
m_link_order	network/simple/PerfectSwitch.h	/^  Vector<LinkOrder> m_link_order;$/;"	m	class:PerfectSwitch
m_link_ptr_vector	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	Vector<NetworkLink_d *> m_link_ptr_vector; \/\/ All links in the network	$/;"	m	class:GarnetNetwork_d
m_link_ptr_vector	network/garnet-flexible-pipeline/GarnetNetwork.h	/^	Vector<NetworkLink *> m_link_ptr_vector; \/\/ All links in the network	$/;"	m	class:GarnetNetwork
m_link_utilized	network/garnet-fixed-pipeline/NetworkLink_d.h	/^	int m_link_utilized;$/;"	m	class:NetworkLink_d
m_link_utilized	network/garnet-flexible-pipeline/NetworkLink.h	/^	int m_link_utilized;$/;"	m	class:NetworkLink
m_link_weights	network/garnet-flexible-pipeline/Router.h	/^ 	Vector<int > m_link_weights;$/;"	m	class:Router
m_links_dest_vector	network/simple/Topology.h	/^  Vector<SwitchID> m_links_dest_vector;$/;"	m	class:Topology
m_links_latency_vector	network/simple/Topology.h	/^  Vector<int> m_links_latency_vector;$/;"	m	class:Topology
m_links_src_vector	network/simple/Topology.h	/^  Vector<SwitchID> m_links_src_vector;$/;"	m	class:Topology
m_links_utilized	network/simple/Throttle.h	/^  double m_links_utilized;$/;"	m	class:Throttle
m_links_weight_vector	network/simple/Topology.h	/^  Vector<int> m_links_weight_vector;$/;"	m	class:Topology
m_load_latency	tester/DeterministicDriver.h	/^  Histogram m_load_latency;$/;"	m	class:DeterministicDriver
m_load_vector	tester/DeterministicDriver.h	/^  Vector<NodeID> m_load_vector;  \/\/ Processor last to load the addr$/;"	m	class:DeterministicDriver
m_loads	profiler/AccessTraceForAddress.h	/^  uint64 m_loads;$/;"	m	class:AccessTraceForAddress
m_loads_completed	tester/DeterministicDriver.h	/^  int m_loads_completed;$/;"	m	class:DeterministicDriver
m_local_arbiter_activity	network/garnet-fixed-pipeline/SWallocator_d.h	/^	double m_local_arbiter_activity, m_global_arbiter_activity;$/;"	m	class:SWallocator_d
m_local_arbiter_activity	network/garnet-fixed-pipeline/VCallocator_d.h	/^	double m_local_arbiter_activity, m_global_arbiter_activity;$/;"	m	class:VCallocator_d
m_local_sense	tester/BarrierGenerator.h	/^  bool m_local_sense;$/;"	m	class:BarrierGenerator
m_lock_vector	tester/SyntheticDriver.h	/^  Vector<NodeID> m_lock_vector;  \/\/ Processor last to hold the lock$/;"	m	class:SyntheticDriver
m_locker	system/PersistentArbiter.h	/^  int m_locker;$/;"	m	class:PersistentArbiter
m_logicalAddress	common/SubBlock.h	/^  Address m_logicalAddress;$/;"	m	class:SubBlock
m_lookup_map_ptr	tester/CheckTable.h	/^  Map<Address, Check*>* m_lookup_map_ptr;$/;"	m	class:CheckTable
m_machLatencyHistograms	profiler/Profiler.h	/^  Vector<Histogram> m_machLatencyHistograms;$/;"	m	class:Profiler
m_machType	system/CacheMemory.h	/^  MachineType m_machType;$/;"	m	class:CacheMemory
m_machineID	generated/MI_example/Directory_Controller.h	/^  MachineID m_machineID;$/;"	m	class:Directory_Controller
m_machineID	generated/MI_example/L1Cache_Controller.h	/^  MachineID m_machineID;$/;"	m	class:L1Cache_Controller
m_macroBlockAccessTrace	profiler/AddressProfiler.h	/^  Map<Address, AccessTraceForAddress>* m_macroBlockAccessTrace;$/;"	m	class:AddressProfiler
m_map	system/PerfectCacheMemory.h	/^  Map<Address, PerfectCacheLineState<ENTRY> > m_map;$/;"	m	class:PerfectCacheMemory
m_map	system/TBETable.h	/^  Map<Address, ENTRY> m_map;$/;"	m	class:TBETable
m_map	system/TimerTable.h	/^  Map<Address, Time> m_map;$/;"	m	class:TimerTable
m_map_address_cores	profiler/LifetimeTrace.h	/^  map_address_cores_t m_map_address_cores;$/;"	m	class:LifetimeTrace
m_map_ptr	system/NodePersistentTable.h	/^  Map<Address, NodePersistentTableEntry>* m_map_ptr;$/;"	m	class:NodePersistentTable
m_map_ptr	system/PersistentTable.h	/^  Map<Address, PersistentTableEntry>* m_map_ptr;$/;"	m	class:PersistentTable
m_marked	system/NodePersistentTable.C	/^  Set m_marked;$/;"	m	class:NodePersistentTableEntry	file:
m_marked	system/PersistentTable.C	/^  NetDest m_marked;$/;"	m	class:PersistentTableEntry	file:
m_mask	common/Set.h	/^  uint32 m_mask;  \/\/ a 000001111 mask where the number of 1s is equal to m_size$/;"	m	class:Set
m_max	common/Histogram.h	/^  int64 m_max;          \/\/ the maximum value seen so far$/;"	m	class:Histogram
m_max_lifetime	system/TCpredictor.h	/^    Time m_max_lifetime;        \/\/ max lifetime that can possibly be given out$/;"	m	class:TCpredictorPCSampler
m_max_size	buffers/MessageBuffer.h	/^  int m_max_size;$/;"	m	class:MessageBuffer
m_memArbWait	profiler/Profiler.h	/^  long long int m_memArbWait;$/;"	m	class:Profiler
m_memBankBusy	profiler/Profiler.h	/^  long long int m_memBankBusy;$/;"	m	class:Profiler
m_memBankCount	profiler/Profiler.h	/^  Vector<long long int> m_memBankCount;$/;"	m	class:Profiler
m_memBankQ	profiler/Profiler.h	/^  long long int m_memBankQ;$/;"	m	class:Profiler
m_memBusBusy	profiler/Profiler.h	/^  long long int m_memBusBusy;$/;"	m	class:Profiler
m_memDataBusBusy	profiler/Profiler.h	/^  long long int m_memDataBusBusy;$/;"	m	class:Profiler
m_memFixedDelay	system/MemoryControl.h	/^  int m_memFixedDelay;$/;"	m	class:MemoryControl
m_memInputQ	profiler/Profiler.h	/^  long long int m_memInputQ;$/;"	m	class:Profiler
m_memNotOld	profiler/Profiler.h	/^  long long int m_memNotOld;$/;"	m	class:Profiler
m_memRandBusy	profiler/Profiler.h	/^  long long int m_memRandBusy;$/;"	m	class:Profiler
m_memRandomArbitrate	system/MemoryControl.h	/^  int m_memRandomArbitrate;$/;"	m	class:MemoryControl
m_memRead	profiler/Profiler.h	/^  long long int m_memRead;$/;"	m	class:Profiler
m_memReadWriteBusy	profiler/Profiler.h	/^  long long int m_memReadWriteBusy;$/;"	m	class:Profiler
m_memRefresh	profiler/Profiler.h	/^  long long int m_memRefresh;$/;"	m	class:Profiler
m_memReq	profiler/Profiler.h	/^  long long int m_memReq;$/;"	m	class:Profiler
m_memTfawBusy	profiler/Profiler.h	/^  long long int m_memTfawBusy;$/;"	m	class:Profiler
m_memWaitCycles	profiler/Profiler.h	/^  long long int m_memWaitCycles;$/;"	m	class:Profiler
m_memWrite	profiler/Profiler.h	/^  long long int m_memWrite;$/;"	m	class:Profiler
m_mem_bus_cycle_multiplier	system/MemoryControl.h	/^  int m_mem_bus_cycle_multiplier;$/;"	m	class:MemoryControl
m_mem_ctl_latency	system/MemoryControl.h	/^  int m_mem_ctl_latency;$/;"	m	class:MemoryControl
m_mem_mapped_io_counter	simics/depreceated/SimicsDriver.h	/^  integer_t m_mem_mapped_io_counter;$/;"	m	class:SimicsDriver
m_memfence_callback_queue	interfaces/GpusimInterface.h	/^  std::vector<memfence_callback_queue> m_memfence_callback_queue;$/;"	m	class:GpusimInterface
m_memfetch	generated/MI_example/CacheMsg.h	/^  uint64 m_memfetch; \/**< Memfetch pointer of request*\/$/;"	m	class:CacheMsg
m_memfetch_set	common/MemfetchSet.h	/^   std::vector<memfetch_list_t> m_memfetch_set;$/;"	m	class:MemfetchSet
m_memory_to_cache	profiler/Profiler.h	/^  int64 m_memory_to_cache;$/;"	m	class:Profiler
m_message_counters	network/simple/Throttle.h	/^  Vector<Vector<int> > m_message_counters;$/;"	m	class:Throttle
m_missLatencyHistograms	profiler/Profiler.h	/^  Vector<Histogram> m_missLatencyHistograms;$/;"	m	class:Profiler
m_missTypeVec_ptr	profiler/CacheProfiler.h	/^  Vector < int >* m_missTypeVec_ptr;$/;"	m	class:CacheProfiler
m_misses	profiler/CacheProfiler.h	/^  int64 m_misses;$/;"	m	class:CacheProfiler
m_msg_counter	buffers/MessageBuffer.h	/^  int m_msg_counter;$/;"	m	class:MessageBuffer
m_msg_counter	buffers/MessageBufferNode.h	/^  int m_msg_counter; \/\/ FIXME, should this be a 64-bit value?$/;"	m	class:MessageBufferNode
m_msg_counter	system/MemoryControl.h	/^  int m_msg_counter;$/;"	m	class:MemoryControl
m_msg_counter	system/MemoryNode.h	/^  int m_msg_counter;$/;"	m	class:MemoryNode
m_msg_ptr	gpusim_ruby/gpusim_ruby.h	/^   void* m_msg_ptr;$/;"	m	struct:ruby_dram_req_info
m_msg_ptr	network/garnet-fixed-pipeline/flit_d.h	/^	MsgPtr m_msg_ptr;$/;"	m	class:flit_d
m_msg_ptr	network/garnet-flexible-pipeline/flit.h	/^	MsgPtr m_msg_ptr;$/;"	m	class:flit
m_msgptr	buffers/MessageBufferNode.h	/^  MsgPtr m_msgptr;  $/;"	m	class:MessageBufferNode
m_msgptr	system/MemoryNode.h	/^  MsgPtr m_msgptr;  $/;"	m	class:MemoryNode
m_msgs_this_cycle	buffers/MessageBuffer.h	/^  int m_msgs_this_cycle;$/;"	m	class:MessageBuffer
m_multicast_retry_histogram	profiler/Profiler.h	/^  Histogram m_multicast_retry_histogram;$/;"	m	class:Profiler
m_nArrayLen	common/OptBigSet.h	/^  int m_nArrayLen;          \/\/ the number of 32-bit words that are held in the array$/;"	m	class:Set
m_nNumMaps	simics/depreceated/ContiguousAddressTranslator.h	/^  int m_nNumMaps;$/;"	m	class:ContiguousAddressTranslator
m_nSize	common/OptBigSet.h	/^  int m_nSize;              \/\/ the number of bits in this set$/;"	m	class:Set
m_nackPCMap_ptr	profiler/Profiler.h	/^  Map <Address, int>* m_nackPCMap_ptr;$/;"	m	class:Profiler
m_nackXIDMap_ptr	profiler/Profiler.h	/^  Map <int, int>* m_nackXIDMap_ptr;$/;"	m	class:Profiler
m_nackXIDPairMap_ptr	profiler/Profiler.h	/^  Map<int, Map<int, int> * > * m_nackXIDPairMap_ptr;$/;"	m	class:Profiler
m_name	buffers/MessageBuffer.h	/^  string m_name;$/;"	m	class:MessageBuffer
m_name	system/GpusimDramInterface.h	/^   string m_name;$/;"	m	class:GpusimDramInterface
m_name	system/MemoryControl.h	/^  string m_name;$/;"	m	class:MemoryControl
m_name	system/TimerTable.h	/^  string m_name;$/;"	m	class:TimerTable
m_need_refresh	system/MemoryControl.h	/^  int m_need_refresh;       \/\/ set whenever m_refresh_count goes to zero$/;"	m	class:MemoryControl
m_net_ptr	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	GarnetNetwork_d *m_net_ptr;$/;"	m	class:NetworkInterface_d
m_net_ptr	network/garnet-fixed-pipeline/NetworkLink_d.h	/^	GarnetNetwork_d *m_net_ptr;$/;"	m	class:NetworkLink_d
m_net_ptr	network/garnet-flexible-pipeline/NetworkInterface.h	/^	GarnetNetwork *m_net_ptr;$/;"	m	class:NetworkInterface
m_net_ptr	network/garnet-flexible-pipeline/NetworkLink.h	/^	GarnetNetwork *m_net_ptr;$/;"	m	class:NetworkLink
m_net_ptr	network/garnet-flexible-pipeline/Router.h	/^	GarnetNetwork *m_net_ptr;$/;"	m	class:Router
m_net_ptr	slicc_interface/AbstractChip.h	/^  Network*               m_net_ptr;       \/\/ Points to the Network simulator$/;"	m	class:AbstractChip
m_network_latency	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	double m_network_latency, m_queueing_latency;$/;"	m	class:GarnetNetwork_d
m_network_ptr	network/garnet-fixed-pipeline/Router_d.h	/^	GarnetNetwork_d *m_network_ptr;	$/;"	m	class:Router_d
m_network_ptr	network/simple/PerfectSwitch.h	/^  SimpleNetwork* m_network_ptr;$/;"	m	class:PerfectSwitch
m_network_ptr	network/simple/Topology.h	/^  Network* m_network_ptr;$/;"	m	class:Topology
m_network_ptr	system/System.h	/^  Network* m_network_ptr;$/;"	m	class:System
m_next_address	system/TimerTable.h	/^  mutable Address m_next_address;  \/\/ Only valid if m_next_valid is true$/;"	m	class:TimerTable
m_next_time	system/TimerTable.h	/^  mutable Time m_next_time; \/\/ Only valid if m_next_valid is true$/;"	m	class:TimerTable
m_next_valid	system/TimerTable.h	/^  mutable bool m_next_valid;$/;"	m	class:TimerTable
m_ni_buffers	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	Vector<flitBuffer_d *>   m_ni_buffers; \/\/ The flit buffers which will serve the Consumer$/;"	m	class:NetworkInterface_d
m_ni_buffers	network/garnet-flexible-pipeline/NetworkInterface.h	/^	Vector<flitBuffer *>   m_ni_buffers; \/\/ The flit buffers which will serve the Consumer$/;"	m	class:NetworkInterface
m_ni_credit_link	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	CreditLink_d *m_ni_credit_link;$/;"	m	class:NetworkInterface_d
m_ni_enqueue_time	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	Vector<Time > m_ni_enqueue_time;$/;"	m	class:NetworkInterface_d
m_ni_ptr_vector	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	Vector<NetworkInterface_d *> m_ni_ptr_vector;	\/\/ All NI's in Network$/;"	m	class:GarnetNetwork_d
m_ni_ptr_vector	network/garnet-flexible-pipeline/GarnetNetwork.h	/^	Vector<NetworkInterface *> m_ni_ptr_vector;	\/\/ All NI's in Network$/;"	m	class:GarnetNetwork
m_node	network/simple/Throttle.h	/^  NodeID m_node;$/;"	m	class:Throttle
m_node	tester/BarrierGenerator.h	/^  NodeID m_node;$/;"	m	class:BarrierGenerator
m_node	tester/DetermGETXGenerator.h	/^  NodeID m_node;$/;"	m	class:DetermGETXGenerator
m_node	tester/DetermInvGenerator.h	/^  NodeID m_node;$/;"	m	class:DetermInvGenerator
m_node	tester/DetermSeriesGETSGenerator.h	/^  NodeID m_node;$/;"	m	class:DetermSeriesGETSGenerator
m_node	tester/RequestGenerator.h	/^  NodeID m_node;$/;"	m	class:RequestGenerator
m_node	tester/depreceated/XactAbortRequestGenerator.h	/^  NodeID m_node;$/;"	m	class:XactAbortRequestGenerator
m_node	tester/depreceated/XactRequestGenerator.h	/^  NodeID m_node;$/;"	m	class:XactRequestGenerator
m_node_num	recorder/TraceRecord.h	/^  NodeID m_node_num;$/;"	m	class:TraceRecord
m_nodes	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	int m_nodes;$/;"	m	class:GarnetNetwork_d
m_nodes	network/garnet-flexible-pipeline/GarnetNetwork.h	/^	int m_nodes;$/;"	m	class:GarnetNetwork
m_nodes	network/simple/SimpleNetwork.h	/^  int m_nodes;$/;"	m	class:SimpleNetwork
m_nodes	network/simple/Topology.h	/^  NodeID m_nodes;$/;"	m	class:Topology
m_non_stallable	simics/depreceated/SimicsDriver.h	/^  integer_t m_non_stallable;$/;"	m	class:SimicsDriver
m_not_avail_count	buffers/MessageBuffer.h	/^  int m_not_avail_count;  \/\/ count the # of times I didn't have N slots available$/;"	m	class:MessageBuffer
m_numCompletionsPerNode	tester/DeterministicDriver.h	/^  int m_numCompletionsPerNode;  $/;"	m	class:DeterministicDriver
m_numContextSwitches	simics/depreceated/SimicsHypervisor.h	/^  unsigned int m_numContextSwitches;$/;"	m	class:THEntry
m_numL2Banks	system/TCpredictor.h	/^    int m_numL2Banks;$/;"	m	class:TCpredictorPerL2
m_numXactPageRemaps	simics/depreceated/SimicsHypervisor.h	/^  unsigned int m_numXactPageRemaps;$/;"	m	class:THEntry
m_num_BA_broadcasts	profiler/Profiler.h	/^  int m_num_BA_broadcasts;$/;"	m	class:Profiler
m_num_BA_unicasts	profiler/Profiler.h	/^  int m_num_BA_unicasts;$/;"	m	class:Profiler
m_num_L2_banks	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_num_L2_banks;$/;"	m	struct:gpusim_ruby_config
m_num_TBE	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_num_TBE;$/;"	m	struct:gpusim_ruby_config
m_num_buffer_reads	network/garnet-fixed-pipeline/InputUnit_d.h	/^	double m_num_buffer_writes, m_num_buffer_reads;$/;"	m	class:InputUnit_d
m_num_buffer_writes	network/garnet-fixed-pipeline/InputUnit_d.h	/^	double m_num_buffer_writes, m_num_buffer_reads;$/;"	m	class:InputUnit_d
m_num_hashes	system/H3BloomFilter.h	/^  int m_num_hashes;$/;"	m	class:H3BloomFilter
m_num_hashes	system/MultiBitSelBloomFilter.h	/^  int m_num_hashes;$/;"	m	class:MultiBitSelBloomFilter
m_num_inports	network/garnet-fixed-pipeline/SWallocator_d.h	/^	int m_num_inports, m_num_outports;$/;"	m	class:SWallocator_d
m_num_inports	network/garnet-fixed-pipeline/Switch_d.h	/^	int m_num_inports;$/;"	m	class:Switch_d
m_num_inports	network/garnet-fixed-pipeline/VCallocator_d.h	/^	int m_num_inports;$/;"	m	class:VCallocator_d
m_num_levels	system/PseudoLRUPolicy.h	/^  unsigned int m_num_levels;         \/** number of levels in the tree *\/$/;"	m	class:PseudoLRUPolicy
m_num_memories	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_num_memories;$/;"	m	struct:gpusim_ruby_config
m_num_outports	network/garnet-fixed-pipeline/SWallocator_d.h	/^	int m_num_inports, m_num_outports;$/;"	m	class:SWallocator_d
m_num_outports	network/garnet-fixed-pipeline/VCallocator_d.h	/^	int m_num_outports;$/;"	m	class:VCallocator_d
m_num_processors	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_num_processors;$/;"	m	struct:gpusim_ruby_config
m_num_procs_per_cluster	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_num_procs_per_cluster;$/;"	m	struct:gpusim_ruby_config
m_num_seq_entries	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_num_seq_entries;$/;"	m	struct:gpusim_ruby_config
m_num_sets	system/AbstractReplacementPolicy.h	/^  unsigned int m_num_sets;       \/** total number of sets *\/$/;"	m	class:AbstractReplacementPolicy
m_num_threads_per_proc	system/GlobalWriteVector.h	/^   int m_num_threads_per_proc;$/;"	m	class:GlobalWriteVector
m_num_vcs	network/garnet-fixed-pipeline/InputUnit_d.h	/^	int m_num_vcs;$/;"	m	class:InputUnit_d
m_num_vcs	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:NetworkInterface_d
m_num_vcs	network/garnet-fixed-pipeline/OutputUnit_d.h	/^	int m_num_vcs;$/;"	m	class:OutputUnit_d
m_num_vcs	network/garnet-fixed-pipeline/Router_d.h	/^	int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:Router_d
m_num_vcs	network/garnet-fixed-pipeline/SWallocator_d.h	/^	int m_num_vcs, m_vc_per_vnet;$/;"	m	class:SWallocator_d
m_num_vcs	network/garnet-fixed-pipeline/Switch_d.h	/^	int m_num_vcs;$/;"	m	class:Switch_d
m_num_vcs	network/garnet-fixed-pipeline/VCallocator_d.h	/^	int m_num_vcs, m_vc_per_vnet;$/;"	m	class:VCallocator_d
m_num_vcs	network/garnet-flexible-pipeline/NetworkInterface.h	/^	int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:NetworkInterface
m_num_vcs	network/garnet-flexible-pipeline/Router.h	/^	int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:Router
m_num_warps_per_processor	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_num_warps_per_processor;$/;"	m	struct:gpusim_ruby_config
m_number_of_switches	network/simple/Topology.h	/^  int m_number_of_switches;$/;"	m	class:Topology
m_numtbeQuery	profiler/Profiler.h	/^  integer_t m_numtbeQuery;$/;"	m	class:Profiler
m_offset	system/NonCountingBloomFilter.h	/^  int m_offset;$/;"	m	class:NonCountingBloomFilter
m_offsets	simics/depreceated/ContiguousAddressTranslator.h	/^  Vector<uint64> m_offsets; \/* Def, m_offsets[n] = Sum, vary k from 0 to n-1 of offset[k], aka the sum of all previous sizes *\/$/;"	m	class:ContiguousAddressTranslator
m_oldRequest	system/MemoryControl.h	/^  int* m_oldRequest;$/;"	m	class:MemoryControl
m_opal_intf	interfaces/OpalInterface.h	/^  mf_opal_api_t  *m_opal_intf;$/;"	m	class:OpalInterface
m_opcode	tester/Instruction.h	/^  Opcode m_opcode;$/;"	m	class:Instruction
m_ordered	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	Vector<bool> m_ordered;$/;"	m	class:GarnetNetwork_d
m_ordered	network/garnet-flexible-pipeline/GarnetNetwork.h	/^	Vector<bool> m_ordered;$/;"	m	class:GarnetNetwork
m_ordered	network/simple/SimpleNetwork.h	/^  Vector<bool> m_ordered;$/;"	m	class:SimpleNetwork
m_ordering_set	buffers/MessageBuffer.h	/^  bool m_ordering_set;$/;"	m	class:MessageBuffer
m_other_initiator_counter	simics/depreceated/SimicsDriver.h	/^  integer_t m_other_initiator_counter;$/;"	m	class:SimicsDriver
m_out	network/simple/PerfectSwitch.h	/^  Vector<Vector<MessageBuffer*> > m_out;$/;"	m	class:PerfectSwitch
m_out	network/simple/Throttle.h	/^  Vector<MessageBuffer*> m_out;$/;"	m	class:Throttle
m_out_buffer	network/garnet-fixed-pipeline/OutputUnit_d.h	/^	flitBuffer_d *m_out_buffer; \/\/ This is for the network link to consume$/;"	m	class:OutputUnit_d
m_out_link	network/garnet-fixed-pipeline/OutputUnit_d.h	/^	NetworkLink_d *m_out_link;$/;"	m	class:OutputUnit_d
m_out_link	network/garnet-flexible-pipeline/Router.h	/^	Vector<NetworkLink *> m_out_link;$/;"	m	class:Router
m_out_link_vec	common/Consumer.h	/^  Vector< Vector<MessageBuffer*> > m_out_link_vec;  $/;"	m	class:Consumer
m_out_port	network/garnet-flexible-pipeline/NetworkLink.h	/^	int m_in_port, m_out_port;$/;"	m	class:NetworkLink
m_out_src_queue	network/garnet-flexible-pipeline/Router.h	/^	Vector<flitBuffer *> m_out_src_queue; \/\/ These are source queues for the output link$/;"	m	class:Router
m_out_vc_state	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	Vector<OutVcState_d *> m_out_vc_state;$/;"	m	class:NetworkInterface_d
m_out_vc_state	network/garnet-flexible-pipeline/NetworkInterface.h	/^	Vector<OutVcState *> m_out_vc_state;$/;"	m	class:NetworkInterface
m_out_vc_state	network/garnet-flexible-pipeline/Router.h	/^	Vector<Vector<OutVcState * > > m_out_vc_state;$/;"	m	class:Router
m_outport	network/garnet-fixed-pipeline/flit_d.h	/^	int m_outport;$/;"	m	class:flit_d
m_output_unit	network/garnet-fixed-pipeline/Router_d.h	/^	Vector<OutputUnit_d *> m_output_unit;$/;"	m	class:Router_d
m_output_unit	network/garnet-fixed-pipeline/SWallocator_d.h	/^	Vector<OutputUnit_d *> m_output_unit;$/;"	m	class:SWallocator_d
m_output_unit	network/garnet-fixed-pipeline/Switch_d.h	/^	Vector<OutputUnit_d *> m_output_unit;$/;"	m	class:Switch_d
m_output_unit	network/garnet-fixed-pipeline/VCallocator_d.h	/^	Vector<OutputUnit_d *> m_output_unit ;$/;"	m	class:VCallocator_d
m_output_vc	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	int m_output_vc;$/;"	m	class:VirtualChannel_d
m_output_vc	network/garnet-flexible-pipeline/InVcState.h	/^	int m_output_vc;$/;"	m	class:InVcState
m_outstanding_count	system/Sequencer.h	/^  int m_outstanding_count;$/;"	m	class:Sequencer
m_outstanding_persistent_requests	profiler/Profiler.h	/^  Histogram m_outstanding_persistent_requests;$/;"	m	class:Profiler
m_outstanding_requests	profiler/Profiler.h	/^  Histogram m_outstanding_requests;$/;"	m	class:Profiler
m_outvc_is_req	network/garnet-fixed-pipeline/VCallocator_d.h	/^	Vector<Vector<bool > > m_outvc_is_req; $/;"	m	class:VCallocator_d
m_outvc_req	network/garnet-fixed-pipeline/VCallocator_d.h	/^	Vector<Vector<Vector<Vector<bool > > > > m_outvc_req; \/\/ [outport][outvc][inpotr][invc]. set true in the first phase of allocation$/;"	m	class:VCallocator_d
m_outvc_state	network/garnet-fixed-pipeline/OutputUnit_d.h	/^        Vector<OutVcState_d *> m_outvc_state; \/\/ vc state of downstream router$/;"	m	class:OutputUnit_d
m_p_dyn_clock	network/orion/NetworkPowerArea.h	/^	double m_p_dyn_clock;$/;"	m	class:RouterPowerArea_d
m_p_dyn_in_buf	network/orion/NetworkPowerArea.h	/^	double m_p_dyn_in_buf;$/;"	m	class:RouterPowerArea_d
m_p_dyn_sw	network/orion/NetworkPowerArea.h	/^	double m_p_dyn_sw;$/;"	m	class:RouterPowerArea_d
m_p_dyn_total	network/orion/NetworkPowerArea.h	/^	double m_p_dyn_total;$/;"	m	class:RouterPowerArea_d
m_p_dyn_vc	network/orion/NetworkPowerArea.h	/^	double m_p_dyn_vc;$/;"	m	class:RouterPowerArea_d
m_p_dyn_xbar	network/orion/NetworkPowerArea.h	/^	double m_p_dyn_xbar;$/;"	m	class:RouterPowerArea_d
m_p_nArray	common/OptBigSet.h	/^  long * m_p_nArray;      \/\/ an word array to hold the bits in the set$/;"	m	class:Set
m_p_nArray_Static	common/OptBigSet.h	/^  long m_p_nArray_Static[NUMBER_WORDS_PER_SET];$/;"	m	class:Set
m_p_static_clock	network/orion/NetworkPowerArea.h	/^	double m_p_static_clock;$/;"	m	class:RouterPowerArea_d
m_p_static_in_buf	network/orion/NetworkPowerArea.h	/^	double m_p_static_in_buf;$/;"	m	class:RouterPowerArea_d
m_p_static_sw	network/orion/NetworkPowerArea.h	/^	double m_p_static_sw;$/;"	m	class:RouterPowerArea_d
m_p_static_total	network/orion/NetworkPowerArea.h	/^	double m_p_static_total;$/;"	m	class:RouterPowerArea_d
m_p_static_vc	network/orion/NetworkPowerArea.h	/^	double m_p_static_vc;$/;"	m	class:RouterPowerArea_d
m_p_static_xbar	network/orion/NetworkPowerArea.h	/^	double m_p_static_xbar;$/;"	m	class:RouterPowerArea_d
m_pageMappings_ptr	simics/depreceated/SimicsHypervisor.h	/^  Map<physical_address_t, physical_address_t>* m_pageMappings_ptr;$/;"	m	class:PHEntry
m_page_filter	system/MultiGrainBloomFilter.h	/^  Vector<int> m_page_filter;$/;"	m	class:MultiGrainBloomFilter
m_page_filter_size	system/MultiGrainBloomFilter.h	/^  int m_page_filter_size;$/;"	m	class:MultiGrainBloomFilter
m_page_filter_size_bits	system/MultiGrainBloomFilter.h	/^  int m_page_filter_size_bits;$/;"	m	class:MultiGrainBloomFilter
m_par_filter_size	system/H3BloomFilter.h	/^  int m_par_filter_size;$/;"	m	class:H3BloomFilter
m_par_filter_size	system/MultiBitSelBloomFilter.h	/^  int m_par_filter_size;$/;"	m	class:MultiBitSelBloomFilter
m_par_filter_size_bits	system/H3BloomFilter.h	/^  int m_par_filter_size_bits;$/;"	m	class:H3BloomFilter
m_par_filter_size_bits	system/MultiBitSelBloomFilter.h	/^  int m_par_filter_size_bits;$/;"	m	class:MultiBitSelBloomFilter
m_pc	profiler/LifetimeTrace.h	/^    int m_pc;                       \/\/ program counter$/;"	m	struct:LifetimeAccess
m_pc	system/StoreBuffer.C	/^  Address m_pc;$/;"	m	struct:StoreBufferEntry	file:
m_pc	tester/Check.h	/^  Address m_pc;$/;"	m	class:Check
m_pc	tester/depreceated/XactAbortRequestGenerator.h	/^  int m_pc;$/;"	m	class:XactAbortRequestGenerator
m_pc	tester/depreceated/XactRequestGenerator.h	/^  int m_pc;$/;"	m	class:XactRequestGenerator
m_pc_address	recorder/TraceRecord.h	/^  Address m_pc_address;$/;"	m	class:TraceRecord
m_pcsharer_leases	system/TCpredictor.h	/^    std::map<IntPair, int> m_pcsharer_leases;$/;"	m	class:TCpredictorPCAdaptive
m_pending	system/StoreBuffer.h	/^  bool m_pending;$/;"	m	class:StoreBuffer
m_pending_address	system/StoreBuffer.h	/^  Address m_pending_address;$/;"	m	class:StoreBuffer
m_perProcEndTransaction	profiler/Profiler.h	/^  Vector<integer_t> m_perProcEndTransaction;$/;"	m	class:Profiler
m_perProcStartTransaction	profiler/Profiler.h	/^  Vector<integer_t> m_perProcStartTransaction;$/;"	m	class:Profiler
m_perProcSupervisorMisses	profiler/Profiler.h	/^  Vector<integer_t> m_perProcSupervisorMisses;$/;"	m	class:Profiler
m_perProcTotalMisses	profiler/Profiler.h	/^  Vector<integer_t> m_perProcTotalMisses;$/;"	m	class:Profiler
m_perProcUserMisses	profiler/Profiler.h	/^  Vector<integer_t> m_perProcUserMisses;$/;"	m	class:Profiler
m_peraddr_config_average	system/TCpredictor.h	/^    std::map<int, int> m_peraddr_config_average;$/;"	m	class:TCpredictorAddrfixed
m_perfect_memory_firstcall_flags	simics/depreceated/SimicsDriver.h	/^  Vector<bool> m_perfect_memory_firstcall_flags;$/;"	m	class:SimicsDriver
m_perfect_switch_ptr	network/simple/Switch.h	/^  PerfectSwitch* m_perfect_switch_ptr;$/;"	m	class:Switch
m_periodic_output_file_ptr	profiler/Profiler.h	/^  ostream* m_periodic_output_file_ptr;$/;"	m	class:Profiler
m_permission	system/PerfectCacheMemory.h	/^  AccessPermission m_permission;$/;"	m	class:PerfectCacheLineState
m_perpc_config_average	system/TCpredictor.h	/^    std::map<int, int> m_perpc_config_average;$/;"	m	class:TCpredictorPCfixed
m_persistentPredictionProfileHisto	profiler/AddressProfiler.h	/^  Histogram m_persistentPredictionProfileHisto;$/;"	m	class:AddressProfiler
m_persistentPredictionProfileMap	profiler/AddressProfiler.h	/^  Map<Address, AccessTraceForAddress>* m_persistentPredictionProfileMap;$/;"	m	class:AddressProfiler
m_popMandatoryQueue	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::m_popMandatoryQueue(const Address& addr)$/;"	f	class:L1Cache_Controller
m_port_req	network/garnet-fixed-pipeline/SWallocator_d.h	/^	Vector<Vector<bool > > m_port_req;$/;"	m	class:SWallocator_d
m_possible	generated/MI_example/Directory_Profiler.h	/^  bool m_possible[Directory_State_NUM][Directory_Event_NUM];$/;"	m	class:Directory_Profiler
m_possible	generated/MI_example/L1Cache_Profiler.h	/^  bool m_possible[L1Cache_State_NUM][L1Cache_Event_NUM];$/;"	m	class:L1Cache_Profiler
m_predictionOpportunities	profiler/Profiler.h	/^  int m_predictionOpportunities;$/;"	m	class:Profiler
m_prediction_lifetime	system/TCpredictor.h	/^        Time m_prediction_lifetime;     \/\/ average lifetime observed so far$/;"	m	struct:TCpredictorPCSampler::predictionInfo
m_prediction_table	system/TCpredictor.h	/^    map_prediction_table_t m_prediction_table;$/;"	m	class:TCpredictorPCSampler
m_predictions	profiler/Profiler.h	/^  int m_predictions;$/;"	m	class:Profiler
m_predictor	system/TCpredictor.h	/^  TCpredictorBase* m_predictor;$/;"	m	class:TCpredictorContainer
m_prefetchWaitHistogram	profiler/Profiler.h	/^  Histogram m_prefetchWaitHistogram;$/;"	m	class:Profiler
m_prefetch_counter	simics/depreceated/SimicsDriver.h	/^  integer_t m_prefetch_counter;$/;"	m	class:SimicsDriver
m_prefetches	profiler/CacheProfiler.h	/^  int64 m_prefetches;$/;"	m	class:CacheProfiler
m_primary_context_PrivilegeToUserMode	simics/depreceated/SimicsHypervisor.h	/^  Vector<uinteger_t>         m_primary_context_PrivilegeToUserMode;$/;"	m	class:SimicsHypervisor
m_primary_context_UserToPrivilegeMode	simics/depreceated/SimicsHypervisor.h	/^  Vector<uinteger_t>         m_primary_context_UserToPrivilegeMode;$/;"	m	class:SimicsHypervisor
m_prio_heap	buffers/MessageBuffer.h	/^  PrioHeap<MessageBufferNode> m_prio_heap;$/;"	m	class:MessageBuffer
m_prio_heap_ptr	eventqueue/EventQueue.h	/^  PrioHeap<EventQueueNode>* m_prio_heap_ptr;$/;"	m	class:EventQueue
m_priority_rank	buffers/MessageBuffer.h	/^  int m_priority_rank;$/;"	m	class:MessageBuffer
m_privateL1Evictions	profiler/Profiler.h	/^  int m_privateL1Evictions;                                 \/\/ For profiling private evictions$/;"	m	class:Profiler
m_proc	simics/depreceated/SimicsProcessor.h	/^  int m_proc;$/;"	m	class:SimicsProcessor
m_processPHEntry	simics/depreceated/SimicsHypervisor.h	/^  PHEntry* m_processPHEntry;$/;"	m	class:THEntry
m_processesMap_ptr	simics/depreceated/SimicsHypervisor.h	/^  Map<uinteger_t, PHEntry*>          *m_processesMap_ptr;$/;"	m	class:SimicsHypervisor
m_processors	simics/depreceated/SimicsDriver.h	/^  Vector<SimicsProcessor*> m_processors;$/;"	m	class:SimicsDriver
m_processors	simics/depreceated/SimicsHypervisor.h	/^  Vector<SimicsProcessor*> m_processors;$/;"	m	class:SimicsHypervisor
m_procsInXactMap_ptr	profiler/Profiler.h	/^  Map <int, int>* m_procsInXactMap_ptr;$/;"	m	class:Profiler
m_profiled	generated/MI_example/CacheMsg.h	/^  bool m_profiled; \/**< Has the request been profiled yet?*\/$/;"	m	class:CacheMsg
m_profiler_ptr	system/System.h	/^  Profiler* m_profiler_ptr;$/;"	m	class:System
m_profiling_bandwidth	profiler/Profiler.h	/^  Map<string,unsigned long>* m_profiling_bandwidth;$/;"	m	class:Profiler
m_profiling_bandwidth_alt	profiler/Profiler.h	/^  Map<string,unsigned long>* m_profiling_bandwidth_alt;$/;"	m	class:Profiler
m_programCounterAccessTrace	profiler/AddressProfiler.h	/^  Map<Address, AccessTraceForAddress>* m_programCounterAccessTrace;$/;"	m	class:AddressProfiler
m_queue_ptr	system/StoreBuffer.h	/^  Vector<StoreBufferEntry>* m_queue_ptr;$/;"	m	class:StoreBuffer
m_queueing_latency	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	double m_network_latency, m_queueing_latency;$/;"	m	class:GarnetNetwork_d
m_racey_pseudo_threads	tester/RaceyDriver.h	/^  Vector<RaceyPseudoThread*> m_racey_pseudo_threads;$/;"	m	class:RaceyDriver
m_randomization	buffers/MessageBuffer.h	/^  bool m_randomization;$/;"	m	class:MessageBuffer
m_rank_bit_0	system/MemoryControl.h	/^  int m_rank_bit_0;$/;"	m	class:MemoryControl
m_rank_rank_delay	system/MemoryControl.h	/^  int m_rank_rank_delay;$/;"	m	class:MemoryControl
m_ranks_per_dimm	system/MemoryControl.h	/^  int m_ranks_per_dimm;$/;"	m	class:MemoryControl
m_readRequestTable_ptr	system/Sequencer.h	/^  Map<Address, CacheMsg>** m_readRequestTable_ptr;$/;"	m	class:Sequencer
m_readSetEmptyChecks	profiler/Profiler.h	/^  long long int m_readSetEmptyChecks;$/;"	m	class:Profiler
m_readSetMatch	profiler/Profiler.h	/^  long long int m_readSetMatch;$/;"	m	class:Profiler
m_readSetMatch_ptr	profiler/Profiler.h	/^  Map <Address, int>* m_readSetMatch_ptr;$/;"	m	class:Profiler
m_readSetNoMatch	profiler/Profiler.h	/^  long long int m_readSetNoMatch;$/;"	m	class:Profiler
m_readSetNoMatch_ptr	profiler/Profiler.h	/^  Map <Address, int>* m_readSetNoMatch_ptr;$/;"	m	class:Profiler
m_read_sharing_histogram	profiler/Profiler.h	/^  Histogram m_read_sharing_histogram;$/;"	m	class:Profiler
m_read_write_delay	system/MemoryControl.h	/^  int m_read_write_delay;$/;"	m	class:MemoryControl
m_real_time_start_time	profiler/Profiler.h	/^  time_t m_real_time_start_time;$/;"	m	class:Profiler
m_reason	profiler/LifetimeTrace.h	/^    LifetimeEndReason_t m_reason;   \/\/ reason that lifetime ended$/;"	m	struct:LifetimeAccess
m_records_ptr	recorder/CacheRecorder.h	/^  PrioHeap<TraceRecord>* m_records_ptr;$/;"	m	class:CacheRecorder
m_refresh_bank	system/MemoryControl.h	/^  int m_refresh_bank;       \/\/ which bank to refresh next$/;"	m	class:MemoryControl
m_refresh_count	system/MemoryControl.h	/^  int m_refresh_count;      \/\/ cycles until next refresh$/;"	m	class:MemoryControl
m_refresh_period	system/MemoryControl.h	/^  int m_refresh_period;$/;"	m	class:MemoryControl
m_refresh_period_system	system/MemoryControl.h	/^  int m_refresh_period_system;$/;"	m	class:MemoryControl
m_register	tester/depreceated/XactAbortRequestGenerator.h	/^  uint8 m_register;$/;"	m	class:XactAbortRequestGenerator
m_register	tester/depreceated/XactRequestGenerator.h	/^  uint8 m_register;$/;"	m	class:XactRequestGenerator
m_release_latency	tester/SyntheticDriver.h	/^  Histogram m_release_latency;$/;"	m	class:SyntheticDriver
m_remoteReadSetMatch_ptr	profiler/Profiler.h	/^  Map <Address, int>* m_remoteReadSetMatch_ptr;$/;"	m	class:Profiler
m_remoteReadSetNoMatch_ptr	profiler/Profiler.h	/^  Map <Address, int>* m_remoteReadSetNoMatch_ptr;$/;"	m	class:Profiler
m_remoteWriteSetMatch_ptr	profiler/Profiler.h	/^  Map <Address, int>* m_remoteWriteSetMatch_ptr;$/;"	m	class:Profiler
m_remoteWriteSetNoMatch_ptr	profiler/Profiler.h	/^  Map <Address, int>* m_remoteWriteSetNoMatch_ptr;$/;"	m	class:Profiler
m_replacementPolicy_ptr	system/CacheMemory.h	/^  AbstractReplacementPolicy *m_replacementPolicy_ptr;$/;"	m	class:CacheMemory
m_requestProfileMap_ptr	profiler/Profiler.h	/^  Map <string, int>* m_requestProfileMap_ptr;$/;"	m	class:Profiler
m_requestSize	profiler/CacheProfiler.h	/^  Histogram m_requestSize;$/;"	m	class:CacheProfiler
m_requestTypeVec_ptr	profiler/CacheProfiler.h	/^  Vector < int >* m_requestTypeVec_ptr;$/;"	m	class:CacheProfiler
m_request_generator_vector	tester/SyntheticDriver.h	/^  Vector<RequestGenerator*> m_request_generator_vector;$/;"	m	class:SyntheticDriver
m_request_missed_counter	simics/depreceated/SimicsDriver.h	/^  integer_t m_request_missed_counter;$/;"	m	class:SimicsDriver
m_request_to_write	system/NodePersistentTable.C	/^  Set m_request_to_write;$/;"	m	class:NodePersistentTableEntry	file:
m_request_to_write	system/PersistentTable.C	/^  NetDest m_request_to_write;$/;"	m	class:PersistentTableEntry	file:
m_requests	profiler/CacheProfiler.h	/^  int64 m_requests;$/;"	m	class:CacheProfiler
m_requests	profiler/Profiler.h	/^  int m_requests;$/;"	m	class:Profiler
m_response_queue	system/GpusimDramInterface.h	/^   list<MsgPtr*> m_response_queue;$/;"	m	class:GpusimDramInterface
m_response_queue	system/MemoryControl.h	/^  list<MemoryNode> m_response_queue;$/;"	m	class:MemoryControl
m_retryProfileHisto	profiler/AddressProfiler.h	/^  Histogram m_retryProfileHisto;$/;"	m	class:AddressProfiler
m_retryProfileHistoRead	profiler/AddressProfiler.h	/^  Histogram m_retryProfileHistoRead;$/;"	m	class:AddressProfiler
m_retryProfileHistoWrite	profiler/AddressProfiler.h	/^  Histogram m_retryProfileHistoWrite;$/;"	m	class:AddressProfiler
m_retryProfileMap	profiler/AddressProfiler.h	/^  Map<Address, AccessTraceForAddress>* m_retryProfileMap;$/;"	m	class:AddressProfiler
m_roundRobin	system/MemoryControl.h	/^  int m_roundRobin;         \/\/ which bank queue was last granted$/;"	m	class:MemoryControl
m_round_robin_inport	network/garnet-fixed-pipeline/SWallocator_d.h	/^	Vector<int > m_round_robin_inport;$/;"	m	class:SWallocator_d
m_round_robin_inport	network/garnet-flexible-pipeline/Router.h	/^	int m_round_robin_inport, m_round_robin_start; \/\/ for vc arbitration$/;"	m	class:Router
m_round_robin_invc	network/garnet-fixed-pipeline/VCallocator_d.h	/^	Vector<Vector <int > > m_round_robin_invc; \/\/ First stage of arbitration where all vcs select an output vc to content for$/;"	m	class:VCallocator_d
m_round_robin_invc	network/garnet-flexible-pipeline/Router.h	/^	Vector<int > m_round_robin_invc; \/\/ For every outport. for vc arbitration$/;"	m	class:Router
m_round_robin_outport	network/garnet-fixed-pipeline/SWallocator_d.h	/^	Vector<int > m_round_robin_outport;$/;"	m	class:SWallocator_d
m_round_robin_outvc	network/garnet-fixed-pipeline/VCallocator_d.h	/^	Vector<Vector <pair<int, int> > > m_round_robin_outvc; \/\/ Arbiter for every output vc$/;"	m	class:VCallocator_d
m_round_robin_start	network/garnet-flexible-pipeline/Router.h	/^	int m_round_robin_inport, m_round_robin_start; \/\/ for vc arbitration$/;"	m	class:Router
m_round_robin_start	network/simple/PerfectSwitch.h	/^  int m_round_robin_start;$/;"	m	class:PerfectSwitch
m_route	network/garnet-flexible-pipeline/InVcState.h	/^	int m_route;$/;"	m	class:InVcState
m_router	network/garnet-fixed-pipeline/InputUnit_d.h	/^	Router_d *m_router;$/;"	m	class:InputUnit_d
m_router	network/garnet-fixed-pipeline/OutputUnit_d.h	/^	Router_d *m_router;$/;"	m	class:OutputUnit_d
m_router	network/garnet-fixed-pipeline/RoutingUnit_d.h	/^	Router_d *m_router;$/;"	m	class:RoutingUnit_d
m_router	network/garnet-fixed-pipeline/SWallocator_d.h	/^	Router_d *m_router;$/;"	m	class:SWallocator_d
m_router	network/garnet-fixed-pipeline/Switch_d.h	/^	Router_d *m_router;$/;"	m	class:Switch_d
m_router	network/garnet-fixed-pipeline/VCallocator_d.h	/^	Router_d *m_router;$/;"	m	class:VCallocator_d
m_router	network/garnet-flexible-pipeline/VCarbiter.h	/^	Router *m_router;$/;"	m	class:VCarbiter
m_router_buffers	network/garnet-flexible-pipeline/Router.h	/^	Vector<Vector<flitBuffer *> > m_router_buffers; \/\/ These are essentially output buffers$/;"	m	class:Router
m_router_powerarea	network/garnet-fixed-pipeline/Router_d.h	/^    RouterPowerArea_d m_router_powerarea;$/;"	m	class:Router_d
m_router_ptr_vector	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	Vector<Router_d *> m_router_ptr_vector;   \/\/ All Routers in Network$/;"	m	class:GarnetNetwork_d
m_router_ptr_vector	network/garnet-flexible-pipeline/GarnetNetwork.h	/^	Vector<Router *> m_router_ptr_vector;   \/\/ All Routers in Network$/;"	m	class:GarnetNetwork
m_routing_table	network/garnet-fixed-pipeline/RoutingUnit_d.h	/^	Vector<NetDest > m_routing_table;$/;"	m	class:RoutingUnit_d
m_routing_table	network/garnet-flexible-pipeline/Router.h	/^	Vector<NetDest> m_routing_table;$/;"	m	class:Router
m_routing_table	network/simple/PerfectSwitch.h	/^  Vector<NetDest> m_routing_table;$/;"	m	class:PerfectSwitch
m_routing_unit	network/garnet-fixed-pipeline/Router_d.h	/^	RoutingUnit_d *m_routing_unit;$/;"	m	class:Router_d
m_ruby_start	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	Time m_ruby_start;$/;"	m	class:GarnetNetwork_d
m_ruby_start	network/garnet-flexible-pipeline/GarnetNetwork.h	/^	Time m_ruby_start;$/;"	m	class:GarnetNetwork
m_ruby_start	network/simple/Throttle.h	/^  Time m_ruby_start;$/;"	m	class:Throttle
m_ruby_start	profiler/Profiler.h	/^  Time m_ruby_start;$/;"	m	class:Profiler
m_sID	network/simple/Throttle.h	/^  int m_sID;$/;"	m	class:Throttle
m_sampler_table	system/TCpredictor.h	/^    map_sampler_table_t m_sampler_table;$/;"	m	class:TCpredictorPCSampler
m_sat_counter	system/TCpredictor.h	/^        int m_sat_counter;              \/\/ saturating counter$/;"	m	struct:TCpredictorPCSampler::predictionInfo
m_sat_counter_max	system/TCpredictor.h	/^    int m_sat_counter_max;$/;"	m	class:TCpredictorPCSampler
m_sector_bits	system/BulkBloomFilter.h	/^  int m_sector_bits;$/;"	m	class:BulkBloomFilter
m_seen_atomic	system/StoreBuffer.h	/^  bool m_seen_atomic;$/;"	m	class:StoreBuffer
m_seqnum	simics/depreceated/SimicsProcessor.h	/^  uint64 m_seqnum;$/;"	m	class:SimicsProcessor
m_sequencer	simics/depreceated/SimicsProcessor.h	/^  Sequencer* m_sequencer;$/;"	m	class:SimicsProcessor
m_sequencer_not_ready_counter	simics/depreceated/SimicsDriver.h	/^  integer_t m_sequencer_not_ready_counter;$/;"	m	class:SimicsDriver
m_sequencer_requests	profiler/Profiler.h	/^  Histogram m_sequencer_requests;$/;"	m	class:Profiler
m_sharing	profiler/AccessTraceForAddress.h	/^  uint64 m_sharing;$/;"	m	class:AccessTraceForAddress
m_sharing_miss_counter	profiler/AddressProfiler.h	/^  int64 m_sharing_miss_counter;$/;"	m	class:AddressProfiler
m_simicsStartTime	interfaces/OpalInterface.h	/^  Time            m_simicsStartTime;$/;"	m	class:OpalInterface
m_size	buffers/MessageBuffer.h	/^  int m_size;$/;"	m	class:MessageBuffer
m_size	common/Set.h	/^  int m_size;$/;"	m	class:Set
m_size	gpusim_ruby/gpusim_ruby.h	/^   unsigned m_size;$/;"	m	struct:ruby_dram_req_info
m_size	network/garnet-fixed-pipeline/flit_d.h	/^	int m_size;$/;"	m	class:flit_d
m_size	network/garnet-flexible-pipeline/flit.h	/^	int m_size;$/;"	m	class:flit
m_size	system/DirectoryMemory.h	/^  int m_size;  \/\/ # of memory module blocks for this directory$/;"	m	class:DirectoryMemory
m_size	system/StoreBuffer.C	/^  int m_size;$/;"	m	struct:StoreBufferEntry	file:
m_size	system/StoreBuffer.h	/^  int m_size;$/;"	m	class:StoreBuffer
m_size	tester/depreceated/XactRequestGenerator.h	/^  int m_size;$/;"	m	class:XactRequestGenerator
m_size_at_cycle_start	buffers/MessageBuffer.h	/^  int m_size_at_cycle_start;$/;"	m	class:MessageBuffer
m_size_last_time_size_checked	buffers/MessageBuffer.h	/^  int m_size_last_time_size_checked;$/;"	m	class:MessageBuffer
m_sizes	simics/depreceated/ContiguousAddressTranslator.h	/^  Vector<uint64> m_sizes;$/;"	m	class:ContiguousAddressTranslator
m_skipL1RequestTable_ptr	system/Sequencer.h	/^  Map<uint64, CacheMsg>* m_skipL1RequestTable_ptr;$/;"	m	class:Sequencer
m_skipL1_callback_queue	interfaces/GpusimInterface.h	/^  std::vector<skipL1_callback_queue> m_skipL1_callback_queue;$/;"	m	class:GpusimInterface
m_skip_bits	system/MultiBitSelBloomFilter.h	/^  int m_skip_bits;$/;"	m	class:MultiBitSelBloomFilter
m_stage	network/garnet-fixed-pipeline/flit_d.h	/^	pair<flit_stage, Time> m_stage;$/;"	m	class:flit_d
m_startAddrs	simics/depreceated/ContiguousAddressTranslator.h	/^  Vector<uint64> m_startAddrs;$/;"	m	class:ContiguousAddressTranslator
m_starting_cycle	common/Debug.h	/^  Time m_starting_cycle;$/;"	m	class:Debug
m_starving	system/NodePersistentTable.C	/^  Set m_starving;$/;"	m	class:NodePersistentTableEntry	file:
m_starving	system/PersistentTable.C	/^  NetDest m_starving;$/;"	m	class:PersistentTableEntry	file:
m_stats_addr_found	system/TCpredictor.h	/^    int64 m_stats_addr_found;$/;"	m	class:TCpredictorAddrfixed
m_stats_addr_notfound	system/TCpredictor.h	/^    int64 m_stats_addr_notfound;$/;"	m	class:TCpredictorAddrfixed
m_stats_defined_pc_count	system/TCpredictor.h	/^    std::map<int, int> m_stats_defined_pc_count;$/;"	m	class:TCpredictorPCfixed
m_stats_delta_size	system/TCpredictor.h	/^    Histogram m_stats_delta_size;$/;"	m	class:TCpredictorGlobal
m_stats_delta_sizes	system/TCpredictor.h	/^    Histogram m_stats_delta_sizes; \/\/ keep stats on leases given$/;"	m	class:TCpredictorAddrfixed
m_stats_delta_sizes	system/TCpredictor.h	/^    std::map<int,Histogram> m_stats_delta_sizes; \/\/ keep stats on leases given for each pc$/;"	m	class:TCpredictorPCAdaptive
m_stats_delta_sizes	system/TCpredictor.h	/^    std::vector<Histogram> m_stats_delta_sizes;$/;"	m	class:TCpredictorPerL2
m_stats_delta_sizes_all	system/TCpredictor.h	/^    Histogram m_stats_delta_sizes_all;$/;"	m	class:TCpredictorPerL2
m_stats_lease_requests	system/TCpredictor.h	/^    int64 m_stats_lease_requests;$/;"	m	class:TCpredictorAddrfixed
m_stats_lease_requests	system/TCpredictor.h	/^    int64 m_stats_lease_requests;$/;"	m	class:TCpredictorGlobal
m_stats_lease_requests	system/TCpredictor.h	/^    int64 m_stats_lease_requests;$/;"	m	class:TCpredictorPCfixed
m_stats_lease_requests	system/TCpredictor.h	/^    std::vector<int64> m_stats_lease_requests;$/;"	m	class:TCpredictorPerL2
m_stats_pc_collisions	system/TCpredictor.h	/^    Histogram m_stats_pc_collisions;             \/\/ keep track of how many times multiple pcs exist in an L2 block$/;"	m	class:TCpredictorPCAdaptive
m_stats_period	profiler/Profiler.h	/^  integer_t m_stats_period;$/;"	m	class:Profiler
m_stats_undefined_pc_count	system/TCpredictor.h	/^    std::map<int, int> m_stats_undefined_pc_count;$/;"	m	class:TCpredictorPCfixed
m_status	tester/BarrierGenerator.h	/^  BarrierGeneratorStatus m_status;$/;"	m	class:BarrierGenerator
m_status	tester/Check.h	/^  TesterStatus m_status;$/;"	m	class:Check
m_status	tester/DetermGETXGenerator.h	/^  DetermGETXGeneratorStatus m_status;$/;"	m	class:DetermGETXGenerator
m_status	tester/DetermInvGenerator.h	/^  DetermInvGeneratorStatus m_status;$/;"	m	class:DetermInvGenerator
m_status	tester/DetermSeriesGETSGenerator.h	/^  DetermSeriesGETSGeneratorStatus m_status;$/;"	m	class:DetermSeriesGETSGenerator
m_status	tester/RequestGenerator.h	/^  RequestGeneratorStatus m_status;$/;"	m	class:RequestGenerator
m_status	tester/depreceated/XactRequestGenerator.h	/^  XactRequestGeneratorStatus m_status;$/;"	m	class:XactRequestGenerator
m_stopTableProfile	profiler/Profiler.h	/^  Histogram m_stopTableProfile;$/;"	m	class:Profiler
m_store_buffer_blocks	profiler/Profiler.h	/^  Histogram m_store_buffer_blocks;$/;"	m	class:Profiler
m_store_buffer_size	profiler/Profiler.h	/^  Histogram m_store_buffer_size;$/;"	m	class:Profiler
m_store_cache	system/StoreBuffer.h	/^  StoreCache m_store_cache;$/;"	m	class:StoreBuffer
m_store_count	profiler/StoreTrace.h	/^  Histogram m_store_count;$/;"	m	class:StoreTrace
m_store_count	tester/Check.h	/^  int m_store_count;$/;"	m	class:Check
m_store_first_to_last	profiler/StoreTrace.h	/^  Histogram m_store_first_to_last;$/;"	m	class:StoreTrace
m_store_first_to_stolen	profiler/StoreTrace.h	/^  Histogram m_store_first_to_stolen;$/;"	m	class:StoreTrace
m_store_last_to_stolen	profiler/StoreTrace.h	/^  Histogram m_store_last_to_stolen;$/;"	m	class:StoreTrace
m_store_latency	tester/DeterministicDriver.h	/^  Histogram m_store_latency;$/;"	m	class:DeterministicDriver
m_store_vector	tester/DeterministicDriver.h	/^  Vector<NodeID> m_store_vector;  \/\/ Processor last to store the addr$/;"	m	class:DeterministicDriver
m_stores	profiler/AccessTraceForAddress.h	/^  uint64 m_stores;$/;"	m	class:AccessTraceForAddress
m_stores_completed	tester/DeterministicDriver.h	/^  int m_stores_completed;$/;"	m	class:DeterministicDriver
m_stores_this_interval	profiler/StoreTrace.h	/^  int m_stores_this_interval;$/;"	m	class:StoreTrace
m_strict_fifo	buffers/MessageBuffer.h	/^  bool m_strict_fifo;$/;"	m	class:MessageBuffer
m_subblock	system/StoreBuffer.C	/^  SubBlock m_subblock;$/;"	m	struct:StoreBufferEntry	file:
m_sumSamples	common/Histogram.h	/^  int64 m_sumSamples;   \/\/ the sum of all samples$/;"	m	class:Histogram
m_sumSquaredSamples	common/Histogram.h	/^  int64 m_sumSquaredSamples; \/\/ the sum of the square of all samples$/;"	m	class:Histogram
m_sw_alloc	network/garnet-fixed-pipeline/Router_d.h	/^	SWallocator_d *m_sw_alloc;$/;"	m	class:Router_d
m_sw_prefetches	profiler/CacheProfiler.h	/^  int64 m_sw_prefetches;$/;"	m	class:CacheProfiler
m_swap_latency	tester/SyntheticDriver.h	/^  Histogram m_swap_latency;$/;"	m	class:SyntheticDriver
m_switch	network/garnet-fixed-pipeline/Router_d.h	/^	Switch_d *m_switch;$/;"	m	class:Router_d
m_switch_buffer	network/garnet-fixed-pipeline/Switch_d.h	/^	Vector<flitBuffer_d *> m_switch_buffer;$/;"	m	class:Switch_d
m_switch_id	network/simple/PerfectSwitch.h	/^  SwitchID m_switch_id;$/;"	m	class:PerfectSwitch
m_switch_id	network/simple/Switch.h	/^  SwitchID m_switch_id;$/;"	m	class:Switch
m_switch_ptr_vector	network/simple/SimpleNetwork.h	/^  Vector<Switch*> m_switch_ptr_vector;$/;"	m	class:SimpleNetwork
m_tFaw	system/MemoryControl.h	/^  int m_tFaw;$/;"	m	class:MemoryControl
m_tail	system/StoreBuffer.h	/^  int m_tail;$/;"	m	class:StoreBuffer
m_tbeProfile	profiler/Profiler.h	/^  Histogram m_tbeProfile;$/;"	m	class:Profiler
m_temp_filter	system/BulkBloomFilter.h	/^  Vector<int> m_temp_filter;$/;"	m	class:BulkBloomFilter
m_test_latency	tester/SyntheticDriver.h	/^  Histogram m_test_latency;$/;"	m	class:SyntheticDriver
m_tfaw_count	system/MemoryControl.h	/^  int* m_tfaw_count;$/;"	m	class:MemoryControl
m_tfaw_shift	system/MemoryControl.h	/^  uint64* m_tfaw_shift;$/;"	m	class:MemoryControl
m_think_periods	tester/BarrierGenerator.h	/^  int m_think_periods;$/;"	m	class:BarrierGenerator
m_thread	system/StoreBuffer.C	/^  int m_thread;$/;"	m	struct:StoreBufferEntry	file:
m_threadsMap_ptr	simics/depreceated/SimicsHypervisor.h	/^  Map<uinteger_t, THEntry*>* m_threadsMap_ptr;$/;"	m	class:PHEntry
m_throttles	network/simple/Switch.h	/^  Vector<Throttle*> m_throttles;$/;"	m	class:Switch
m_time	buffers/MessageBufferNode.h	/^  Time m_time;$/;"	m	class:MessageBufferNode
m_time	eventqueue/EventQueueNode.h	/^  Time m_time;$/;"	m	class:EventQueueNode
m_time	network/garnet-fixed-pipeline/OutVcState_d.h	/^	Time m_time; $/;"	m	class:OutVcState_d
m_time	network/garnet-fixed-pipeline/flit_d.h	/^	Time m_enqueue_time, m_time; $/;"	m	class:flit_d
m_time	network/garnet-flexible-pipeline/InVcState.h	/^	Time m_time;$/;"	m	class:InVcState
m_time	network/garnet-flexible-pipeline/OutVcState.h	/^	Time m_time; $/;"	m	class:OutVcState
m_time	network/garnet-flexible-pipeline/flit.h	/^	Time m_enqueue_time, m_time; $/;"	m	class:flit
m_time	recorder/TraceRecord.h	/^  Time m_time;$/;"	m	class:TraceRecord
m_time	slicc_interface/Message.h	/^  Time m_time;$/;"	m	class:Message
m_time	system/MemoryNode.h	/^  Time m_time;$/;"	m	class:MemoryNode
m_time	system/StoreBuffer.C	/^  Time m_time;$/;"	m	struct:StoreBufferEntry	file:
m_timeOfLastRecovery	eventqueue/EventQueue.h	/^  Time m_timeOfLastRecovery;$/;"	m	class:EventQueue
m_time_last_time_enqueue	buffers/MessageBuffer.h	/^  Time m_time_last_time_enqueue;$/;"	m	class:MessageBuffer
m_time_last_time_pop	buffers/MessageBuffer.h	/^  Time m_time_last_time_pop;$/;"	m	class:MessageBuffer
m_time_last_time_size_checked	buffers/MessageBuffer.h	/^  Time m_time_last_time_size_checked;$/;"	m	class:MessageBuffer
m_toNetQueues	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	Vector<Vector<MessageBuffer*> > m_toNetQueues; $/;"	m	class:GarnetNetwork_d
m_toNetQueues	network/garnet-flexible-pipeline/GarnetNetwork.h	/^	Vector<Vector<MessageBuffer*> > m_toNetQueues; $/;"	m	class:GarnetNetwork
m_toNetQueues	network/simple/SimpleNetwork.h	/^  Vector<Vector<MessageBuffer*> > m_toNetQueues;$/;"	m	class:SimpleNetwork
m_topology_ptr	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	Topology* m_topology_ptr;        	$/;"	m	class:GarnetNetwork_d
m_topology_ptr	network/garnet-flexible-pipeline/GarnetNetwork.h	/^	Topology* m_topology_ptr;        	$/;"	m	class:GarnetNetwork
m_topology_ptr	network/simple/SimpleNetwork.h	/^  Topology* m_topology_ptr;$/;"	m	class:SimpleNetwork
m_total	profiler/AccessTraceForAddress.h	/^  uint64 m_total;$/;"	m	class:AccessTraceForAddress
m_total_banks	system/MemoryControl.h	/^  int m_total_banks;$/;"	m	class:MemoryControl
m_total_ranks	system/MemoryControl.h	/^  int m_total_ranks;$/;"	m	class:MemoryControl
m_total_samples	profiler/StoreTrace.h	/^  int64 m_total_samples; \/\/ Total number of store lifetimes of this line$/;"	m	class:StoreTrace
m_total_think	tester/BarrierGenerator.h	/^  int m_total_think;$/;"	m	class:BarrierGenerator
m_touched_by	profiler/AccessTraceForAddress.h	/^  Set m_touched_by;$/;"	m	class:AccessTraceForAddress
m_trace_file	profiler/LifetimeTrace.h	/^  FILE * m_trace_file;      \/\/ output file for trace$/;"	m	class:LifetimeTrace
m_trace_file	recorder/Tracer.h	/^  ogzstream m_trace_file;$/;"	m	class:Tracer
m_tracer_ptr	system/System.h	/^  Tracer* m_tracer_ptr;$/;"	m	class:System
m_transWBs	profiler/Profiler.h	/^  int m_transWBs;$/;"	m	class:Profiler
m_transaction	tester/depreceated/XactRequestGenerator.h	/^  bool m_transaction;$/;"	m	class:XactRequestGenerator
m_transactionAborts	profiler/Profiler.h	/^  int m_transactionAborts;$/;"	m	class:Profiler
m_transactionCacheOverflows	profiler/Profiler.h	/^  int m_transactionCacheOverflows;$/;"	m	class:Profiler
m_transactionLogOverflows	profiler/Profiler.h	/^  int m_transactionLogOverflows;$/;"	m	class:Profiler
m_transactionSaveRestAborts	profiler/Profiler.h	/^  int m_transactionSaveRestAborts;$/;"	m	class:Profiler
m_transactionUnsupInsts	profiler/Profiler.h	/^  int m_transactionUnsupInsts;$/;"	m	class:Profiler
m_translations	simics/depreceated/ContiguousAddressTranslator.h	/^  Vector<uint64> m_translations;$/;"	m	class:ContiguousAddressTranslator
m_trees	system/PseudoLRUPolicy.h	/^  uint64* m_trees;                   \/** bit representation of the trees, one for each set *\/$/;"	m	class:PseudoLRUPolicy
m_type	network/garnet-fixed-pipeline/flit_d.h	/^	flit_type m_type;$/;"	m	class:flit_d
m_type	network/garnet-flexible-pipeline/flit.h	/^	flit_type m_type;$/;"	m	class:flit
m_type	recorder/TraceRecord.h	/^  CacheRequestType m_type;$/;"	m	class:TraceRecord
m_type	system/StoreBuffer.C	/^  CacheRequestType m_type;$/;"	m	struct:StoreBufferEntry	file:
m_units_remaining	network/simple/Throttle.h	/^  Vector<int> m_units_remaining;$/;"	m	class:Throttle
m_updates	system/TCpredictor.h	/^        int m_updates;                  \/\/ number of times this prediction has been updated$/;"	m	struct:TCpredictorPCSampler::predictionInfo
m_user	profiler/AccessTraceForAddress.h	/^  uint64 m_user;$/;"	m	class:AccessTraceForAddress
m_value	network/simple/PerfectSwitch.h	/^  int m_value;$/;"	m	class:LinkOrder
m_value	tester/Check.h	/^  uint8 m_value;$/;"	m	class:Check
m_vc	network/garnet-fixed-pipeline/flit_d.h	/^	int m_vc;	$/;"	m	class:flit_d
m_vc	network/garnet-flexible-pipeline/flit.h	/^	int m_vc;	$/;"	m	class:flit
m_vc_alloc	network/garnet-fixed-pipeline/Router_d.h	/^	VCallocator_d *m_vc_alloc;$/;"	m	class:Router_d
m_vc_allocator	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	Vector<int > m_vc_allocator;$/;"	m	class:NetworkInterface_d
m_vc_allocator	network/garnet-flexible-pipeline/NetworkInterface.h	/^	Vector<int > m_vc_allocator;$/;"	m	class:NetworkInterface
m_vc_arbiter	network/garnet-flexible-pipeline/Router.h	/^	VCarbiter *m_vc_arbiter;$/;"	m	class:Router
m_vc_buffer_size	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_vc_buffer_size;$/;"	m	struct:gpusim_ruby_config
m_vc_load	network/garnet-fixed-pipeline/NetworkLink_d.h	/^	Vector<int > m_vc_load; $/;"	m	class:NetworkLink_d
m_vc_load	network/garnet-flexible-pipeline/NetworkLink.h	/^	Vector<int > m_vc_load;$/;"	m	class:NetworkLink
m_vc_per_vnet	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:NetworkInterface_d
m_vc_per_vnet	network/garnet-fixed-pipeline/Router_d.h	/^	int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:Router_d
m_vc_per_vnet	network/garnet-fixed-pipeline/SWallocator_d.h	/^	int m_num_vcs, m_vc_per_vnet;$/;"	m	class:SWallocator_d
m_vc_per_vnet	network/garnet-fixed-pipeline/VCallocator_d.h	/^	int m_num_vcs, m_vc_per_vnet;$/;"	m	class:VCallocator_d
m_vc_per_vnet	network/garnet-flexible-pipeline/NetworkInterface.h	/^	int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:NetworkInterface
m_vc_per_vnet	network/garnet-flexible-pipeline/Router.h	/^	int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:Router
m_vc_round_robin	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	int m_vc_round_robin; \/\/ For round robin scheduling$/;"	m	class:NetworkInterface_d
m_vc_round_robin	network/garnet-flexible-pipeline/NetworkInterface.h	/^	int m_vc_round_robin; \/\/ For round robin scheduling$/;"	m	class:NetworkInterface
m_vc_round_robin	network/garnet-flexible-pipeline/Router.h	/^	Vector<int > m_vc_round_robin; \/\/ For scheduling of out source queues	$/;"	m	class:Router
m_vc_state	network/garnet-fixed-pipeline/OutVcState_d.h	/^	VC_state_type m_vc_state;$/;"	m	class:OutVcState_d
m_vc_state	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	pair<VC_state_type, Time> m_vc_state; \/\/ I\/R\/V\/A\/C$/;"	m	class:VirtualChannel_d
m_vc_state	network/garnet-flexible-pipeline/InVcState.h	/^	VC_state_type m_vc_state;$/;"	m	class:InVcState
m_vc_state	network/garnet-flexible-pipeline/OutVcState.h	/^	VC_state_type m_vc_state;$/;"	m	class:OutVcState
m_vc_winners	network/garnet-fixed-pipeline/SWallocator_d.h	/^	Vector<Vector<int > > m_vc_winners; \/\/ a list for each outport$/;"	m	class:SWallocator_d
m_vcs	network/garnet-fixed-pipeline/InputUnit_d.h	/^	Vector<VirtualChannel_d *> m_vcs; \/\/ [vc]$/;"	m	class:InputUnit_d
m_vcs_per_class	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_vcs_per_class;$/;"	m	struct:gpusim_ruby_config
m_verbosityLevel	common/Debug.h	/^  VerbosityLevel m_verbosityLevel;$/;"	m	class:Debug
m_version	generated/MI_example/Directory_Controller.h	/^  NodeID m_version;$/;"	m	class:Directory_Controller
m_version	generated/MI_example/L1Cache_Controller.h	/^  NodeID m_version;$/;"	m	class:L1Cache_Controller
m_version	system/DirectoryMemory.h	/^  int m_version;$/;"	m	class:DirectoryMemory
m_version	system/GpusimDramInterface.h	/^   int m_version;$/;"	m	class:GpusimDramInterface
m_version	system/MemoryControl.h	/^  int m_version;$/;"	m	class:MemoryControl
m_version	system/NodePersistentTable.h	/^  int m_version;$/;"	m	class:NodePersistentTable
m_version	system/PersistentTable.h	/^  int m_version;$/;"	m	class:PersistentTable
m_version	system/Sequencer.h	/^  int m_version;$/;"	m	class:Sequencer
m_version	system/StoreBuffer.h	/^  int m_version;$/;"	m	class:StoreBuffer
m_virtual_networks	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^	int m_virtual_networks; $/;"	m	class:GarnetNetwork_d
m_virtual_networks	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:NetworkInterface_d
m_virtual_networks	network/garnet-fixed-pipeline/Router_d.h	/^	int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:Router_d
m_virtual_networks	network/garnet-flexible-pipeline/GarnetNetwork.h	/^	int m_virtual_networks; $/;"	m	class:GarnetNetwork
m_virtual_networks	network/garnet-flexible-pipeline/NetworkInterface.h	/^	int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:NetworkInterface
m_virtual_networks	network/garnet-flexible-pipeline/Router.h	/^	int m_virtual_networks, m_num_vcs, m_vc_per_vnet;$/;"	m	class:Router
m_virtual_networks	network/simple/PerfectSwitch.h	/^  int m_virtual_networks;$/;"	m	class:PerfectSwitch
m_virtual_networks	network/simple/SimpleNetwork.h	/^  int m_virtual_networks;$/;"	m	class:SimpleNetwork
m_vnet	network/garnet-fixed-pipeline/flit_d.h	/^	int m_vnet;$/;"	m	class:flit_d
m_vnet	network/garnet-flexible-pipeline/flit.h	/^	int m_vnet;$/;"	m	class:flit
m_vnets	network/simple/Throttle.h	/^  int m_vnets;$/;"	m	class:Throttle
m_vns	gpusim_ruby/gpusim_ruby.h	/^    unsigned m_vns;$/;"	m	struct:gpusim_ruby_config
m_wakeup_thread0	tester/RaceyDriver.h	/^  bool m_wakeup_thread0;$/;"	m	class:RaceyDriver
m_wakeups_wo_switch	network/simple/PerfectSwitch.h	/^  int m_wakeups_wo_switch;$/;"	m	class:PerfectSwitch
m_wakeups_wo_switch	network/simple/Throttle.h	/^  int m_wakeups_wo_switch;$/;"	m	class:Throttle
m_watch_address_list_ptr	profiler/Profiler.h	/^  Map<Address, int>* m_watch_address_list_ptr;$/;"	m	class:Profiler
m_watchpointsFalsePositiveTrigger	profiler/Profiler.h	/^  unsigned int m_watchpointsFalsePositiveTrigger;$/;"	m	class:Profiler
m_watchpointsTrueTrigger	profiler/Profiler.h	/^  unsigned int m_watchpointsTrueTrigger;$/;"	m	class:Profiler
m_weight_table	network/garnet-fixed-pipeline/RoutingUnit_d.h	/^	Vector<int > m_weight_table;$/;"	m	class:RoutingUnit_d
m_write	gpusim_ruby/gpusim_ruby.h	/^   bool m_write;$/;"	m	struct:ruby_dram_req_info
m_writeRequestTable_ptr	system/Sequencer.h	/^  Map<Address, CacheMsg>** m_writeRequestTable_ptr;$/;"	m	class:Sequencer
m_writeSetEmptyChecks	profiler/Profiler.h	/^  long long int m_writeSetEmptyChecks;$/;"	m	class:Profiler
m_writeSetMatch	profiler/Profiler.h	/^  long long int m_writeSetMatch;$/;"	m	class:Profiler
m_writeSetMatch_ptr	profiler/Profiler.h	/^  Map <Address, int>* m_writeSetMatch_ptr;$/;"	m	class:Profiler
m_writeSetNoMatch	profiler/Profiler.h	/^  long long int m_writeSetNoMatch;$/;"	m	class:Profiler
m_writeSetNoMatch_ptr	profiler/Profiler.h	/^  Map <Address, int>* m_writeSetNoMatch_ptr;$/;"	m	class:Profiler
m_write_sharing_histogram	profiler/Profiler.h	/^  Histogram m_write_sharing_histogram;$/;"	m	class:Profiler
m_writes_stall_at_mshr	gpusim_ruby/gpusim_ruby.h	/^    bool m_writes_stall_at_mshr;$/;"	m	struct:gpusim_ruby_config
m_xactCycles	profiler/Profiler.h	/^  Histogram m_xactCycles;$/;"	m	class:Profiler
m_xactCyclesIDMap_ptr	profiler/Profiler.h	/^  Map <int, int>* m_xactCyclesIDMap_ptr;$/;"	m	class:Profiler
m_xactExceptionMap_ptr	profiler/Profiler.h	/^  Map <int, int>* m_xactExceptionMap_ptr;$/;"	m	class:Profiler
m_xactInstrCount	profiler/Profiler.h	/^  Histogram m_xactInstrCount;$/;"	m	class:Profiler
m_xactInstrCountIDMap_ptr	profiler/Profiler.h	/^  Map <int, integer_t> *m_xactInstrCountIDMap_ptr;$/;"	m	class:Profiler
m_xactLoadMissIDMap_ptr	profiler/Profiler.h	/^  Map <int, int>* m_xactLoadMissIDMap_ptr;$/;"	m	class:Profiler
m_xactLoadMisses	profiler/Profiler.h	/^  Histogram m_xactLoadMisses;$/;"	m	class:Profiler
m_xactLogs	profiler/Profiler.h	/^  Histogram m_xactLogs;$/;"	m	class:Profiler
m_xactNacked	profiler/Profiler.h	/^  int m_xactNacked;$/;"	m	class:Profiler
m_xactOverflowReads	profiler/Profiler.h	/^  Histogram m_xactOverflowReads;$/;"	m	class:Profiler
m_xactOverflowTotalReads	profiler/Profiler.h	/^  Histogram m_xactOverflowTotalReads;$/;"	m	class:Profiler
m_xactOverflowTotalWrites	profiler/Profiler.h	/^  Histogram m_xactOverflowTotalWrites;$/;"	m	class:Profiler
m_xactOverflowWrites	profiler/Profiler.h	/^  Histogram m_xactOverflowWrites;$/;"	m	class:Profiler
m_xactPages_ptr	simics/depreceated/SimicsHypervisor.h	/^  Map<physical_address_t, char>* m_xactPages_ptr;$/;"	m	class:PHEntry
m_xactReadFilterBitsSetOnAbort	profiler/Profiler.h	/^  Map<int, Histogram> * m_xactReadFilterBitsSetOnAbort;$/;"	m	class:Profiler
m_xactReadFilterBitsSetOnCommit	profiler/Profiler.h	/^  Map<int, Histogram> * m_xactReadFilterBitsSetOnCommit;$/;"	m	class:Profiler
m_xactReadSetIDMap_ptr	profiler/Profiler.h	/^  Map <int, int>* m_xactReadSetIDMap_ptr;$/;"	m	class:Profiler
m_xactReads	profiler/Profiler.h	/^  Histogram m_xactReads;$/;"	m	class:Profiler
m_xactRetries	profiler/Profiler.h	/^  Histogram m_xactRetries;$/;"	m	class:Profiler
m_xactRetryIDMap_ptr	profiler/Profiler.h	/^  Map <int, int>* m_xactRetryIDMap_ptr;$/;"	m	class:Profiler
m_xactSizes	profiler/Profiler.h	/^  Histogram m_xactSizes;$/;"	m	class:Profiler
m_xactStoreMissIDMap_ptr	profiler/Profiler.h	/^  Map <int, int>* m_xactStoreMissIDMap_ptr;$/;"	m	class:Profiler
m_xactStoreMisses	profiler/Profiler.h	/^  Histogram m_xactStoreMisses;$/;"	m	class:Profiler
m_xactWriteFilterBitsSetOnAbort	profiler/Profiler.h	/^  Map<int, Histogram> * m_xactWriteFilterBitsSetOnAbort;$/;"	m	class:Profiler
m_xactWriteFilterBitsSetOnCommit	profiler/Profiler.h	/^  Map<int, Histogram> * m_xactWriteFilterBitsSetOnCommit;$/;"	m	class:Profiler
m_xactWriteSetIDMap_ptr	profiler/Profiler.h	/^  Map <int, int>* m_xactWriteSetIDMap_ptr;$/;"	m	class:Profiler
m_xactWrites	profiler/Profiler.h	/^  Histogram m_xactWrites;$/;"	m	class:Profiler
m_xact_mgr	simics/depreceated/SimicsHypervisor.h	/^  TransactionInterfaceManager* m_xact_mgr;$/;"	m	class:THEntry
m_xact_mgr	simics/depreceated/SimicsProcessor.h	/^  TransactionInterfaceManager* m_xact_mgr;$/;"	m	class:SimicsProcessor
m_xact_proc	simics/depreceated/SimicsProcessor.h	/^  TransactionSimicsProcessor* m_xact_proc;$/;"	m	class:SimicsProcessor
m_xact_status	tester/depreceated/XactAbortRequestGenerator.h	/^  XactAbortRequestGeneratorStatus m_xact_status;$/;"	m	class:XactAbortRequestGenerator
m_xact_visualizer	profiler/Profiler.h	/^  std::fstream m_xact_visualizer;$/;"	m	class:Profiler
m_xact_visualizer_last	profiler/Profiler.h	/^  Time m_xact_visualizer_last;$/;"	m	class:Profiler
m_xact_visualizer_ptr	profiler/Profiler.h	/^  std::ostream *m_xact_visualizer_ptr;$/;"	m	class:Profiler
m_xactmgrToTHEntryMap_ptr	simics/depreceated/SimicsHypervisor.h	/^  Map<uint64, THEntry*>          *m_xactmgrToTHEntryMap_ptr;$/;"	m	class:SimicsHypervisor
machineIDToMachineType	slicc_interface/RubySlicc_ComponentMapping.h	/^extern inline MachineType machineIDToMachineType(MachineID machID) $/;"	f
machineIDToNodeID	slicc_interface/RubySlicc_ComponentMapping.h	/^extern inline NodeID machineIDToNodeID(MachineID machID) $/;"	f
machineIDToVersion	slicc_interface/RubySlicc_ComponentMapping.h	/^extern inline NodeID machineIDToVersion(MachineID machID) $/;"	f
magic_instruction_callback	simics/depreceated/commands.C	/^void magic_instruction_callback(void* desc, void* cpu, integer_t val)$/;"	f
main	eventqueue/EventQueue_tester.C	/^int main()$/;"	f
main	network/orion/dump_para.c	/^int main(int argc, char **argv)$/;"	f
main	simics/depreceated/magic_call.c	/^int main(int argc, char* argv[] )$/;"	f
main	tester/getopt.C	/^main ($/;"	f
main	tester/main.C	/^int main(int argc, char *argv[])$/;"	f
make2DTorus	network/simple/Topology.C	/^void Topology::make2DTorus()$/;"	f	class:Topology
makeFileSpecified	network/simple/Topology.C	/^void Topology::makeFileSpecified()$/;"	f	class:Topology
makeGPGPUSimCrossbar	network/simple/Topology.C	/^void Topology::makeGPGPUSimCrossbar()$/;"	f	class:Topology
makeHierarchicalSwitch	network/simple/Topology.C	/^void Topology::makeHierarchicalSwitch(int fan_out_degree)$/;"	f	class:Topology
makeIdealInvRequest	system/Sequencer.C	/^void Sequencer::makeIdealInvRequest(const CacheMsg& request) {$/;"	f	class:Sequencer
makeInLink	network/garnet-fixed-pipeline/GarnetNetwork_d.C	/^void GarnetNetwork_d::makeInLink(NodeID src, SwitchID dest, const NetDest& routing_table_entry, int link_latency, int bw_multiplier, bool isReconfiguration)$/;"	f	class:GarnetNetwork_d
makeInLink	network/garnet-flexible-pipeline/GarnetNetwork.C	/^void GarnetNetwork::makeInLink(NodeID src, SwitchID dest, const NetDest& routing_table_entry, int link_latency, int bw_multiplier, bool isReconfiguration)$/;"	f	class:GarnetNetwork
makeInLink	network/simple/SimpleNetwork.C	/^void SimpleNetwork::makeInLink(NodeID src, SwitchID dest, const NetDest& routing_table_entry, int link_latency, int bw_multiplier, bool isReconfiguration)$/;"	f	class:SimpleNetwork
makeInternalLink	network/garnet-fixed-pipeline/GarnetNetwork_d.C	/^void GarnetNetwork_d::makeInternalLink(SwitchID src, SwitchID dest, const NetDest& routing_table_entry, int link_latency, int link_weight, int bw_multiplier, bool isReconfiguration)$/;"	f	class:GarnetNetwork_d
makeInternalLink	network/garnet-flexible-pipeline/GarnetNetwork.C	/^void GarnetNetwork::makeInternalLink(SwitchID src, SwitchID dest, const NetDest& routing_table_entry, int link_latency, int link_weight, int bw_multiplier, bool isReconfiguration)$/;"	f	class:GarnetNetwork
makeInternalLink	network/simple/SimpleNetwork.C	/^void SimpleNetwork::makeInternalLink(SwitchID src, SwitchID dest, const NetDest& routing_table_entry, int link_latency, int link_weight, int bw_multiplier, bool isReconfiguration)$/;"	f	class:SimpleNetwork
makeLineAddress	common/Address.h	/^  void makeLineAddress() { m_address = maskLowOrderBits(RubyConfig::dataBlockBits()); }$/;"	f	class:Address
makeLineAddress	slicc_interface/RubySlicc_Util.h	/^extern inline Address makeLineAddress(Address addr)$/;"	f
makeLink	network/simple/Topology.C	/^void Topology::makeLink(SwitchID src, SwitchID dest, const NetDest& routing_table_entry, int link_latency, int link_weight, int bw_multiplier, bool isReconfiguration)$/;"	f	class:Topology
makeMemfenceRequest	interfaces/GpusimInterface.C	/^void  GpusimInterface::makeMemfenceRequest( unsigned long long addr, unsigned req_size, unsigned sid, unsigned tid, unsigned pc,$/;"	f	class:GpusimInterface
makeMemfenceRequest	system/Sequencer.C	/^void Sequencer::makeMemfenceRequest(const CacheMsg& request) {$/;"	f	class:Sequencer
makeNextStrideAddress	common/Address.h	/^  void makeNextStrideAddress( int stride) { $/;"	f	class:Address
makeOutLink	network/garnet-fixed-pipeline/GarnetNetwork_d.C	/^void GarnetNetwork_d::makeOutLink(SwitchID src, NodeID dest, const NetDest& routing_table_entry, int link_latency, int link_weight, int bw_multiplier, bool isReconfiguration)$/;"	f	class:GarnetNetwork_d
makeOutLink	network/garnet-flexible-pipeline/GarnetNetwork.C	/^void GarnetNetwork::makeOutLink(SwitchID src, NodeID dest, const NetDest& routing_table_entry, int link_latency, int link_weight, int bw_multiplier, bool isReconfiguration)$/;"	f	class:GarnetNetwork
makeOutLink	network/simple/SimpleNetwork.C	/^void SimpleNetwork::makeOutLink(SwitchID src, NodeID dest, const NetDest& routing_table_entry, int link_latency, int link_weight, int bw_multiplier, bool isReconfiguration)$/;"	f	class:SimpleNetwork
makePageAddress	common/Address.h	/^  void makePageAddress() { m_address = maskLowOrderBits(RubyConfig::pageSizeBits()); }$/;"	f	class:Address
makePrefetch	interfaces/OpalInterface.C	/^void  OpalInterface::makePrefetch(int  cpuNumber, la_t logicalAddr, pa_t physicalAddr,$/;"	f	class:OpalInterface
makePrefetch	interfaces/mf_api.h	/^  void (*makePrefetch)( int cpuNumber, la_t logicalAddr, pa_t physicalAddr,$/;"	m	struct:mf_ruby_api
makePtToPt	network/simple/Topology.C	/^void Topology::makePtToPt()$/;"	f	class:Topology
makeRequest	interfaces/GpusimInterface.C	/^void  GpusimInterface::makeRequest( unsigned long long addr, unsigned req_size, unsigned sid, unsigned tid, unsigned pc,$/;"	f	class:GpusimInterface
makeRequest	interfaces/OpalInterface.C	/^void  OpalInterface::makeRequest(int  cpuNumber, la_t logicalAddr, pa_t physicalAddr,$/;"	f	class:OpalInterface
makeRequest	interfaces/mf_api.h	/^  void (*makeRequest)( int cpuNumber, la_t logicalAddr, pa_t physicalAddr,$/;"	m	struct:mf_ruby_api
makeRequest	simics/depreceated/SimicsDriver.C	/^int SimicsDriver::makeRequest(memory_transaction_t *mem_trans) {$/;"	f	class:SimicsDriver
makeRequest	simics/depreceated/SimicsProcessor.C	/^MemoryTransactionResult SimicsProcessor::makeRequest($/;"	f	class:SimicsProcessor
makeRequest	system/Sequencer.C	/^void Sequencer::makeRequest(const CacheMsg& request) {$/;"	f	class:Sequencer
makeSwitchesPerChip	network/simple/Topology.C	/^void Topology::makeSwitchesPerChip(Vector< Vector < SwitchID > > &nodePairs, Vector<int> &latencies, Vector<int> &bw_multis, int numberOfChipSwitches)$/;"	f	class:Topology
map_Address_to_CentralArbiterNode	slicc_interface/RubySlicc_ComponentMapping.h	/^MachineID map_Address_to_CentralArbiterNode(const Address& addr) $/;"	f
map_Address_to_Directory	slicc_interface/RubySlicc_ComponentMapping.h	/^MachineID map_Address_to_Directory(const Address &addr) $/;"	f
map_Address_to_DirectoryNode	slicc_interface/RubySlicc_ComponentMapping.h	/^NodeID map_Address_to_DirectoryNode(const Address& addr) $/;"	f
map_L1CacheMachId_to_L2Cache	slicc_interface/RubySlicc_ComponentMapping.h	/^MachineID map_L1CacheMachId_to_L2Cache(const Address& addr, MachineID L1CacheMachId) $/;"	f
map_L2ChipId_to_L2Cache	slicc_interface/RubySlicc_ComponentMapping.h	/^MachineID map_L2ChipId_to_L2Cache(const Address& addr, NodeID L2ChipId) $/;"	f
map_address_cores_t	profiler/LifetimeTrace.h	/^  typedef std::map<physical_address_t, map_core_access_t> map_address_cores_t;        \/\/ map addresses to list of cores' accesses$/;"	t	class:LifetimeTrace
map_address_to_L1CacheSet	slicc_interface/RubySlicc_ComponentMapping.h	/^int map_address_to_L1CacheSet(const Address& addr, int cache_num_set_bits)  $/;"	f
map_address_to_L2CacheSet	slicc_interface/RubySlicc_ComponentMapping.h	/^int map_address_to_L2CacheSet(const Address& addr, int cache_num_set_bits)  $/;"	f
map_core_access_t	profiler/LifetimeTrace.h	/^  typedef std::map<int,LifetimeAccess> map_core_access_t;                             \/\/ map cores to access struct for given address$/;"	t	class:LifetimeTrace
map_pc_starttimes_t	system/TCpredictor.h	/^    typedef std::map<int,Time> map_pc_starttimes_t;          \/\/ map to keep track of a list of pc's and their starting access times$/;"	t	class:TCpredictorPCSampler
map_prediction_table_t	system/TCpredictor.h	/^    typedef std::map<int,predictionInfo> map_prediction_table_t;       \/\/ prediction table to map pc to lifetime prediction$/;"	t	class:TCpredictorPCSampler
map_sampler_table_t	system/TCpredictor.h	/^    typedef std::map<int, map_pc_starttimes_t> map_sampler_table_t;  \/\/ sampler table to map addresses to their list of pc's$/;"	t	class:TCpredictorPCSampler
markEntries	system/NodePersistentTable.C	/^void NodePersistentTable::markEntries(const Address& address)$/;"	f	class:NodePersistentTable
markEntries	system/PersistentTable.C	/^void PersistentTable::markEntries(const Address& address)$/;"	f	class:PersistentTable
markTfaw	system/MemoryControl.C	/^void MemoryControl::markTfaw (int rank) {$/;"	f	class:MemoryControl
mask	network/orion/SIM_arbiter.h	/^	LIB_Type_max_uint mask;$/;"	m	struct:__anon7
mask	network/orion/SIM_crossbar.h	/^	LIB_Type_max_uint mask;$/;"	m	struct:__anon32
mask	network/orion/SIM_permu.h	/^	LIB_Type_max_uint mask;$/;"	m	struct:__anon41
mask	network/orion_old/power_arbiter.h	/^	unsigned long int mask;$/;"	m	struct:__anon58
mask	network/orion_old/power_crossbar.h	/^	unsigned long int mask;$/;"	m	struct:__anon87
maskHighOrderBits	common/Address.h	/^physical_address_t Address::maskHighOrderBits(int number) const $/;"	f	class:Address
maskLowOrderBits	common/Address.h	/^physical_address_t Address::maskLowOrderBits(int number) const $/;"	f	class:Address
math	network/simple/Network_Files/GarnetFileMaker.py	/^import sys, os, string, re, math$/;"	i
math	network/simple/Network_Files/NetworkFileMaker.py	/^import sys, os, string, re, math$/;"	i
matrix_arbiter_grant_cap	network/orion_old/power_arbiter.C	/^static double matrix_arbiter_grant_cap(unsigned req_width)$/;"	f	file:
matrix_arbiter_int_cap	network/orion_old/power_arbiter.C	/^static double matrix_arbiter_int_cap()$/;"	f	file:
matrix_arbiter_pri_cap	network/orion_old/power_arbiter.C	/^static double matrix_arbiter_pri_cap(unsigned req_width)$/;"	f	file:
matrix_arbiter_req_cap	network/orion_old/power_arbiter.C	/^static double matrix_arbiter_req_cap(unsigned req_width, double length)$/;"	f	file:
max_size	network/garnet-fixed-pipeline/flitBuffer_d.h	/^	int size, max_size;$/;"	m	class:flitBuffer_d
max_size	network/garnet-flexible-pipeline/flitBuffer.h	/^	int size, max_size;$/;"	m	class:flitBuffer
max_tokens	common/Global.h	/^extern inline int max_tokens()$/;"	f
mc_class	network/orion/SIM_router.h	/^	u_int mc_class;$/;"	m	struct:__anon48
mc_in_arb	network/orion/SIM_router.h	/^	SIM_arbiter_t mc_in_arb;$/;"	m	struct:__anon47
mc_in_arb_queue_info	network/orion/SIM_router.h	/^	SIM_array_info_t mc_in_arb_queue_info;$/;"	m	struct:__anon48
mc_in_buf	network/orion/SIM_router.h	/^	SIM_array_t mc_in_buf;$/;"	m	struct:__anon47
mc_in_buf	network/orion/SIM_router.h	/^	int mc_in_buf;$/;"	m	struct:__anon48
mc_in_buf_info	network/orion/SIM_router.h	/^	SIM_array_info_t mc_in_buf_info;$/;"	m	struct:__anon48
mc_n_switch	network/orion/SIM_router.h	/^	u_int mc_n_switch;$/;"	m	struct:__anon48
memBusCycleMultiplier	config/RubyConfig.h	/^  static int memBusCycleMultiplier () { return MEM_BUS_CYCLE_MULTIPLIER; }$/;"	f	class:RubyConfig
memCtlLatency	config/RubyConfig.h	/^  static int memCtlLatency () { return MEM_CTL_LATENCY; }$/;"	f	class:RubyConfig
memFixedDelay	config/RubyConfig.h	/^  static int memFixedDelay () { return MEM_FIXED_DELAY; }$/;"	f	class:RubyConfig
memRandomArbitrate	config/RubyConfig.h	/^  static int memRandomArbitrate () { return MEM_RANDOM_ARBITRATE; }$/;"	f	class:RubyConfig
memfenceCallback	common/Driver.h	/^  virtual void memfenceCallback(NodeID proc, int thread) {assert(0)}; \/\/ Called by sequencer$/;"	f	class:Driver
memfenceCallback	interfaces/GpusimInterface.C	/^void GpusimInterface::memfenceCallback(NodeID proc, int thread) {$/;"	f	class:GpusimInterface
memfenceCallback	system/Sequencer.C	/^void Sequencer::memfenceCallback(int thread) {$/;"	f	class:Sequencer
memfenceCallbackQueueEmpty	gpusim_ruby/gpusim_ruby.C	/^bool gpusim_ruby::memfenceCallbackQueueEmpty(unsigned core_id)$/;"	f	class:gpusim_ruby
memfenceCallbackQueueEmpty	interfaces/GpusimInterface.h	/^  bool memfenceCallbackQueueEmpty(unsigned core_id) {$/;"	f	class:GpusimInterface
memfenceCallbackQueuePop	gpusim_ruby/gpusim_ruby.C	/^void gpusim_ruby::memfenceCallbackQueuePop(unsigned core_id)$/;"	f	class:gpusim_ruby
memfenceCallbackQueuePop	interfaces/GpusimInterface.h	/^  void memfenceCallbackQueuePop(unsigned core_id) {$/;"	f	class:GpusimInterface
memfenceCallbackQueueTop	gpusim_ruby/gpusim_ruby.C	/^unsigned long long gpusim_ruby::memfenceCallbackQueueTop(unsigned core_id)$/;"	f	class:gpusim_ruby
memfenceCallbackQueueTop	interfaces/GpusimInterface.h	/^  unsigned long long memfenceCallbackQueueTop(unsigned core_id) {$/;"	f	class:GpusimInterface
memfence_callback_queue	interfaces/GpusimInterface.h	/^  typedef std::list<unsigned> memfence_callback_queue;$/;"	t	class:GpusimInterface
memfetch_list_t	common/MemfetchSet.h	/^   typedef std::list<uint64> memfetch_list_t;$/;"	t	class:MemfetchSet
memoryBits	config/RubyConfig.h	/^  static int memoryBits() { return g_NUM_MEMORIES_BITS; }$/;"	f	class:RubyConfig
memoryModuleBits	config/RubyConfig.h	/^  static int memoryModuleBits() { return g_MEMORY_MODULE_BITS; }$/;"	f	class:RubyConfig
memoryModuleBlocks	config/RubyConfig.h	/^  static int64 memoryModuleBlocks() { return g_MEMORY_MODULE_BLOCKS; }$/;"	f	class:RubyConfig
memoryModuleIndex	common/Address.h	/^integer_t Address::memoryModuleIndex() const$/;"	f	class:Address
memoryResponseLatency	config/RubyConfig.h	/^  static int memoryResponseLatency() { return MEMORY_RESPONSE_LATENCY_MINUS_2+(random() % 5); } $/;"	f	class:RubyConfig
memorySizeBits	config/RubyConfig.h	/^  static int memorySizeBits() { return g_MEMORY_SIZE_BITS; }$/;"	f	class:RubyConfig
memorySizeBytes	config/RubyConfig.h	/^  static int64 memorySizeBytes() { return g_MEMORY_SIZE_BYTES; }$/;"	f	class:RubyConfig
memoryTransactionToCacheMsg	simics/depreceated/SimicsProcessor.C	/^CacheMsg SimicsProcessor::memoryTransactionToCacheMsg(const memory_transaction_t *mem_trans) {$/;"	f	class:SimicsProcessor
memory_transaction_t	simics/depreceated/interface.h	/^typedef v9_memory_transaction_t memory_transaction_t;$/;"	t
memory_transaction_t	simics/depreceated/interface.h	/^typedef x86_memory_transaction_t memory_transaction_t;$/;"	t
merge	system/BlockBloomFilter.C	/^void BlockBloomFilter::merge(AbstractBloomFilter * other_filter)$/;"	f	class:BlockBloomFilter
merge	system/BulkBloomFilter.C	/^void BulkBloomFilter::merge(AbstractBloomFilter * other_filter)$/;"	f	class:BulkBloomFilter
merge	system/GenericBloomFilter.C	/^void GenericBloomFilter::merge(GenericBloomFilter * other_filter)$/;"	f	class:GenericBloomFilter
merge	system/H3BloomFilter.C	/^void H3BloomFilter::merge(AbstractBloomFilter * other_filter){$/;"	f	class:H3BloomFilter
merge	system/LSB_CountingBloomFilter.C	/^void LSB_CountingBloomFilter::merge(AbstractBloomFilter * other_filter)$/;"	f	class:LSB_CountingBloomFilter
merge	system/MultiBitSelBloomFilter.C	/^void MultiBitSelBloomFilter::merge(AbstractBloomFilter * other_filter){$/;"	f	class:MultiBitSelBloomFilter
merge	system/MultiGrainBloomFilter.C	/^void MultiGrainBloomFilter::merge(AbstractBloomFilter * other_filter)$/;"	f	class:MultiGrainBloomFilter
merge	system/NonCountingBloomFilter.C	/^void NonCountingBloomFilter::merge(AbstractBloomFilter * other_filter){$/;"	f	class:NonCountingBloomFilter
mergeFrom	common/SubBlock.h	/^  void mergeFrom(const DataBlock& data) { if (DATA_BLOCK) { internalMergeFrom(data); } }$/;"	f	class:SubBlock
mergeTo	common/SubBlock.h	/^  void mergeTo(DataBlock& data) const { if (DATA_BLOCK) { internalMergeTo(data); } }$/;"	f	class:SubBlock
mf_opal_api	interfaces/mf_api.h	/^typedef struct mf_opal_api {$/;"	s
mf_opal_api_t	interfaces/mf_api.h	/^} mf_opal_api_t;$/;"	t	typeref:struct:mf_opal_api
mf_ruby_api	interfaces/mf_api.h	/^typedef struct mf_ruby_api {$/;"	s
mf_ruby_api_t	interfaces/mf_api.h	/^} mf_ruby_api_t;$/;"	t	typeref:struct:mf_ruby_api
mh_memorytracer_observe_memory	simics/depreceated/commands.C	/^void mh_memorytracer_observe_memory(memory_transaction_t *mem_trans)$/;"	f
mh_memorytracer_possible_cache_miss	simics/depreceated/commands.C	/^int mh_memorytracer_possible_cache_miss(memory_transaction_t *mem_trans)$/;"	f
missLatency	profiler/Profiler.C	/^void Profiler::missLatency(Time t, CacheRequestType type, GenericMachineType respondingMach)$/;"	f	class:Profiler
mm_id	depreceated/module/ruby.c	/^static int mm_id = -1;$/;"	v	file:
modePrivilegeToUser	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::modePrivilegeToUser(void *cpu) {$/;"	f	class:SimicsHypervisor
modeUserToPrivilege	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::modeUserToPrivilege(void *cpu) {$/;"	f	class:SimicsHypervisor
model	network/orion/SIM_ALU.h	/^	int model;$/;"	m	struct:__anon4
model	network/orion/SIM_arbiter.h	/^	int model;$/;"	m	struct:__anon7
model	network/orion/SIM_array_internal.h	/^	int model;$/;"	m	struct:__anon14
model	network/orion/SIM_array_internal.h	/^	int model;$/;"	m	struct:__anon15
model	network/orion/SIM_array_internal.h	/^	int model;$/;"	m	struct:__anon16
model	network/orion/SIM_array_internal.h	/^	int model;$/;"	m	struct:__anon17
model	network/orion/SIM_array_internal.h	/^	int model;$/;"	m	struct:__anon18
model	network/orion/SIM_array_internal.h	/^	int model;$/;"	m	struct:__anon19
model	network/orion/SIM_array_internal.h	/^	int model;$/;"	m	struct:__anon20
model	network/orion/SIM_array_internal.h	/^	int model;$/;"	m	struct:__anon21
model	network/orion/SIM_array_internal.h	/^	int model;$/;"	m	struct:__anon22
model	network/orion/SIM_crossbar.h	/^	int model;$/;"	m	struct:__anon32
model	network/orion/SIM_misc.h	/^	int model;$/;"	m	struct:__anon33
model	network/orion/SIM_misc.h	/^	int model;$/;"	m	struct:__anon34
model	network/orion/SIM_misc.h	/^	int model;$/;"	m	struct:__anon35
model	network/orion/SIM_permu.h	/^	int model;$/;"	m	struct:__anon42
model	network/orion_old/power_arbiter.h	/^	int model;$/;"	m	struct:__anon57
model	network/orion_old/power_arbiter.h	/^	int model;$/;"	m	struct:__anon58
model	network/orion_old/power_array.h	/^	int model;$/;"	m	struct:__anon68
model	network/orion_old/power_array.h	/^	int model;$/;"	m	struct:__anon69
model	network/orion_old/power_array.h	/^	int model;$/;"	m	struct:__anon70
model	network/orion_old/power_array.h	/^	int model;$/;"	m	struct:__anon71
model	network/orion_old/power_array.h	/^	int model;$/;"	m	struct:__anon72
model	network/orion_old/power_array.h	/^	int model;$/;"	m	struct:__anon73
model	network/orion_old/power_array.h	/^	int model;$/;"	m	struct:__anon74
model	network/orion_old/power_array.h	/^	int model;$/;"	m	struct:__anon75
model	network/orion_old/power_array.h	/^	int model;$/;"	m	struct:__anon76
model	network/orion_old/power_bus.h	/^	int model;$/;"	m	struct:__anon83
model	network/orion_old/power_crossbar.h	/^	int model;$/;"	m	struct:__anon87
moveVirtualToSummarySignature	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::moveVirtualToSummarySignature(TransactionInterfaceManager *xact_mgr){$/;"	f	class:SimicsHypervisor
multicast_retry	slicc_interface/RubySlicc_Util.h	/^extern inline bool multicast_retry()$/;"	f
mults_list	system/H3BloomFilter.h	/^  int mults_list[6]; \/\/= {255,29,51,3,77,43};$/;"	m	class:H3BloomFilter
mux	network/orion/SIM_array.h	/^	SIM_array_mux_t mux;$/;"	m	struct:__anon8
mux	network/orion_old/power_array.h	/^	power_mux mux;$/;"	m	struct:__anon79
mux_model	network/orion/SIM_array.h	/^	int mux_model;$/;"	m	struct:__anon9
mux_model	network/orion_old/power_array.h	/^	int mux_model;$/;"	m	struct:__anon80
my_default_param	gpusim_ruby/gpusim_ruby.h	/^   char * my_default_param;$/;"	m	class:gpusim_ruby
my_default_param	tester/test_framework.C	/^char * my_default_param;$/;"	v
my_index	tester/getopt.C	/^my_index ($/;"	f	file:
my_index	tester/getopt.C	172;"	d	file:
my_initvar	gpusim_ruby/gpusim_ruby.h	/^   class initvar_t * my_initvar;$/;"	m	class:gpusim_ruby	typeref:class:gpusim_ruby::initvar_t
my_initvar	tester/test_framework.C	/^initvar_t * my_initvar;$/;"	v
n_access	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_access;$/;"	m	struct:__anon17
n_access	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_access;$/;"	m	struct:__anon18
n_access	network/orion_old/power_array.h	/^	unsigned long int n_access;	$/;"	m	struct:__anon72
n_access	network/orion_old/power_array.h	/^	unsigned long int n_access;$/;"	m	struct:__anon71
n_anyreq	network/orion/SIM_misc.h	/^	LIB_Type_max_uint n_anyreq;$/;"	m	struct:__anon34
n_bit_match	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_bit_match;$/;"	m	struct:__anon18
n_bit_match	network/orion_old/power_array.h	/^	unsigned long int n_bit_match;	$/;"	m	struct:__anon72
n_bit_mismatch	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_bit_mismatch;$/;"	m	struct:__anon18
n_bit_mismatch	network/orion_old/power_array.h	/^	unsigned long int n_bit_mismatch;	$/;"	m	struct:__anon72
n_bits	network/orion/SIM_array_internal.h	/^	u_int n_bits;$/;"	m	struct:__anon14
n_bits	network/orion/SIM_array_internal.h	/^	u_int n_bits;$/;"	m	struct:__anon18
n_bits	network/orion_old/power_array.h	/^	unsigned n_bits;$/;"	m	struct:__anon68
n_bits	network/orion_old/power_array.h	/^	unsigned n_bits;$/;"	m	struct:__anon72
n_cache_in	network/orion/SIM_router.h	/^	u_int n_cache_in;$/;"	m	struct:__anon48
n_cache_out	network/orion/SIM_router.h	/^	u_int n_cache_out;$/;"	m	struct:__anon48
n_charge	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_charge;$/;"	m	struct:__anon22
n_charge	network/orion_old/power_array.h	/^	unsigned long int n_charge;$/;"	m	struct:__anon76
n_chg_addr	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_chg_addr;$/;"	m	struct:__anon14
n_chg_addr	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_chg_addr;$/;"	m	struct:__anon18
n_chg_addr	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_chg_addr;$/;"	m	struct:__anon20
n_chg_addr	network/orion_old/power_array.h	/^	unsigned long int n_chg_addr;	$/;"	m	struct:__anon72
n_chg_addr	network/orion_old/power_array.h	/^	unsigned long int n_chg_addr;$/;"	m	struct:__anon68
n_chg_addr	network/orion_old/power_array.h	/^	unsigned long int n_chg_addr;$/;"	m	struct:__anon74
n_chg_blk	network/orion/SIM_ALU.h	/^	LIB_Type_max_uint n_chg_blk[PLX_BLK];$/;"	m	struct:__anon4
n_chg_carry	network/orion/SIM_arbiter.h	/^	LIB_Type_max_uint n_chg_carry;$/;"	m	struct:__anon7
n_chg_carry	network/orion_old/power_arbiter.h	/^	unsigned long int n_chg_carry; \/\/internal node of rr arbiter$/;"	m	struct:__anon58
n_chg_carry_in	network/orion/SIM_arbiter.h	/^	LIB_Type_max_uint n_chg_carry_in;$/;"	m	struct:__anon7
n_chg_carry_in	network/orion_old/power_arbiter.h	/^	unsigned long int n_chg_carry_in; \/\/internal node of rr arbiter$/;"	m	struct:__anon58
n_chg_ctr	network/orion/SIM_crossbar.h	/^	LIB_Type_max_uint n_chg_ctr;$/;"	m	struct:__anon32
n_chg_ctr	network/orion/SIM_permu.h	/^	LIB_Type_max_uint n_chg_ctr;$/;"	m	struct:__anon40
n_chg_ctr	network/orion_old/power_crossbar.h	/^	unsigned long int n_chg_ctr;$/;"	m	struct:__anon87
n_chg_data	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_chg_data;$/;"	m	struct:__anon21
n_chg_data	network/orion_old/power_array.h	/^	unsigned long int n_chg_data;	$/;"	m	struct:__anon75
n_chg_grant	network/orion/SIM_arbiter.h	/^	LIB_Type_max_uint n_chg_grant;$/;"	m	struct:__anon7
n_chg_grant	network/orion_old/power_arbiter.h	/^	unsigned long int n_chg_grant;$/;"	m	struct:__anon58
n_chg_in	network/orion/SIM_crossbar.h	/^	LIB_Type_max_uint n_chg_in;$/;"	m	struct:__anon32
n_chg_in	network/orion/SIM_permu.h	/^	LIB_Type_max_uint n_chg_in;$/;"	m	struct:__anon40
n_chg_in	network/orion/SIM_permu.h	/^	LIB_Type_max_uint n_chg_in;$/;"	m	struct:__anon41
n_chg_in	network/orion_old/power_crossbar.h	/^	unsigned long int n_chg_in;$/;"	m	struct:__anon87
n_chg_int	network/orion/SIM_crossbar.h	/^	LIB_Type_max_uint n_chg_int;$/;"	m	struct:__anon32
n_chg_int	network/orion/SIM_permu.h	/^	LIB_Type_max_uint n_chg_int;$/;"	m	struct:__anon40
n_chg_int	network/orion_old/power_crossbar.h	/^	unsigned long int n_chg_int;$/;"	m	struct:__anon87
n_chg_l1	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_chg_l1;$/;"	m	struct:__anon14
n_chg_l1	network/orion_old/power_array.h	/^	unsigned long int n_chg_l1;$/;"	m	struct:__anon68
n_chg_lin	network/orion/SIM_permu.h	/^	LIB_Type_max_uint n_chg_lin[6];	\/* left one-hot node *\/$/;"	m	struct:__anon41
n_chg_mint	network/orion/SIM_arbiter.h	/^	LIB_Type_max_uint n_chg_mint;$/;"	m	struct:__anon7
n_chg_mint	network/orion_old/power_arbiter.h	/^	unsigned long int n_chg_mint; \/\/internal node of matrix arbiter$/;"	m	struct:__anon58
n_chg_oin	network/orion/SIM_permu.h	/^	LIB_Type_max_uint n_chg_oin;	\/* OR gate input node *\/$/;"	m	struct:__anon41
n_chg_out	network/orion/SIM_crossbar.h	/^	LIB_Type_max_uint n_chg_out;$/;"	m	struct:__anon32
n_chg_out	network/orion/SIM_permu.h	/^	LIB_Type_max_uint n_chg_out;$/;"	m	struct:__anon40
n_chg_out	network/orion/SIM_permu.h	/^	LIB_Type_max_uint n_chg_out;$/;"	m	struct:__anon41
n_chg_out	network/orion_old/power_crossbar.h	/^	unsigned long int n_chg_out;$/;"	m	struct:__anon87
n_chg_output	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_chg_output;$/;"	m	struct:__anon14
n_chg_output	network/orion_old/power_array.h	/^	unsigned long int n_chg_output;$/;"	m	struct:__anon68
n_chg_pass	network/orion/SIM_permu.h	/^	LIB_Type_max_uint n_chg_pass;$/;"	m	struct:__anon40
n_chg_req	network/orion/SIM_arbiter.h	/^	LIB_Type_max_uint n_chg_req;$/;"	m	struct:__anon7
n_chg_req	network/orion_old/power_arbiter.h	/^	unsigned long int n_chg_req;$/;"	m	struct:__anon58
n_chg_rin	network/orion/SIM_permu.h	/^	LIB_Type_max_uint n_chg_rin[6];	\/* right one-hot node *\/$/;"	m	struct:__anon41
n_chg_stg	network/orion/SIM_permu.h	/^	LIB_Type_max_uint n_chg_stg;$/;"	m	struct:__anon40
n_chg_zin	network/orion/SIM_permu.h	/^	LIB_Type_max_uint n_chg_zin[6];	\/* z\/w input node *\/$/;"	m	struct:__anon41
n_chgreq	network/orion/SIM_misc.h	/^	LIB_Type_max_uint n_chgreq;$/;"	m	struct:__anon34
n_clock	network/orion/SIM_misc.h	/^	LIB_Type_max_uint n_clock;$/;"	m	struct:__anon35
n_clock	network/orion_old/power_arbiter.h	/^	unsigned long int n_clock;$/;"	m	struct:__anon57
n_col_read	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_col_read;$/;"	m	struct:__anon16
n_col_read	network/orion_old/power_array.h	/^	unsigned long int n_col_read;$/;"	m	struct:__anon70
n_col_sel	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_col_sel;$/;"	m	struct:__anon16
n_col_sel	network/orion_old/power_array.h	/^	unsigned long int n_col_sel;$/;"	m	struct:__anon70
n_col_write	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_col_write;$/;"	m	struct:__anon16
n_col_write	network/orion_old/power_array.h	/^	unsigned long int n_col_write;$/;"	m	struct:__anon70
n_enc	network/orion/SIM_misc.h	/^	LIB_Type_max_uint n_enc[MAX_SEL_LEVEL];$/;"	m	struct:__anon34
n_grant	network/orion/SIM_misc.h	/^	LIB_Type_max_uint n_grant;$/;"	m	struct:__anon34
n_in	network/orion/SIM_crossbar.h	/^	u_int n_in;$/;"	m	struct:__anon32
n_in	network/orion/SIM_router.h	/^	u_int n_in;$/;"	m	struct:__anon48
n_in	network/orion_old/power_crossbar.h	/^	unsigned n_in;$/;"	m	struct:__anon87
n_in	network/orion_old/power_router_init.h	/^	unsigned n_in;$/;"	m	struct:__anon90
n_in_1st	network/orion/SIM_array_internal.h	/^	u_int n_in_1st;$/;"	m	struct:__anon14
n_in_1st	network/orion_old/power_array.h	/^	unsigned n_in_1st;$/;"	m	struct:__anon68
n_in_2nd	network/orion/SIM_array_internal.h	/^	u_int n_in_2nd;$/;"	m	struct:__anon14
n_in_2nd	network/orion_old/power_array.h	/^	unsigned n_in_2nd;$/;"	m	struct:__anon68
n_io_in	network/orion/SIM_router.h	/^	u_int n_io_in;$/;"	m	struct:__anon48
n_io_out	network/orion/SIM_router.h	/^	u_int n_io_out;$/;"	m	struct:__anon48
n_item	network/orion/SIM_array.h	/^	u_int n_item;		\/* # of items in a block *\/$/;"	m	struct:__anon9
n_item	network/orion_old/power_array.h	/^	unsigned n_item;$/;"	m	struct:__anon80
n_keep_0	network/orion/SIM_misc.h	/^	LIB_Type_max_uint n_keep_0;$/;"	m	struct:__anon35
n_keep_0	network/orion_old/power_arbiter.h	/^	unsigned long int n_keep_0;$/;"	m	struct:__anon57
n_keep_1	network/orion/SIM_misc.h	/^	LIB_Type_max_uint n_keep_1;$/;"	m	struct:__anon35
n_keep_1	network/orion_old/power_arbiter.h	/^	unsigned long int n_keep_1;$/;"	m	struct:__anon57
n_match	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_match;$/;"	m	struct:__anon18
n_match	network/orion_old/power_array.h	/^	unsigned long int n_match;	$/;"	m	struct:__anon72
n_mc_in	network/orion/SIM_router.h	/^	u_int n_mc_in;$/;"	m	struct:__anon48
n_mc_out	network/orion/SIM_router.h	/^	u_int n_mc_out;$/;"	m	struct:__anon48
n_mismatch	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_mismatch;$/;"	m	struct:__anon18
n_mismatch	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_mismatch;$/;"	m	struct:__anon20
n_mismatch	network/orion_old/power_array.h	/^	unsigned long int n_mismatch;	$/;"	m	struct:__anon72
n_mismatch	network/orion_old/power_array.h	/^	unsigned long int n_mismatch;$/;"	m	struct:__anon74
n_miss	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_miss;$/;"	m	struct:__anon18
n_miss	network/orion_old/power_array.h	/^	unsigned long int n_miss;	$/;"	m	struct:__anon72
n_out	network/orion/SIM_crossbar.h	/^	u_int n_out;$/;"	m	struct:__anon32
n_out	network/orion/SIM_router.h	/^	u_int n_out;$/;"	m	struct:__anon48
n_out	network/orion_old/power_crossbar.h	/^	unsigned n_out;$/;"	m	struct:__anon87
n_out	network/orion_old/power_router_init.h	/^	unsigned n_out;$/;"	m	struct:__anon90
n_out_0	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_out_0;$/;"	m	struct:__anon21
n_out_0	network/orion_old/power_array.h	/^	unsigned long int n_out_0;$/;"	m	struct:__anon75
n_out_0th	network/orion/SIM_array_internal.h	/^	u_int n_out_0th;$/;"	m	struct:__anon14
n_out_0th	network/orion_old/power_array.h	/^	unsigned n_out_0th;$/;"	m	struct:__anon68
n_out_1	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_out_1;$/;"	m	struct:__anon21
n_out_1	network/orion_old/power_array.h	/^	unsigned long int n_out_1;	$/;"	m	struct:__anon75
n_out_1st	network/orion/SIM_array_internal.h	/^	u_int n_out_1st;$/;"	m	struct:__anon14
n_out_1st	network/orion_old/power_array.h	/^	unsigned n_out_1st;$/;"	m	struct:__anon68
n_popResponseQueue	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::n_popResponseQueue(const Address& addr)$/;"	f	class:L1Cache_Controller
n_pre_drain	network/orion_old/power_array.C	/^static unsigned n_pre_drain( int model )$/;"	f	file:
n_pre_gate	network/orion_old/power_array.C	/^static unsigned n_pre_gate( int model )$/;"	f	file:
n_read	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_read;$/;"	m	struct:__anon15
n_read	network/orion_old/power_array.h	/^	unsigned long int n_read;$/;"	m	struct:__anon69
n_select	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_select;$/;"	m	struct:__anon21
n_select	network/orion_old/power_array.h	/^	unsigned long int n_select;	$/;"	m	struct:__anon75
n_set	network/orion/SIM_array.h	/^	u_int n_set;$/;"	m	struct:__anon9
n_set	network/orion_old/power_array.h	/^	unsigned n_set;$/;"	m	struct:__anon80
n_stg	network/orion/SIM_permu.h	/^	u_int n_stg;$/;"	m	struct:__anon41
n_switch	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_switch;$/;"	m	struct:__anon19
n_switch	network/orion/SIM_misc.h	/^	LIB_Type_max_uint n_switch;$/;"	m	struct:__anon33
n_switch	network/orion/SIM_misc.h	/^	LIB_Type_max_uint n_switch;$/;"	m	struct:__anon35
n_switch	network/orion_old/power_arbiter.h	/^	unsigned long int n_switch;$/;"	m	struct:__anon57
n_switch	network/orion_old/power_array.h	/^	unsigned long int n_switch;$/;"	m	struct:__anon73
n_switch	network/orion_old/power_bus.h	/^	unsigned long int n_switch;$/;"	m	struct:__anon83
n_switch_in	network/orion/SIM_router.h	/^	u_int n_switch_in;$/;"	m	struct:__anon48
n_switch_in	network/orion_old/power_router_init.h	/^	unsigned n_switch_in;$/;"	m	struct:__anon90
n_switch_out	network/orion/SIM_router.h	/^	u_int n_switch_out;$/;"	m	struct:__anon48
n_switch_out	network/orion_old/power_router_init.h	/^	unsigned n_switch_out;$/;"	m	struct:__anon90
n_total_in	network/orion/SIM_router.h	/^	u_int n_total_in;$/;"	m	struct:__anon48
n_total_in	network/orion_old/power_router_init.h	/^	unsigned n_total_in;$/;"	m	struct:__anon90
n_total_out	network/orion/SIM_router.h	/^	u_int n_total_out;$/;"	m	struct:__anon48
n_total_out	network/orion_old/power_router_init.h	/^	unsigned n_total_out;$/;"	m	struct:__anon90
n_v_channel	network/orion/SIM_router.h	/^	u_int n_v_channel;$/;"	m	struct:__anon48
n_v_channel	network/orion_old/power_router_init.h	/^	unsigned n_v_channel;$/;"	m	struct:__anon90
n_v_class	network/orion/SIM_router.h	/^	u_int n_v_class;$/;"	m	struct:__anon48
n_v_class	network/orion_old/power_router_init.h	/^	unsigned n_v_class;$/;"	m	struct:__anon90
n_write	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint n_write;$/;"	m	struct:__anon15
n_write	network/orion_old/power_array.h	/^	unsigned long int n_write;$/;"	m	struct:__anon69
name	tester/getopt.h	/^  const char *name;$/;"	m	struct:option
need_stage	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline bool need_stage(int vc, VC_state_type state, flit_stage stage)$/;"	f	class:InputUnit_d
need_stage	network/garnet-fixed-pipeline/VirtualChannel_d.C	/^bool VirtualChannel_d::need_stage(VC_state_type state, flit_stage stage)$/;"	f	class:VirtualChannel_d
need_stage_nextcycle	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline bool need_stage_nextcycle(int vc, VC_state_type state, flit_stage stage)$/;"	f	class:InputUnit_d
need_stage_nextcycle	network/garnet-fixed-pipeline/VirtualChannel_d.C	/^bool VirtualChannel_d::need_stage_nextcycle(VC_state_type state, flit_stage stage)$/;"	f	class:VirtualChannel_d
network_message_to_size	network/simple/Throttle.C	/^int network_message_to_size(NetworkMessage* net_msg_ptr)$/;"	f	file:
newSwitchID	network/simple/Topology.C	/^SwitchID Topology::newSwitchID()$/;"	f	class:Topology
newTransaction	tester/depreceated/XactAbortRequestGenerator.C	/^void XactAbortRequestGenerator::newTransaction(){$/;"	f	class:XactAbortRequestGenerator
newTransaction	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::newTransaction(bool init){$/;"	f	class:XactRequestGenerator
next_stride_address	common/Address.h	/^Address next_stride_address(const Address& addr, int stride) { $/;"	f
nextchar	tester/getopt.C	/^static char *nextchar;$/;"	v	file:
no_argument	tester/getopt.h	93;"	d
node_less_then_eq	buffers/MessageBufferNode.h	/^bool node_less_then_eq(const MessageBufferNode& n1, const MessageBufferNode& n2)$/;"	f
node_less_then_eq	common/Histogram.C	/^bool node_less_then_eq(const Histogram* n1, const Histogram* n2)$/;"	f
node_less_then_eq	eventqueue/EventQueueNode.h	/^bool node_less_then_eq(const EventQueueNode& n1, const EventQueueNode& n2)$/;"	f
node_less_then_eq	network/garnet-fixed-pipeline/flit_d.h	/^bool node_less_then_eq(flit_d* n1, flit_d* n2)$/;"	f
node_less_then_eq	network/garnet-flexible-pipeline/flit.h	/^bool node_less_then_eq(flit* n1, flit* n2)$/;"	f
node_less_then_eq	profiler/AccessTraceForAddress.C	/^bool node_less_then_eq(const AccessTraceForAddress* n1, const AccessTraceForAddress* n2)$/;"	f
node_less_then_eq	profiler/StoreTrace.C	/^bool node_less_then_eq(const StoreTrace* n1, const StoreTrace* n2)$/;"	f
node_less_then_eq	recorder/TraceRecord.h	/^  bool node_less_then_eq(const TraceRecord& rec) const { return (this->m_time <= rec.m_time); }$/;"	f	class:TraceRecord
node_less_then_eq	recorder/TraceRecord.h	/^bool node_less_then_eq(const TraceRecord& n1, const TraceRecord& n2)$/;"	f
notify	interfaces/GpusimInterface.C	/^void  GpusimInterface::notify( int status ) {$/;"	f	class:GpusimInterface
notify	interfaces/OpalInterface.C	/^void  OpalInterface::notify( int status ) {$/;"	f	class:OpalInterface
notifyCallback	interfaces/mf_api.h	/^  void (*notifyCallback)( int status );$/;"	m	struct:mf_opal_api
notifyCallback	interfaces/mf_api.h	/^  void (*notifyCallback)( int status );$/;"	m	struct:mf_ruby_api
notifyL2Miss	interfaces/OpalInterface.C	/^void OpalInterface::notifyL2Miss(int procID, physical_address_t physicalAddr, OpalMemop_t type, int tagexists) const{$/;"	f	class:OpalInterface
notifyL2Miss	interfaces/mf_api.h	/^  void (*notifyL2Miss)(int cpuNumber, physical_address_t physicalAddr, OpalMemop_t type, int tagexists);$/;"	m	struct:mf_opal_api
notifyReceiveNack	common/Driver.h	/^  virtual void notifyReceiveNack( int procID, const Address & addr, uint64 remote_timestamp, const MachineID & remote_id) { assert(0); };   \/\/Called by Sequencer$/;"	f	class:Driver
notifyReceiveNack	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::notifyReceiveNack( const Address & physicalAddr, uint64 remote_timestamp, const MachineID & remote_id ) {$/;"	f	class:XactRequestGenerator
notifyReceiveNackFinal	common/Driver.h	/^  virtual void notifyReceiveNackFinal( int procID, const Address & addr) { assert(0); }; \/\/ Called by Sequencer$/;"	f	class:Driver
notifyReceiveNackFinal	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::notifyReceiveNackFinal(const Address & physicalAddr) {$/;"	f	class:XactRequestGenerator
notifySendNack	common/Driver.h	/^  virtual void notifySendNack( int procID, const Address & addr, uint64 remote_timestamp, const MachineID & remote_id) { assert(0); };   \/\/Called by Sequencer$/;"	f	class:Driver
notifySendNack	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::notifySendNack( const Address & physicalAddr, uint64 remote_timestamp, const MachineID & remote_id) {$/;"	f	class:XactRequestGenerator
notifyTrapComplete	common/Driver.h	/^  virtual void notifyTrapComplete( int procID, const Address & newPC, int smtThread ) {assert(0);  }  \/\/ called by Sequencer$/;"	f	class:Driver
notifyTrapComplete	simics/depreceated/SimicsDriver.C	/^void SimicsDriver::notifyTrapComplete( int cpuNumber, const Address & newPC, int smtThread ){$/;"	f	class:SimicsDriver
notifyTrapComplete	simics/depreceated/SimicsProcessor.C	/^void SimicsProcessor::notifyTrapComplete( const Address & newPC ){$/;"	f	class:SimicsProcessor
notifyTrapStart	common/Driver.h	/^  virtual void notifyTrapStart( int procID, const Address & handlerPC, int threadID, int smtThread ) { assert(0); } \/\/called by Sequencer$/;"	f	class:Driver
notifyTrapStart	simics/depreceated/SimicsDriver.C	/^void SimicsDriver::notifyTrapStart( int cpuNumber, const Address & handlerPC, int threadID, int smtThread ){$/;"	f	class:SimicsDriver
notifyTrapStart	simics/depreceated/SimicsProcessor.C	/^void SimicsProcessor::notifyTrapStart( const Address & handlerPC ){$/;"	f	class:SimicsProcessor
num	system/MachineID.h	/^  int num;  \/\/ range: 0 ... number of this machine's components in the system - 1$/;"	m	struct:MachineID
numSwitches	network/simple/Topology.h	/^  int numSwitches() const { return m_number_of_switches; }$/;"	f	class:Topology
num_services	simics/depreceated/magic_call.c	/^static int num_services;$/;"	v	file:
numberOfChips	config/RubyConfig.h	/^  static int numberOfChips() { return g_NUM_CHIPS; }$/;"	f	class:RubyConfig
numberOfDirectory	config/RubyConfig.h	/^  static int numberOfDirectory() { return numberOfMemories(); }$/;"	f	class:RubyConfig
numberOfDirectoryPerChip	config/RubyConfig.h	/^  static int numberOfDirectoryPerChip() { return g_NUM_MEMORIES_PER_CHIP; }$/;"	f	class:RubyConfig
numberOfDirectoryPerChip	config/RubyConfig.h	/^  static int numberOfDirectoryPerChip(NodeID myNodeID) { return g_NUM_MEMORIES_PER_CHIP; }$/;"	f	class:RubyConfig
numberOfL1Cache	config/RubyConfig.h	/^  static int numberOfL1Cache() { return g_NUM_PROCESSORS; }$/;"	f	class:RubyConfig
numberOfL1CachePerChip	config/RubyConfig.h	/^  static int numberOfL1CachePerChip() { return numberOfProcsPerChip(); } \/\/ L1s != processors not currently supported$/;"	f	class:RubyConfig
numberOfL1CachePerChip	config/RubyConfig.h	/^  static int numberOfL1CachePerChip(NodeID myNodeID) { return numberOfL1CachePerChip(); }$/;"	f	class:RubyConfig
numberOfL1CachePerChip	slicc_interface/RubySlicc_Util.h	/^extern inline int numberOfL1CachePerChip()$/;"	f
numberOfL2Cache	config/RubyConfig.h	/^  static int numberOfL2Cache() { return g_NUM_L2_BANKS; }$/;"	f	class:RubyConfig
numberOfL2CachePerChip	config/RubyConfig.h	/^  static int numberOfL2CachePerChip() { return g_NUM_L2_BANKS_PER_CHIP; }$/;"	f	class:RubyConfig
numberOfL2CachePerChip	config/RubyConfig.h	/^  static int numberOfL2CachePerChip(NodeID myNodeID) { return numberOfL2CachePerChip(); }$/;"	f	class:RubyConfig
numberOfMemories	config/RubyConfig.h	/^  static int numberOfMemories() { return g_NUM_MEMORIES; }$/;"	f	class:RubyConfig
numberOfNodes	slicc_interface/RubySlicc_Util.h	/^extern inline int numberOfNodes()$/;"	f
numberOfPersistentArbiter	config/RubyConfig.h	/^  static int numberOfPersistentArbiter() { return numberOfMemories(); }$/;"	f	class:RubyConfig
numberOfPersistentArbiterPerChip	config/RubyConfig.h	/^  static int numberOfPersistentArbiterPerChip() {return numberOfDirectoryPerChip(); }$/;"	f	class:RubyConfig
numberOfPersistentArbiterPerChip	config/RubyConfig.h	/^  static int numberOfPersistentArbiterPerChip(NodeID myNodeID) {return numberOfDirectoryPerChip(myNodeID); }$/;"	f	class:RubyConfig
numberOfProcessors	config/RubyConfig.h	/^  static int numberOfProcessors() { return g_NUM_PROCESSORS; }$/;"	f	class:RubyConfig
numberOfProcsPerChip	config/RubyConfig.h	/^  static int numberOfProcsPerChip() { return g_PROCS_PER_CHIP; }$/;"	f	class:RubyConfig
number_of_sets	network/orion/SIM_array_internal.h	/^	int number_of_sets;$/;"	m	struct:__anon12
numberofSMTThreads	config/RubyConfig.h	/^  static int numberofSMTThreads() { return g_NUM_SMT_THREADS; }$/;"	f	class:RubyConfig
o_popForwardedRequestQueue	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::o_popForwardedRequestQueue(const Address& addr)$/;"	f	class:L1Cache_Controller
obj	depreceated/module/ruby.c	/^  conf_object_t obj;$/;"	m	struct:__anon1	file:
observeMemoryAccess	simics/depreceated/SimicsDriver.C	/^void SimicsDriver::observeMemoryAccess(memory_transaction_t *mem_trans) {$/;"	f	class:SimicsDriver
observeMemoryAccess	simics/depreceated/SimicsProcessor.C	/^void SimicsProcessor::observeMemoryAccess(memory_transaction_t *mem_trans) {$/;"	f	class:SimicsProcessor
okToIssueStarving	system/NodePersistentTable.C	/^bool NodePersistentTable::okToIssueStarving(const Address& address) const$/;"	f	class:NodePersistentTable
okToIssueStarving	system/PersistentTable.C	/^bool PersistentTable::okToIssueStarving(const Address& address) const$/;"	f	class:PersistentTable
omflip	network/orion/SIM_permu.h	/^		SIM_omflip_t omflip;$/;"	m	union:__anon42::__anon43
opalLoadNotify	system/System.C	/^void System::opalLoadNotify()$/;"	f	class:System
opal_interface	depreceated/module/ruby.c	/^mf_ruby_api_t            *opal_interface;$/;"	v
operator !=	common/Address.h	/^bool operator!=(const Address& obj1, const Address& obj2)$/;"	f
operator !=	system/MachineID.h	/^bool operator!=(const MachineID & obj1, const MachineID & obj2)$/;"	f
operator ()	common/Address.h	/^    bool operator()(const Address& s1, const Address& s2) const { return s1 == s2; }$/;"	f	struct:std::equal_to
operator ()	common/Address.h	/^    size_t operator()(const Address &s) const { return (size_t) s.getAddress(); }$/;"	f	struct:__gnu_cxx::hash
operator ++	generated/MI_example/AccessModeType.C	/^AccessModeType& operator++( AccessModeType& e) {$/;"	f
operator ++	generated/MI_example/AccessPermission.C	/^AccessPermission& operator++( AccessPermission& e) {$/;"	f
operator ++	generated/MI_example/AccessType.C	/^AccessType& operator++( AccessType& e) {$/;"	f
operator ++	generated/MI_example/AllocationStrategy.C	/^AllocationStrategy& operator++( AllocationStrategy& e) {$/;"	f
operator ++	generated/MI_example/CacheRequestType.C	/^CacheRequestType& operator++( CacheRequestType& e) {$/;"	f
operator ++	generated/MI_example/CoherenceRequestType.C	/^CoherenceRequestType& operator++( CoherenceRequestType& e) {$/;"	f
operator ++	generated/MI_example/CoherenceResponseType.C	/^CoherenceResponseType& operator++( CoherenceResponseType& e) {$/;"	f
operator ++	generated/MI_example/DetermGETXGeneratorStatus.C	/^DetermGETXGeneratorStatus& operator++( DetermGETXGeneratorStatus& e) {$/;"	f
operator ++	generated/MI_example/DetermInvGeneratorStatus.C	/^DetermInvGeneratorStatus& operator++( DetermInvGeneratorStatus& e) {$/;"	f
operator ++	generated/MI_example/DetermSeriesGETSGeneratorStatus.C	/^DetermSeriesGETSGeneratorStatus& operator++( DetermSeriesGETSGeneratorStatus& e) {$/;"	f
operator ++	generated/MI_example/Directory_Event.C	/^Directory_Event& operator++( Directory_Event& e) {$/;"	f
operator ++	generated/MI_example/Directory_State.C	/^Directory_State& operator++( Directory_State& e) {$/;"	f
operator ++	generated/MI_example/GenericMachineType.C	/^GenericMachineType& operator++( GenericMachineType& e) {$/;"	f
operator ++	generated/MI_example/GenericRequestType.C	/^GenericRequestType& operator++( GenericRequestType& e) {$/;"	f
operator ++	generated/MI_example/L1Cache_Event.C	/^L1Cache_Event& operator++( L1Cache_Event& e) {$/;"	f
operator ++	generated/MI_example/L1Cache_State.C	/^L1Cache_State& operator++( L1Cache_State& e) {$/;"	f
operator ++	generated/MI_example/LinkType.C	/^LinkType& operator++( LinkType& e) {$/;"	f
operator ++	generated/MI_example/LockStatus.C	/^LockStatus& operator++( LockStatus& e) {$/;"	f
operator ++	generated/MI_example/MachineType.C	/^MachineType& operator++( MachineType& e) {$/;"	f
operator ++	generated/MI_example/MaskPredictorIndex.C	/^MaskPredictorIndex& operator++( MaskPredictorIndex& e) {$/;"	f
operator ++	generated/MI_example/MaskPredictorTraining.C	/^MaskPredictorTraining& operator++( MaskPredictorTraining& e) {$/;"	f
operator ++	generated/MI_example/MaskPredictorType.C	/^MaskPredictorType& operator++( MaskPredictorType& e) {$/;"	f
operator ++	generated/MI_example/MemoryRequestType.C	/^MemoryRequestType& operator++( MemoryRequestType& e) {$/;"	f
operator ++	generated/MI_example/MemorySpaceType.C	/^MemorySpaceType& operator++( MemorySpaceType& e) {$/;"	f
operator ++	generated/MI_example/MessageSizeType.C	/^MessageSizeType& operator++( MessageSizeType& e) {$/;"	f
operator ++	generated/MI_example/PrefetchBit.C	/^PrefetchBit& operator++( PrefetchBit& e) {$/;"	f
operator ++	generated/MI_example/RequestGeneratorStatus.C	/^RequestGeneratorStatus& operator++( RequestGeneratorStatus& e) {$/;"	f
operator ++	generated/MI_example/SearchMechanism.C	/^SearchMechanism& operator++( SearchMechanism& e) {$/;"	f
operator ++	generated/MI_example/SequencerStatus.C	/^SequencerStatus& operator++( SequencerStatus& e) {$/;"	f
operator ++	generated/MI_example/SpecifiedGeneratorType.C	/^SpecifiedGeneratorType& operator++( SpecifiedGeneratorType& e) {$/;"	f
operator ++	generated/MI_example/TesterStatus.C	/^TesterStatus& operator++( TesterStatus& e) {$/;"	f
operator ++	generated/MI_example/TopologyType.C	/^TopologyType& operator++( TopologyType& e) {$/;"	f
operator ++	generated/MI_example/TransientRequestType.C	/^TransientRequestType& operator++( TransientRequestType& e) {$/;"	f
operator ++	generated/MI_example/TransitionResult.C	/^TransitionResult& operator++( TransitionResult& e) {$/;"	f
operator ++	generated/MI_example/TriggerType.C	/^TriggerType& operator++( TriggerType& e) {$/;"	f
operator <	common/Address.h	/^bool operator<(const Address& obj1, const Address& obj2)$/;"	f
operator <	network/simple/PerfectSwitch.C	/^bool operator<(const LinkOrder& l1, const LinkOrder& l2) {$/;"	f
operator <<	buffers/MessageBuffer.h	/^ostream& operator<<(ostream& out, const MessageBuffer& obj)$/;"	f
operator <<	buffers/MessageBufferNode.h	/^ostream& operator<<(ostream& out, const MessageBufferNode& obj)$/;"	f
operator <<	common/Address.h	/^ostream& operator<<(ostream& out, const Address& obj)$/;"	f
operator <<	common/BigSet.h	/^ostream& operator<<(ostream& out, const Set& obj)$/;"	f
operator <<	common/Consumer.h	/^ostream& operator<<(ostream& out, const Consumer& obj)$/;"	f
operator <<	common/DataBlock.h	/^ostream& operator<<(ostream& out, const DataBlock& obj)$/;"	f
operator <<	common/Debug.h	/^ostream& operator<<(ostream& out, const Debug& obj)$/;"	f
operator <<	common/Histogram.h	/^ostream& operator<<(ostream& out, const Histogram& obj)$/;"	f
operator <<	common/IntPair.h	/^ostream& operator<<(ostream& out, const IntPair& obj)$/;"	f
operator <<	common/IntPairSet.h	/^ostream& operator<<(ostream& out, const IntPairSet& obj)$/;"	f
operator <<	common/IntSet.h	/^ostream& operator<<(ostream& out, const IntSet& obj)$/;"	f
operator <<	common/MemfetchSet.h	/^ostream& operator<<(ostream& out, const MemfetchSet& obj)$/;"	f
operator <<	common/NetDest.h	/^ostream& operator<<(ostream& out, const NetDest& obj)$/;"	f
operator <<	common/OptBigSet.h	/^ostream& operator<<(ostream& out, const Set& obj)$/;"	f
operator <<	common/Set.h	/^ostream& operator<<(ostream& out, const Set& obj)$/;"	f
operator <<	common/SubBlock.h	/^ostream& operator<<(ostream& out, const SubBlock& obj)$/;"	f
operator <<	eventqueue/EventQueue.h	/^ostream& operator<<(ostream& out, const EventQueue& obj)$/;"	f
operator <<	eventqueue/EventQueueNode.h	/^ostream& operator<<(ostream& out, const EventQueueNode& obj)$/;"	f
operator <<	generated/MI_example/AccessModeType.C	/^ostream& operator<<(ostream& out, const AccessModeType& obj)$/;"	f
operator <<	generated/MI_example/AccessPermission.C	/^ostream& operator<<(ostream& out, const AccessPermission& obj)$/;"	f
operator <<	generated/MI_example/AccessType.C	/^ostream& operator<<(ostream& out, const AccessType& obj)$/;"	f
operator <<	generated/MI_example/AllocationStrategy.C	/^ostream& operator<<(ostream& out, const AllocationStrategy& obj)$/;"	f
operator <<	generated/MI_example/CacheMsg.h	/^ostream& operator<<(ostream& out, const CacheMsg& obj)$/;"	f
operator <<	generated/MI_example/CacheRequestType.C	/^ostream& operator<<(ostream& out, const CacheRequestType& obj)$/;"	f
operator <<	generated/MI_example/CoherenceRequestType.C	/^ostream& operator<<(ostream& out, const CoherenceRequestType& obj)$/;"	f
operator <<	generated/MI_example/CoherenceResponseType.C	/^ostream& operator<<(ostream& out, const CoherenceResponseType& obj)$/;"	f
operator <<	generated/MI_example/DetermGETXGeneratorStatus.C	/^ostream& operator<<(ostream& out, const DetermGETXGeneratorStatus& obj)$/;"	f
operator <<	generated/MI_example/DetermInvGeneratorStatus.C	/^ostream& operator<<(ostream& out, const DetermInvGeneratorStatus& obj)$/;"	f
operator <<	generated/MI_example/DetermSeriesGETSGeneratorStatus.C	/^ostream& operator<<(ostream& out, const DetermSeriesGETSGeneratorStatus& obj)$/;"	f
operator <<	generated/MI_example/Directory_Entry.h	/^ostream& operator<<(ostream& out, const Directory_Entry& obj)$/;"	f
operator <<	generated/MI_example/Directory_Event.C	/^ostream& operator<<(ostream& out, const Directory_Event& obj)$/;"	f
operator <<	generated/MI_example/Directory_State.C	/^ostream& operator<<(ostream& out, const Directory_State& obj)$/;"	f
operator <<	generated/MI_example/GenericMachineType.C	/^ostream& operator<<(ostream& out, const GenericMachineType& obj)$/;"	f
operator <<	generated/MI_example/GenericRequestType.C	/^ostream& operator<<(ostream& out, const GenericRequestType& obj)$/;"	f
operator <<	generated/MI_example/L1Cache_Entry.h	/^ostream& operator<<(ostream& out, const L1Cache_Entry& obj)$/;"	f
operator <<	generated/MI_example/L1Cache_Event.C	/^ostream& operator<<(ostream& out, const L1Cache_Event& obj)$/;"	f
operator <<	generated/MI_example/L1Cache_State.C	/^ostream& operator<<(ostream& out, const L1Cache_State& obj)$/;"	f
operator <<	generated/MI_example/L1Cache_TBE.h	/^ostream& operator<<(ostream& out, const L1Cache_TBE& obj)$/;"	f
operator <<	generated/MI_example/LinkType.C	/^ostream& operator<<(ostream& out, const LinkType& obj)$/;"	f
operator <<	generated/MI_example/LockStatus.C	/^ostream& operator<<(ostream& out, const LockStatus& obj)$/;"	f
operator <<	generated/MI_example/MachineType.C	/^ostream& operator<<(ostream& out, const MachineType& obj)$/;"	f
operator <<	generated/MI_example/MaskPredictorIndex.C	/^ostream& operator<<(ostream& out, const MaskPredictorIndex& obj)$/;"	f
operator <<	generated/MI_example/MaskPredictorTraining.C	/^ostream& operator<<(ostream& out, const MaskPredictorTraining& obj)$/;"	f
operator <<	generated/MI_example/MaskPredictorType.C	/^ostream& operator<<(ostream& out, const MaskPredictorType& obj)$/;"	f
operator <<	generated/MI_example/MemoryMsg.h	/^ostream& operator<<(ostream& out, const MemoryMsg& obj)$/;"	f
operator <<	generated/MI_example/MemoryRequestType.C	/^ostream& operator<<(ostream& out, const MemoryRequestType& obj)$/;"	f
operator <<	generated/MI_example/MemorySpaceType.C	/^ostream& operator<<(ostream& out, const MemorySpaceType& obj)$/;"	f
operator <<	generated/MI_example/MessageSizeType.C	/^ostream& operator<<(ostream& out, const MessageSizeType& obj)$/;"	f
operator <<	generated/MI_example/PrefetchBit.C	/^ostream& operator<<(ostream& out, const PrefetchBit& obj)$/;"	f
operator <<	generated/MI_example/Protocol.h	/^ostream& operator<<(ostream& out, const Protocol& obj)$/;"	f
operator <<	generated/MI_example/RequestGeneratorStatus.C	/^ostream& operator<<(ostream& out, const RequestGeneratorStatus& obj)$/;"	f
operator <<	generated/MI_example/RequestMsg.h	/^ostream& operator<<(ostream& out, const RequestMsg& obj)$/;"	f
operator <<	generated/MI_example/ResponseMsg.h	/^ostream& operator<<(ostream& out, const ResponseMsg& obj)$/;"	f
operator <<	generated/MI_example/SearchMechanism.C	/^ostream& operator<<(ostream& out, const SearchMechanism& obj)$/;"	f
operator <<	generated/MI_example/SequencerStatus.C	/^ostream& operator<<(ostream& out, const SequencerStatus& obj)$/;"	f
operator <<	generated/MI_example/SpecifiedGeneratorType.C	/^ostream& operator<<(ostream& out, const SpecifiedGeneratorType& obj)$/;"	f
operator <<	generated/MI_example/TesterStatus.C	/^ostream& operator<<(ostream& out, const TesterStatus& obj)$/;"	f
operator <<	generated/MI_example/TopologyType.C	/^ostream& operator<<(ostream& out, const TopologyType& obj)$/;"	f
operator <<	generated/MI_example/TransientRequestType.C	/^ostream& operator<<(ostream& out, const TransientRequestType& obj)$/;"	f
operator <<	generated/MI_example/TransitionResult.C	/^ostream& operator<<(ostream& out, const TransitionResult& obj)$/;"	f
operator <<	generated/MI_example/TriggerMsg.h	/^ostream& operator<<(ostream& out, const TriggerMsg& obj)$/;"	f
operator <<	generated/MI_example/TriggerType.C	/^ostream& operator<<(ostream& out, const TriggerType& obj)$/;"	f
operator <<	interfaces/OpalInterface.h	/^ostream& operator<<(ostream& out, const OpalInterface& obj)$/;"	f
operator <<	network/Network.h	/^ostream& operator<<(ostream& out, const Network& obj)$/;"	f
operator <<	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^ostream& operator<<(ostream& out, const GarnetNetwork_d& obj)$/;"	f
operator <<	network/garnet-fixed-pipeline/flitBuffer_d.h	/^ostream& operator<<(ostream& out, const flitBuffer_d& obj)$/;"	f
operator <<	network/garnet-fixed-pipeline/flit_d.h	/^ostream& operator<<(ostream& out, const flit_d& obj)$/;"	f
operator <<	network/garnet-flexible-pipeline/GarnetNetwork.h	/^ostream& operator<<(ostream& out, const GarnetNetwork& obj)$/;"	f
operator <<	network/garnet-flexible-pipeline/flit.h	/^ostream& operator<<(ostream& out, const flit& obj)$/;"	f
operator <<	network/garnet-flexible-pipeline/flitBuffer.h	/^ostream& operator<<(ostream& out, const flitBuffer& obj)$/;"	f
operator <<	network/simple/PerfectSwitch.h	/^ostream& operator<<(ostream& out, const PerfectSwitch& obj)$/;"	f
operator <<	network/simple/SimpleNetwork.h	/^ostream& operator<<(ostream& out, const SimpleNetwork& obj)$/;"	f
operator <<	network/simple/Switch.h	/^ostream& operator<<(ostream& out, const Switch& obj)$/;"	f
operator <<	network/simple/Throttle.h	/^ostream& operator<<(ostream& out, const Throttle& obj)$/;"	f
operator <<	network/simple/Topology.h	/^ostream& operator<<(ostream& out, const Topology& obj)$/;"	f
operator <<	profiler/AccessTraceForAddress.h	/^ostream& operator<<(ostream& out, const AccessTraceForAddress& obj)$/;"	f
operator <<	profiler/AddressProfiler.h	/^ostream& operator<<(ostream& out, const AddressProfiler& obj)$/;"	f
operator <<	profiler/CacheProfiler.h	/^ostream& operator<<(ostream& out, const CacheProfiler& obj)$/;"	f
operator <<	profiler/Profiler.h	/^ostream& operator<<(ostream& out, const Profiler& obj)$/;"	f
operator <<	profiler/StoreTrace.h	/^ostream& operator<<(ostream& out, const StoreTrace& obj)$/;"	f
operator <<	recorder/CacheRecorder.h	/^ostream& operator<<(ostream& out, const CacheRecorder& obj)$/;"	f
operator <<	recorder/TraceRecord.h	/^ostream& operator<<(ostream& out, const TraceRecord& obj)$/;"	f
operator <<	recorder/Tracer.h	/^ostream& operator<<(ostream& out, const Tracer& obj)$/;"	f
operator <<	simics/depreceated/SimicsDriver.C	/^ostream& operator<<(ostream& out, const MemoryTransactionResult& obj) {$/;"	f
operator <<	simics/depreceated/SimicsDriver.h	/^ostream& operator<<(ostream& out, const SimicsDriver& obj)$/;"	f
operator <<	simics/depreceated/SimicsProcessor.C	/^ostream& operator<<(ostream& out, const SimicsProcessor::CacheRequestStatus& obj) {$/;"	f
operator <<	simics/depreceated/SimicsProcessor.h	/^ostream& operator<<(ostream& out, const SimicsProcessor& obj)$/;"	f
operator <<	slicc_interface/AbstractCacheEntry.h	/^ostream& operator<<(ostream& out, const AbstractCacheEntry& obj)$/;"	f
operator <<	slicc_interface/AbstractChip.h	/^ostream& operator<<(ostream& out, const AbstractChip& obj)$/;"	f
operator <<	slicc_interface/Message.h	/^ostream& operator<<(ostream& out, const Message& obj)$/;"	f
operator <<	slicc_interface/NetworkMessage.h	/^ostream& operator<<(ostream& out, const NetworkMessage& obj)$/;"	f
operator <<	system/CacheMemory.h	/^ostream& operator<<(ostream& out, const CacheMemory<ENTRY>& obj)$/;"	f
operator <<	system/DirectoryMemory.h	/^ostream& operator<<(ostream& out, const DirectoryMemory& obj)$/;"	f
operator <<	system/GenericBloomFilter.h	/^ostream& operator<<(ostream& out, const GenericBloomFilter& obj)$/;"	f
operator <<	system/GlobalWriteVector.h	/^ostream& operator<<(ostream& out, const GlobalWriteVector& obj)$/;"	f
operator <<	system/GpusimDramInterface.C	/^ostream& operator<<(ostream& out, const GpusimDramInterface& obj)$/;"	f
operator <<	system/MachineID.h	/^ostream& operator<<(ostream& out, const MachineID& obj)$/;"	f
operator <<	system/MemoryControl.C	/^ostream& operator<<(ostream& out, const MemoryControl& obj)$/;"	f
operator <<	system/MemoryNode.h	/^ostream& operator<<(ostream& out, const MemoryNode& obj)$/;"	f
operator <<	system/NodePersistentTable.h	/^ostream& operator<<(ostream& out, const NodePersistentTable& obj)$/;"	f
operator <<	system/PerfectCacheMemory.h	/^ostream& operator<<(ostream& out, const PerfectCacheMemory<ENTRY>& obj)$/;"	f
operator <<	system/PersistentArbiter.h	/^ostream& operator<<(ostream& out, const PersistentArbiter& obj)$/;"	f
operator <<	system/PersistentTable.h	/^ostream& operator<<(ostream& out, const PersistentTable& obj)$/;"	f
operator <<	system/Sequencer.h	/^ostream& operator<<(ostream& out, const Sequencer& obj)$/;"	f
operator <<	system/StoreBuffer.C	/^ostream& operator<<(ostream& out, const StoreBufferEntry& obj)$/;"	f
operator <<	system/StoreBuffer.h	/^ostream& operator<<(ostream& out, const StoreBuffer& obj)$/;"	f
operator <<	system/StoreCache.h	/^ostream& operator<<(ostream& out, const StoreCache& obj)$/;"	f
operator <<	system/System.h	/^ostream& operator<<(ostream& out, const System& obj)$/;"	f
operator <<	system/TBETable.h	/^ostream& operator<<(ostream& out, const TBETable<ENTRY>& obj)$/;"	f
operator <<	system/TCpredictor.h	/^ostream& operator<<(ostream& out, const TCpredictorContainer& obj)$/;"	f
operator <<	system/TimerTable.h	/^ostream& operator<<(ostream& out, const TimerTable& obj)$/;"	f
operator <<	tester/BarrierGenerator.h	/^ostream& operator<<(ostream& out, const BarrierGenerator& obj)$/;"	f
operator <<	tester/Check.h	/^ostream& operator<<(ostream& out, const Check& obj)$/;"	f
operator <<	tester/CheckTable.h	/^ostream& operator<<(ostream& out, const CheckTable& obj)$/;"	f
operator <<	tester/DetermGETXGenerator.h	/^ostream& operator<<(ostream& out, const DetermGETXGenerator& obj)$/;"	f
operator <<	tester/DetermInvGenerator.h	/^ostream& operator<<(ostream& out, const DetermInvGenerator& obj)$/;"	f
operator <<	tester/DetermSeriesGETSGenerator.h	/^ostream& operator<<(ostream& out, const DetermSeriesGETSGenerator& obj)$/;"	f
operator <<	tester/DeterministicDriver.h	/^ostream& operator<<(ostream& out, const DeterministicDriver& obj)$/;"	f
operator <<	tester/RaceyDriver.h	/^ostream& operator<<(ostream& out, const RaceyDriver& obj)$/;"	f
operator <<	tester/RequestGenerator.h	/^ostream& operator<<(ostream& out, const RequestGenerator& obj)$/;"	f
operator <<	tester/SyntheticDriver.h	/^ostream& operator<<(ostream& out, const SyntheticDriver& obj)$/;"	f
operator <<	tester/Tester.h	/^ostream& operator<<(ostream& out, const Tester& obj)$/;"	f
operator <<	tester/depreceated/XactAbortRequestGenerator.h	/^ostream& operator<<(ostream& out, const XactAbortRequestGenerator& obj)$/;"	f
operator <<	tester/depreceated/XactRequestGenerator.h	/^ostream& operator<<(ostream& out, const XactRequestGenerator& obj)$/;"	f
operator =	common/Address.C	/^Address& Address::operator=(const Address& obj)$/;"	f	class:Address
operator =	common/OptBigSet.C	/^Set& Set::operator=(const Set& obj) {$/;"	f	class:Set
operator =	eventqueue/EventQueueNode.h	/^  EventQueueNode& operator=(const EventQueueNode& obj) {$/;"	f	class:EventQueueNode
operator =	recorder/TraceRecord.C	/^TraceRecord& TraceRecord::operator=(const TraceRecord& obj)$/;"	f	class:TraceRecord
operator ==	common/Address.h	/^bool operator==(const Address& obj1, const Address& obj2)$/;"	f
operator ==	common/DataBlock.h	/^bool operator==(const DataBlock& obj1,const DataBlock& obj2)$/;"	f
operator ==	system/MachineID.h	/^bool operator==(const MachineID & obj1, const MachineID & obj2)$/;"	f
operator []	system/H3BloomFilter.h	/^  int operator[](const int index) const{$/;"	f	class:H3BloomFilter
operator []	system/MultiBitSelBloomFilter.h	/^  int operator[](const int index) const{$/;"	f	class:MultiBitSelBloomFilter
operator []	system/NonCountingBloomFilter.h	/^  int operator[](const int index) const{$/;"	f	class:NonCountingBloomFilter
optarg	tester/getopt.C	/^char *optarg = NULL;$/;"	v
opterr	tester/getopt.C	/^int opterr = 1;$/;"	v
optind	tester/getopt.C	/^int optind = 0;$/;"	v
option	tester/getopt.h	/^struct option$/;"	s
optional_argument	tester/getopt.h	95;"	d
optopt	tester/getopt.C	/^int optopt = '?';$/;"	v
or_byte_masks	slicc_interface/RubySlicc_Util.h	/^extern inline ruby_mem_access_byte_mask_t or_byte_masks(ruby_mem_access_byte_mask_t mask1, ruby_mem_access_byte_mask_t mask2) {$/;"	f
ordering	tester/getopt.C	/^} ordering;$/;"	v	typeref:enum:__anon93	file:
os	network/simple/Network_Files/GarnetFileMaker.py	/^import sys, os, string, re, math$/;"	i
os	network/simple/Network_Files/NetworkFileMaker.py	/^import sys, os, string, re, math$/;"	i
out	network/orion/SIM_permu.h	/^	LIB_Type_max_uint out;$/;"	m	struct:__anon40
out	network/orion/SIM_permu.h	/^	LIB_Type_max_uint out;$/;"	m	struct:__anon41
outNetLink	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	NetworkLink_d *outNetLink;$/;"	m	class:NetworkInterface_d
outNetLink	network/garnet-flexible-pipeline/NetworkInterface.h	/^	NetworkLink *outNetLink;$/;"	m	class:NetworkInterface
outNode_ptr	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	Vector<MessageBuffer *> outNode_ptr; \/\/ The Message buffers that provides messages to the protocol $/;"	m	class:NetworkInterface_d
outNode_ptr	network/garnet-flexible-pipeline/NetworkInterface.h	/^	Vector<MessageBuffer *> outNode_ptr; \/\/ The Message buffers that provides messages to the protocol $/;"	m	class:NetworkInterface
outSrcQueue	network/garnet-fixed-pipeline/NetworkInterface_d.h	/^	flitBuffer_d *outSrcQueue; \/\/ For modelling link contention$/;"	m	class:NetworkInterface_d
outSrcQueue	network/garnet-flexible-pipeline/NetworkInterface.h	/^	flitBuffer *outSrcQueue; \/\/ For modelling link contention$/;"	m	class:NetworkInterface
out_buf	network/orion/SIM_router.h	/^	SIM_array_t out_buf;$/;"	m	struct:__anon47
out_buf	network/orion/SIM_router.h	/^	int out_buf;$/;"	m	struct:__anon48
out_buf_info	network/orion/SIM_router.h	/^	SIM_array_info_t out_buf_info;$/;"	m	struct:__anon48
out_buffer_model	network/orion/SIM_router.h	/^	int out_buffer_model;$/;"	m	struct:__anon48
out_cbuf_crsbar	network/orion/SIM_router.h	/^	SIM_crossbar_t out_cbuf_crsbar;$/;"	m	struct:__anon47
out_mask	network/orion/SIM_array_internal.h	/^	LIB_Type_max_uint out_mask;$/;"	m	struct:__anon21
out_mask	network/orion_old/power_array.h	/^	unsigned long int out_mask;	$/;"	m	struct:__anon75
out_seg	network/orion/SIM_crossbar.h	/^	u_int out_seg;	\/* only used by segmented crossbar *\/$/;"	m	struct:__anon32
out_share_buf	network/orion/SIM_router.h	/^	int out_share_buf;	\/* whether output virtual classes share buffer *\/$/;"	m	struct:__anon48
out_share_buf	network/orion_old/power_router_init.h	/^	int out_share_buf;$/;"	m	struct:__anon90
out_share_switch	network/orion/SIM_router.h	/^	int out_share_switch;	\/* whether output virtual classes share switch *\/$/;"	m	struct:__anon48
out_share_switch	network/orion_old/power_router_init.h	/^	int out_share_switch;$/;"	m	struct:__anon90
outdrv	network/orion/SIM_array.h	/^	SIM_array_out_t outdrv;$/;"	m	struct:__anon8
outdrv	network/orion_old/power_array.h	/^	power_out outdrv;$/;"	m	struct:__anon79
outdrv_model	network/orion/SIM_array.h	/^	int outdrv_model;$/;"	m	struct:__anon9
outdrv_model	network/orion_old/power_array.h	/^	int outdrv_model;$/;"	m	struct:__anon80
output	common/Address.C	/^void Address::output(ostream& out) const$/;"	f	class:Address
output	recorder/TraceRecord.C	/^void TraceRecord::output(ostream& out) const$/;"	f	class:TraceRecord
pa_t	common/Global.h	/^typedef uint64 pa_t;$/;"	t
pa_t	interfaces/mf_api.h	/^typedef physical_address_t pa_t;$/;"	t
pageSizeBits	config/RubyConfig.h	/^  static int pageSizeBits() { return g_PAGE_SIZE_BITS; }$/;"	f	class:RubyConfig
pageSizeBytes	config/RubyConfig.h	/^  static int pageSizeBytes() { return g_PAGE_SIZE_BYTES; }$/;"	f	class:RubyConfig
pageWalk	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::pageWalk(TransactionInterfaceManager *xact_mgr, physical_address_t old_phys_page, physical_address_t new_phys_page) {$/;"	f	class:SimicsHypervisor
page_address	common/Address.h	/^Address page_address(const Address& addr) { Address temp(addr); temp.makePageAddress(); return temp; }$/;"	f
parseAttrFile	generated/MI_example/attrlex.c	/^extern "C" int parseAttrFile( FILE *inputFile, const char *relative_include_path, attr_value_t *myTable )$/;"	f
parseAttrString	generated/MI_example/attrlex.c	/^extern "C" int parseAttrString( const char *str, attr_value_t *myTable )$/;"	f
parseInitialize	generated/MI_example/attrlex.c	/^extern "C" void parseInitialize( void )$/;"	f
parseOptions	tester/test_framework.C	/^static void parseOptions(int argc, char **argv)$/;"	f	file:
pass	network/orion/SIM_permu.h	/^	uint pass;$/;"	m	struct:__anon40
pc_stack	tester/depreceated/XactRequestGenerator.h	/^  int pc_stack[TESTER_MAX_DEPTH];$/;"	m	class:XactRequestGenerator
pc_step_t	simics/simics_api_dummy.c	/^typedef int pc_step_t;$/;"	t	file:
peek	buffers/MessageBuffer.h	/^  const Message* peek() const { return peekAtHeadOfQueue(); }$/;"	f	class:MessageBuffer
peek	system/GpusimDramInterface.C	/^const Message* GpusimDramInterface::peek () {$/;"	f	class:GpusimDramInterface
peek	system/MemoryControl.C	/^const Message* MemoryControl::peek () {$/;"	f	class:MemoryControl
peek	system/StoreBuffer.C	/^StoreBufferEntry& StoreBuffer::peek()$/;"	f	class:StoreBuffer
peekAtHeadOfQueue	buffers/MessageBuffer.C	/^const Message* MessageBuffer::peekAtHeadOfQueue() const$/;"	f	class:MessageBuffer
peekInputRequest	system/GpusimDramInterface.h	/^   MsgPtr* peekInputRequest() { return m_input_queue.front(); }$/;"	f	class:GpusimDramInterface
peekLink	network/garnet-fixed-pipeline/NetworkLink_d.h	/^	inline flit_d* peekLink()$/;"	f	class:NetworkLink_d
peekLink	network/garnet-flexible-pipeline/NetworkLink.C	/^flit* NetworkLink::peekLink()$/;"	f	class:NetworkLink
peekMsgPtr	buffers/MessageBuffer.h	/^  const MsgPtr& peekMsgPtr() const { assert(isReady()); return m_prio_heap.peekMin().m_msgptr; }$/;"	f	class:MessageBuffer
peekMsgPtrEvenIfNotReady	buffers/MessageBuffer.h	/^  const MsgPtr& peekMsgPtrEvenIfNotReady() const {return m_prio_heap.peekMin().m_msgptr; }$/;"	f	class:MessageBuffer
peekNode	system/MemoryControl.C	/^MemoryNode MemoryControl::peekNode () {$/;"	f	class:MemoryControl
peekTopFlit	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline flit_d* peekTopFlit(int vc)$/;"	f	class:InputUnit_d
peekTopFlit	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	inline flit_d* peekTopFlit()$/;"	f	class:VirtualChannel_d
peekTopFlit	network/garnet-fixed-pipeline/flitBuffer_d.h	/^	inline flit_d* peekTopFlit()$/;"	f	class:flitBuffer_d
peekTopFlit	network/garnet-flexible-pipeline/flitBuffer.C	/^flit* flitBuffer::peekTopFlit()$/;"	f	class:flitBuffer
performCallback	tester/BarrierGenerator.C	/^void BarrierGenerator::performCallback(NodeID proc, SubBlock& data)$/;"	f	class:BarrierGenerator
performCallback	tester/Check.C	/^void Check::performCallback(NodeID proc, SubBlock& data)$/;"	f	class:Check
performCallback	tester/DetermGETXGenerator.C	/^void DetermGETXGenerator::performCallback(NodeID proc, SubBlock& data)$/;"	f	class:DetermGETXGenerator
performCallback	tester/DetermInvGenerator.C	/^void DetermInvGenerator::performCallback(NodeID proc, SubBlock& data)$/;"	f	class:DetermInvGenerator
performCallback	tester/DetermSeriesGETSGenerator.C	/^void DetermSeriesGETSGenerator::performCallback(NodeID proc, SubBlock& data)$/;"	f	class:DetermSeriesGETSGenerator
performCallback	tester/RequestGenerator.C	/^void RequestGenerator::performCallback(NodeID proc, SubBlock& data)$/;"	f	class:RequestGenerator
performCallback	tester/depreceated/XactAbortRequestGenerator.C	/^void XactAbortRequestGenerator::performCallback(NodeID proc, SubBlock& data)$/;"	f	class:XactAbortRequestGenerator
performCallback	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::performCallback(NodeID proc, SubBlock& data)$/;"	f	class:XactRequestGenerator
permute	system/BulkBloomFilter.C	/^Address BulkBloomFilter::permute(const Address & addr){$/;"	f	class:BulkBloomFilter
persistentRequestLock	system/NodePersistentTable.C	/^void NodePersistentTable::persistentRequestLock(const Address& address, NodeID llocker, AccessType type)$/;"	f	class:NodePersistentTable
persistentRequestLock	system/PersistentTable.C	/^void PersistentTable::persistentRequestLock(const Address& address, MachineID locker, AccessType type)$/;"	f	class:PersistentTable
persistentRequestUnlock	system/NodePersistentTable.C	/^void NodePersistentTable::persistentRequestUnlock(const Address& address, NodeID uunlocker)$/;"	f	class:NodePersistentTable
persistentRequestUnlock	system/PersistentTable.C	/^void PersistentTable::persistentRequestUnlock(const Address& address, MachineID unlocker)$/;"	f	class:PersistentTable
persistent_randomize	system/NodePersistentTable.C	/^int persistent_randomize[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};$/;"	v
physical_address_t	common/Global.h	/^typedef uint64 physical_address_t;$/;"	t
physical_address_t	simics/simics_api_dummy.c	/^typedef int physical_address_t;$/;"	t	file:
pickAddress	tester/DetermGETXGenerator.C	/^void DetermGETXGenerator::pickAddress()$/;"	f	class:DetermGETXGenerator
pickAddress	tester/DetermSeriesGETSGenerator.C	/^void DetermSeriesGETSGenerator::pickAddress()$/;"	f	class:DetermSeriesGETSGenerator
pickAddress	tester/RequestGenerator.C	/^void RequestGenerator::pickAddress()$/;"	f	class:RequestGenerator
pickAddress	tester/SyntheticDriver.C	/^Address SyntheticDriver::pickAddress(NodeID node)$/;"	f	class:SyntheticDriver
pickAddress	tester/depreceated/XactAbortRequestGenerator.C	/^void XactAbortRequestGenerator::pickAddress()$/;"	f	class:XactAbortRequestGenerator
pickAddress	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::pickAddress()$/;"	f	class:XactRequestGenerator
pickInitiatingNode	tester/Check.C	/^void Check::pickInitiatingNode()$/;"	f	class:Check
pickLoadAddress	tester/DetermInvGenerator.C	/^void DetermInvGenerator::pickLoadAddress()$/;"	f	class:DetermInvGenerator
pickValue	tester/Check.C	/^void Check::pickValue()$/;"	f	class:Check
pipe_depth	network/orion/SIM_router.h	/^	u_int pipe_depth;$/;"	m	struct:__anon48
pipe_depth	network/orion_old/power_router_init.h	/^	unsigned pipe_depth;$/;"	m	struct:__anon90
pipeline_stages	network/orion/SIM_router.h	/^	int pipeline_stages;	$/;"	m	struct:__anon48
playbackTrace	recorder/Tracer.C	/^int Tracer::playbackTrace(string filename)$/;"	f	class:Tracer
plx_c	network/orion/SIM_ALU.c	/^static double plx_c[PLX_GATE];$/;"	v	file:
plx_tc	network/orion/SIM_ALU.c	/^static u_int plx_tc[PLX_BLK][PLX_GATE] =$/;"	v	file:
pop	buffers/MessageBuffer.C	/^void MessageBuffer::pop()$/;"	f	class:MessageBuffer
popInputRequest	system/GpusimDramInterface.h	/^   void popInputRequest() { m_input_queue.pop_front(); }$/;"	f	class:GpusimDramInterface
posixly_correct	tester/getopt.C	/^static char *posixly_correct;$/;"	v	file:
possibleTransition	generated/MI_example/Directory_Profiler.C	/^void Directory_Profiler::possibleTransition(Directory_State state, Directory_Event event)$/;"	f	class:Directory_Profiler
possibleTransition	generated/MI_example/L1Cache_Profiler.C	/^void L1Cache_Profiler::possibleTransition(L1Cache_State state, L1Cache_Event event)$/;"	f	class:L1Cache_Profiler
postMagicCrossCalls	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::postMagicCrossCalls(TransactionInterfaceManager* xact_mgr) {$/;"	f	class:SimicsHypervisor
postMagicCrossCalls	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::postMagicCrossCalls(int proc_num) {$/;"	f	class:SimicsHypervisor
power_amp	network/orion_old/power_array.h	/^} power_amp;$/;"	t	typeref:struct:__anon71
power_amp_model	network/orion_old/power_array.h	/^} power_amp_model;$/;"	t	typeref:enum:__anon61
power_arbiter	network/orion_old/power_arbiter.h	/^} power_arbiter;$/;"	t	typeref:struct:__anon58
power_arbiter_init	network/orion_old/power_arbiter.C	/^int power_arbiter_init(power_arbiter *arb, int arbiter_model, int ff_model, unsigned req_width, double length, power_array_info *info)$/;"	f
power_arbiter_model	network/orion_old/power_arbiter.h	/^} power_arbiter_model;$/;"	t	typeref:enum:__anon55
power_arr_pre	network/orion_old/power_array.h	/^} power_arr_pre;$/;"	t	typeref:struct:__anon76
power_array	network/orion_old/power_array.h	/^} power_array;$/;"	t	typeref:struct:__anon79
power_array_info	network/orion_old/power_array.h	/^} power_array_info;	$/;"	t	typeref:struct:__anon80
power_array_init	network/orion_old/power_array.C	/^int power_array_init(power_array_info *info, power_array *arr )$/;"	f
power_bitline	network/orion_old/power_array.h	/^} power_bitline;$/;"	t	typeref:struct:__anon70
power_bitline_model	network/orion_old/power_array.h	/^} power_bitline_model;$/;"	t	typeref:enum:__anon63
power_bus	network/orion_old/power_bus.h	/^} power_bus;$/;"	t	typeref:struct:__anon83
power_bus_enc	network/orion_old/power_bus.h	/^} power_bus_enc;$/;"	t	typeref:enum:__anon82
power_bus_init	network/orion_old/power_bus.C	/^int power_bus_init(power_bus *bus, int model, int encoding, unsigned width, unsigned grp_width, unsigned n_snd, unsigned n_rcv, double length, double time)$/;"	f
power_bus_model	network/orion_old/power_bus.h	/^} power_bus_model;$/;"	t	typeref:enum:__anon81
power_comp	network/orion_old/power_array.h	/^} power_comp;$/;"	t	typeref:struct:__anon72
power_comp_model	network/orion_old/power_array.h	/^} power_comp_model;$/;"	t	typeref:enum:__anon66
power_connect_model	network/orion_old/power_crossbar.h	/^} power_connect_model;$/;"	t	typeref:enum:__anon84
power_crossbar	network/orion_old/power_crossbar.h	/^} power_crossbar;$/;"	t	typeref:struct:__anon87
power_crossbar_init	network/orion_old/power_crossbar.C	/^int power_crossbar_init(power_crossbar *crsbar, int model, unsigned n_in, unsigned n_out, unsigned data_width, unsigned degree, int connect_type, int trans_type, double in_len, double out_len, double *req_len)$/;"	f
power_crossbar_model	network/orion_old/power_crossbar.h	/^} power_crossbar_model;$/;"	t	typeref:enum:__anon86
power_dec_model	network/orion_old/power_array.h	/^} power_dec_model;$/;"	t	typeref:enum:__anon59
power_decoder	network/orion_old/power_array.h	/^} power_decoder;$/;"	t	typeref:struct:__anon68
power_ff	network/orion_old/power_arbiter.h	/^} power_ff;$/;"	t	typeref:struct:__anon57
power_ff_model	network/orion_old/power_arbiter.h	/^} power_ff_model;$/;"	t	typeref:enum:__anon56
power_mem	network/orion_old/power_array.h	/^} power_mem;$/;"	t	typeref:struct:__anon73
power_mem_model	network/orion_old/power_array.h	/^} power_mem_model;$/;"	t	typeref:enum:__anon65
power_mux	network/orion_old/power_array.h	/^} power_mux;$/;"	t	typeref:struct:__anon74
power_mux_model	network/orion_old/power_array.h	/^} power_mux_model;$/;"	t	typeref:enum:__anon60
power_out	network/orion_old/power_array.h	/^} power_out;$/;"	t	typeref:struct:__anon75
power_outdrv_model	network/orion_old/power_array.h	/^} power_outdrv_model;$/;"	t	typeref:enum:__anon67
power_pre_model	network/orion_old/power_array.h	/^} power_pre_model;$/;"	t	typeref:enum:__anon64
power_router	network/orion_old/power_router_init.h	/^} power_router;$/;"	t	typeref:struct:__anon89
power_router_info	network/orion_old/power_router_init.h	/^} power_router_info;$/;"	t	typeref:struct:__anon90
power_router_init	network/orion_old/power_router_init.C	/^int power_router_init(power_router *router, power_router_info *info)$/;"	f
power_router_initialize	network/orion_old/NetworkPower.C	/^void Router_d::power_router_initialize(power_router *router, power_router_info *info)$/;"	f	class:Router_d
power_trans	network/orion_old/power_crossbar.h	/^} power_trans;$/;"	t	typeref:enum:__anon85
power_wordline	network/orion_old/power_array.h	/^} power_wordline;$/;"	t	typeref:struct:__anon69
power_wordline_model	network/orion_old/power_array.h	/^} power_wordline_model;$/;"	t	typeref:enum:__anon62
precharge_delay	network/orion/SIM_array_internal.h	/^	double precharge_delay;$/;"	m	struct:__anon13
pred_global_decrease_lease	slicc_interface/RubySlicc_TCpredictor_interface.C	/^void pred_global_decrease_lease(int delta, int min, int max) {$/;"	f
pred_global_increase_lease	slicc_interface/RubySlicc_TCpredictor_interface.C	/^void pred_global_increase_lease(int delta, int min, int max) {$/;"	f
pred_oracle_get_sharers	slicc_interface/RubySlicc_TCpredictor_interface.C	/^NetDest pred_oracle_get_sharers(IntPairSet pcsharers) {$/;"	f
pred_pcadaptive_expiredhit	slicc_interface/RubySlicc_TCpredictor_interface.C	/^void pred_pcadaptive_expiredhit(IntPairSet pcsharers, IntPair reader) {$/;"	f
pred_pcadaptive_l2evict	slicc_interface/RubySlicc_TCpredictor_interface.C	/^void pred_pcadaptive_l2evict(IntPairSet pcsharers) {$/;"	f
pred_pcadaptive_unexpiredatomic	slicc_interface/RubySlicc_TCpredictor_interface.C	/^void pred_pcadaptive_unexpiredatomic(IntPairSet pcsharers, IntPair writer) {$/;"	f
pred_pcadaptive_unexpiredwrite	slicc_interface/RubySlicc_TCpredictor_interface.C	/^void pred_pcadaptive_unexpiredwrite(IntPairSet pcsharers, IntPair writer) {$/;"	f
pred_pcsampler_addloadpc	slicc_interface/RubySlicc_TCpredictor_interface.C	/^void pred_pcsampler_addloadpc(Time access_time, int address, int pc) {$/;"	f
pred_pcsampler_endlifetime	slicc_interface/RubySlicc_TCpredictor_interface.C	/^void pred_pcsampler_endlifetime(Time access_time, int address) {$/;"	f
pred_pcsampler_expiredloadhit	slicc_interface/RubySlicc_TCpredictor_interface.C	/^void pred_pcsampler_expiredloadhit(Time access_time, int address, int pc) {$/;"	f
pred_perL2_decrease_lease	slicc_interface/RubySlicc_TCpredictor_interface.C	/^void pred_perL2_decrease_lease(NodeID L2BankId, int delta, int min, int max) {$/;"	f
pred_perL2_decrease_lease_all	slicc_interface/RubySlicc_TCpredictor_interface.C	/^void pred_perL2_decrease_lease_all(int delta, int min, int max) {$/;"	f
pred_perL2_increase_lease	slicc_interface/RubySlicc_TCpredictor_interface.C	/^void pred_perL2_increase_lease(NodeID L2BankId, int delta, int min, int max) {$/;"	f
pred_perL2_increase_lease_all	slicc_interface/RubySlicc_TCpredictor_interface.C	/^void pred_perL2_increase_lease_all(int delta, int min, int max) {$/;"	f
predictionInfo	system/TCpredictor.h	/^        predictionInfo() : m_prediction_lifetime(0), m_updates(0), m_sat_counter(0) {}$/;"	f	struct:TCpredictorPCSampler::predictionInfo
predictionInfo	system/TCpredictor.h	/^        predictionInfo(Time lifetime) : m_prediction_lifetime(lifetime), m_updates(0), m_sat_counter(0) {}$/;"	f	struct:TCpredictorPCSampler::predictionInfo
predictionInfo	system/TCpredictor.h	/^    struct predictionInfo {$/;"	s	class:TCpredictorPCSampler
presentInSet	common/BigSet.h	/^  bool presentInSet(NodeID element) const { return isElement(element); }  \/\/ Deprecated$/;"	f	class:Set
presentInSet	common/OptBigSet.h	/^  bool presentInSet(NodeID element) const { return isElement(element); }  \/\/ Deprecated$/;"	f	class:Set
presentInSet	common/Set.h	/^  bool presentInSet(NodeID element) const { return isElement(element); }  \/\/ Deprecated$/;"	f	class:Set
pri_ff	network/orion/SIM_arbiter.h	/^	SIM_ff_t pri_ff;$/;"	m	struct:__anon7
pri_ff	network/orion_old/power_arbiter.h	/^	power_ff pri_ff; \/\/priority ff$/;"	m	struct:__anon58
primes_list	system/H3BloomFilter.h	/^  int primes_list[6];\/\/ = {9323,11279,10247,30637,25717,43711};$/;"	m	class:H3BloomFilter
print	buffers/MessageBuffer.C	/^void MessageBuffer::print(ostream& out) const$/;"	f	class:MessageBuffer
print	buffers/MessageBufferNode.C	/^void MessageBufferNode::print(ostream& out) const$/;"	f	class:MessageBufferNode
print	common/Address.h	/^void Address::print(ostream& out) const$/;"	f	class:Address
print	common/BigSet.C	/^void Set::print(ostream& out) const$/;"	f	class:Set
print	common/DataBlock.C	/^void DataBlock::print(ostream& out) const$/;"	f	class:DataBlock
print	common/Debug.C	/^void Debug::print(ostream& out) const$/;"	f	class:Debug
print	common/Histogram.C	/^void Histogram::print(ostream& out) const$/;"	f	class:Histogram
print	common/MemfetchSet.h	/^   void print(ostream& out) const { }$/;"	f	class:MemfetchSet
print	common/NetDest.C	/^void NetDest::print(ostream& out) const$/;"	f	class:NetDest
print	common/OptBigSet.C	/^void Set::print(ostream& out) const$/;"	f	class:Set
print	common/Set.C	/^void Set::print(ostream& out) const$/;"	f	class:Set
print	common/SubBlock.C	/^void SubBlock::print(ostream& out) const$/;"	f	class:SubBlock
print	eventqueue/EventQueue.C	/^EventQueue::print(ostream& out) const$/;"	f	class:EventQueue
print	eventqueue/EventQueueNode.C	/^void EventQueueNode::print(ostream& out) const$/;"	f	class:EventQueueNode
print	eventqueue/EventQueue_tester.C	/^  void print(ostream& out) const { out << "1:" << m_description << endl; } $/;"	f	class:TestConsumer1
print	eventqueue/EventQueue_tester.C	/^  void print(ostream& out) const { out << "2:" << m_description << endl; }$/;"	f	class:TestConsumer2
print	generated/MI_example/CacheMsg.C	/^void CacheMsg::print(ostream& out) const$/;"	f	class:CacheMsg
print	generated/MI_example/Chip.C	/^void Chip::print(ostream& out) const$/;"	f	class:Chip
print	generated/MI_example/Directory_Controller.C	/^void Directory_Controller::print(ostream& out) const { out << "[Directory_Controller " << m_chip_ptr->getID() << " " << m_version << "]"; }$/;"	f	class:Directory_Controller
print	generated/MI_example/Directory_Entry.C	/^void Directory_Entry::print(ostream& out) const$/;"	f	class:Directory_Entry
print	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::print(ostream& out) const { out << "[L1Cache_Controller " << m_chip_ptr->getID() << " " << m_version << "]"; }$/;"	f	class:L1Cache_Controller
print	generated/MI_example/L1Cache_Entry.C	/^void L1Cache_Entry::print(ostream& out) const$/;"	f	class:L1Cache_Entry
print	generated/MI_example/L1Cache_TBE.C	/^void L1Cache_TBE::print(ostream& out) const$/;"	f	class:L1Cache_TBE
print	generated/MI_example/MemoryMsg.C	/^void MemoryMsg::print(ostream& out) const$/;"	f	class:MemoryMsg
print	generated/MI_example/Protocol.C	/^void Protocol::print(ostream& out) const$/;"	f	class:Protocol
print	generated/MI_example/RequestMsg.C	/^void RequestMsg::print(ostream& out) const$/;"	f	class:RequestMsg
print	generated/MI_example/ResponseMsg.C	/^void ResponseMsg::print(ostream& out) const$/;"	f	class:ResponseMsg
print	generated/MI_example/TriggerMsg.C	/^void TriggerMsg::print(ostream& out) const$/;"	f	class:TriggerMsg
print	network/garnet-fixed-pipeline/GarnetNetwork_d.C	/^void GarnetNetwork_d::print(ostream& out) const$/;"	f	class:GarnetNetwork_d
print	network/garnet-fixed-pipeline/InputUnit_d.h	/^	void print(ostream& out) const {};$/;"	f	class:InputUnit_d
print	network/garnet-fixed-pipeline/NetworkInterface_d.C	/^void NetworkInterface_d::print(ostream& out) const$/;"	f	class:NetworkInterface_d
print	network/garnet-fixed-pipeline/NetworkLink_d.h	/^  	void print(ostream& out) const{}$/;"	f	class:NetworkLink_d
print	network/garnet-fixed-pipeline/OutputUnit_d.h	/^  	void print(ostream& out) const {};$/;"	f	class:OutputUnit_d
print	network/garnet-fixed-pipeline/SWallocator_d.h	/^  	void print(ostream& out) const {};$/;"	f	class:SWallocator_d
print	network/garnet-fixed-pipeline/Switch_d.h	/^  	void print(ostream& out) const {};$/;"	f	class:Switch_d
print	network/garnet-fixed-pipeline/VCallocator_d.h	/^  	void print(ostream& out) const {};$/;"	f	class:VCallocator_d
print	network/garnet-fixed-pipeline/flitBuffer_d.C	/^void flitBuffer_d::print(ostream& out) const$/;"	f	class:flitBuffer_d
print	network/garnet-fixed-pipeline/flit_d.C	/^void flit_d::print(ostream& out) const$/;"	f	class:flit_d
print	network/garnet-flexible-pipeline/GarnetNetwork.C	/^void GarnetNetwork::print(ostream& out) const$/;"	f	class:GarnetNetwork
print	network/garnet-flexible-pipeline/NetworkInterface.C	/^void NetworkInterface::print(ostream& out) const$/;"	f	class:NetworkInterface
print	network/garnet-flexible-pipeline/NetworkLink.h	/^	void print(ostream& out) const {}$/;"	f	class:NetworkLink
print	network/garnet-flexible-pipeline/Router.C	/^void Router::print(ostream& out) const$/;"	f	class:Router
print	network/garnet-flexible-pipeline/VCarbiter.h	/^	void print(ostream& out) const {} $/;"	f	class:VCarbiter
print	network/garnet-flexible-pipeline/flit.C	/^void flit::print(ostream& out) const$/;"	f	class:flit
print	network/garnet-flexible-pipeline/flitBuffer.C	/^void flitBuffer::print(ostream& out) const$/;"	f	class:flitBuffer
print	network/simple/PerfectSwitch.C	/^void PerfectSwitch::print(ostream& out) const$/;"	f	class:PerfectSwitch
print	network/simple/SimpleNetwork.C	/^void SimpleNetwork::print(ostream& out) const$/;"	f	class:SimpleNetwork
print	network/simple/Switch.C	/^void Switch::print(ostream& out) const$/;"	f	class:Switch
print	network/simple/Throttle.C	/^void Throttle::print(ostream& out) const$/;"	f	class:Throttle
print	network/simple/Topology.h	/^  void print(ostream& out) const { out << "[Topology]"; }$/;"	f	class:Topology
print	profiler/AccessTraceForAddress.C	/^void AccessTraceForAddress::print(ostream& out) const$/;"	f	class:AccessTraceForAddress
print	profiler/LifetimeTrace.C	/^void LifetimeTrace::print(ostream& out) const$/;"	f	class:LifetimeTrace
print	profiler/Profiler.C	/^void Profiler::print(ostream& out) const$/;"	f	class:Profiler
print	profiler/StoreTrace.C	/^void StoreTrace::print(ostream& out) const$/;"	f	class:StoreTrace
print	recorder/CacheRecorder.C	/^void CacheRecorder::print(ostream& out) const$/;"	f	class:CacheRecorder
print	recorder/TraceRecord.C	/^void TraceRecord::print(ostream& out) const$/;"	f	class:TraceRecord
print	recorder/Tracer.C	/^void Tracer::print(ostream& out) const$/;"	f	class:Tracer
print	system/BlockBloomFilter.C	/^void BlockBloomFilter::print(ostream& out) const$/;"	f	class:BlockBloomFilter
print	system/BulkBloomFilter.C	/^void BulkBloomFilter::print(ostream& out) const$/;"	f	class:BulkBloomFilter
print	system/CacheMemory.h	/^void CacheMemory<ENTRY>::print(ostream& out) const$/;"	f	class:CacheMemory
print	system/DirectoryMemory.C	/^void DirectoryMemory::print(ostream& out) const$/;"	f	class:DirectoryMemory
print	system/GenericBloomFilter.C	/^void GenericBloomFilter::print(ostream& out) const$/;"	f	class:GenericBloomFilter
print	system/GlobalWriteVector.C	/^void GlobalWriteVector::print(ostream& out) const {$/;"	f	class:GlobalWriteVector
print	system/GpusimDramInterface.C	/^void GpusimDramInterface::print (ostream& out) const {$/;"	f	class:GpusimDramInterface
print	system/H3BloomFilter.C	/^void H3BloomFilter::print(ostream& out) const$/;"	f	class:H3BloomFilter
print	system/LSB_CountingBloomFilter.C	/^void LSB_CountingBloomFilter::print(ostream& out) const$/;"	f	class:LSB_CountingBloomFilter
print	system/MemoryControl.C	/^void MemoryControl::print (ostream& out) const {$/;"	f	class:MemoryControl
print	system/MemoryNode.C	/^void MemoryNode::print(ostream& out) const$/;"	f	class:MemoryNode
print	system/MultiBitSelBloomFilter.C	/^void MultiBitSelBloomFilter::print(ostream& out) const$/;"	f	class:MultiBitSelBloomFilter
print	system/MultiGrainBloomFilter.C	/^void MultiGrainBloomFilter::print(ostream& out) const$/;"	f	class:MultiGrainBloomFilter
print	system/NonCountingBloomFilter.C	/^void NonCountingBloomFilter::print(ostream& out) const$/;"	f	class:NonCountingBloomFilter
print	system/PerfectCacheMemory.h	/^void PerfectCacheMemory<ENTRY>::print(ostream& out) const$/;"	f	class:PerfectCacheMemory
print	system/PersistentArbiter.C	/^void PersistentArbiter::print(ostream& out) const {$/;"	f	class:PersistentArbiter
print	system/Sequencer.C	/^void Sequencer::print(ostream& out) const {$/;"	f	class:Sequencer
print	system/StoreBuffer.C	/^  void print(ostream& out) const$/;"	f	struct:StoreBufferEntry
print	system/StoreBuffer.C	/^void StoreBuffer::print(ostream& out) const$/;"	f	class:StoreBuffer
print	system/StoreCache.C	/^void StoreCache::print(ostream& out) const$/;"	f	class:StoreCache
print	system/TBETable.h	/^void TBETable<ENTRY>::print(ostream& out) const$/;"	f	class:TBETable
print	system/TCpredictor.C	/^void TCpredictorAddrfixed::print(ostream& out) const$/;"	f	class:TCpredictorAddrfixed
print	system/TCpredictor.C	/^void TCpredictorContainer::print(ostream& out) const$/;"	f	class:TCpredictorContainer
print	system/TCpredictor.C	/^void TCpredictorGlobal::print(ostream& out) const$/;"	f	class:TCpredictorGlobal
print	system/TCpredictor.C	/^void TCpredictorPCAdaptive::print(ostream& out) const$/;"	f	class:TCpredictorPCAdaptive
print	system/TCpredictor.C	/^void TCpredictorPCSampler::print(ostream& out) const$/;"	f	class:TCpredictorPCSampler
print	system/TCpredictor.C	/^void TCpredictorPCfixed::print(ostream& out) const$/;"	f	class:TCpredictorPCfixed
print	system/TCpredictor.C	/^void TCpredictorPerL2::print(ostream& out) const$/;"	f	class:TCpredictorPerL2
print	system/TimerTable.C	/^void TimerTable::print(ostream& out) const$/;"	f	class:TimerTable
print	tester/BarrierGenerator.C	/^void BarrierGenerator::print(ostream& out) const$/;"	f	class:BarrierGenerator
print	tester/Check.C	/^void Check::print(ostream& out) const$/;"	f	class:Check
print	tester/CheckTable.C	/^void CheckTable::print(ostream& out) const$/;"	f	class:CheckTable
print	tester/DetermGETXGenerator.C	/^void DetermGETXGenerator::print(ostream& out) const$/;"	f	class:DetermGETXGenerator
print	tester/DetermInvGenerator.C	/^void DetermInvGenerator::print(ostream& out) const$/;"	f	class:DetermInvGenerator
print	tester/DetermSeriesGETSGenerator.C	/^void DetermSeriesGETSGenerator::print(ostream& out) const$/;"	f	class:DetermSeriesGETSGenerator
print	tester/DeterministicDriver.C	/^void DeterministicDriver::print(ostream& out) const$/;"	f	class:DeterministicDriver
print	tester/RaceyDriver.C	/^void RaceyDriver::print(ostream& out) const$/;"	f	class:RaceyDriver
print	tester/RequestGenerator.C	/^void RequestGenerator::print(ostream& out) const$/;"	f	class:RequestGenerator
print	tester/SyntheticDriver.C	/^void SyntheticDriver::print(ostream& out) const$/;"	f	class:SyntheticDriver
print	tester/Tester.C	/^void Tester::print(ostream& out) const$/;"	f	class:Tester
print	tester/depreceated/XactAbortRequestGenerator.C	/^void XactAbortRequestGenerator::print(ostream& out) const$/;"	f	class:XactAbortRequestGenerator
print	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::print(ostream& out) const$/;"	f	class:XactRequestGenerator
printBufferStats	generated/MI_example/Chip.C	/^void Chip::printBufferStats(ostream& out)$/;"	f	class:Chip
printConfig	buffers/MessageBuffer.h	/^  static void printConfig(ostream& out) {}$/;"	f	class:MessageBuffer
printConfig	generated/MI_example/Chip.C	/^void Chip::printConfig(ostream& out)$/;"	f	class:Chip
printConfig	interfaces/GpusimInterface.C	/^void GpusimInterface::printConfig(ostream& out) const {$/;"	f	class:GpusimInterface
printConfig	interfaces/OpalInterface.C	/^void OpalInterface::printConfig(ostream& out) const {$/;"	f	class:OpalInterface
printConfig	network/garnet-fixed-pipeline/GarnetNetwork_d.C	/^void GarnetNetwork_d::printConfig(ostream& out) const$/;"	f	class:GarnetNetwork_d
printConfig	network/garnet-fixed-pipeline/InputUnit_d.C	/^void InputUnit_d::printConfig(ostream& out)$/;"	f	class:InputUnit_d
printConfig	network/garnet-fixed-pipeline/NetworkInterface_d.C	/^void NetworkInterface_d::printConfig(ostream& out) const$/;"	f	class:NetworkInterface_d
printConfig	network/garnet-fixed-pipeline/OutputUnit_d.C	/^void OutputUnit_d::printConfig(ostream& out)$/;"	f	class:OutputUnit_d
printConfig	network/garnet-fixed-pipeline/Router_d.C	/^void Router_d::printConfig(ostream& out)$/;"	f	class:Router_d
printConfig	network/garnet-flexible-pipeline/GarnetNetwork.C	/^void GarnetNetwork::printConfig(ostream& out) const$/;"	f	class:GarnetNetwork
printConfig	network/garnet-flexible-pipeline/NetworkInterface.C	/^void NetworkInterface::printConfig(ostream& out) const$/;"	f	class:NetworkInterface
printConfig	network/garnet-flexible-pipeline/Router.C	/^void Router::printConfig(ostream& out) const$/;"	f	class:Router
printConfig	network/simple/PerfectSwitch.C	/^void PerfectSwitch::printConfig(ostream& out) const$/;"	f	class:PerfectSwitch
printConfig	network/simple/SimpleNetwork.C	/^void SimpleNetwork::printConfig(ostream& out) const $/;"	f	class:SimpleNetwork
printConfig	network/simple/Switch.C	/^void Switch::printConfig(ostream& out) const$/;"	f	class:Switch
printConfig	network/simple/Throttle.C	/^void Throttle::printConfig(ostream& out) const$/;"	f	class:Throttle
printConfig	network/simple/Topology.C	/^void Topology::printConfig(ostream& out) const$/;"	f	class:Topology
printConfig	profiler/LifetimeTrace.C	/^void LifetimeTrace::printConfig(ostream& out) const$/;"	f	class:LifetimeTrace
printConfig	profiler/Profiler.C	/^void Profiler::printConfig(ostream& out) const$/;"	f	class:Profiler
printConfig	simics/depreceated/SimicsDriver.C	/^void SimicsDriver::printConfig(ostream& out) const {$/;"	f	class:SimicsDriver
printConfig	system/CacheMemory.h	/^void CacheMemory<ENTRY>::printConfig(ostream& out)$/;"	f	class:CacheMemory
printConfig	system/DirectoryMemory.C	/^void DirectoryMemory::printConfig(ostream& out)$/;"	f	class:DirectoryMemory
printConfig	system/GenericBloomFilter.h	/^  void printConfig(ostream& out) { out << "GenericBloomFilter" << endl; }$/;"	f	class:GenericBloomFilter
printConfig	system/GlobalWriteVector.h	/^   static void printConfig(ostream& out) {}$/;"	f	class:GlobalWriteVector
printConfig	system/GpusimDramInterface.C	/^void GpusimDramInterface::printConfig (ostream& out) {$/;"	f	class:GpusimDramInterface
printConfig	system/MemoryControl.C	/^void MemoryControl::printConfig (ostream& out) {$/;"	f	class:MemoryControl
printConfig	system/NodePersistentTable.h	/^  static void printConfig(ostream& out) {}$/;"	f	class:NodePersistentTable
printConfig	system/PerfectCacheMemory.h	/^void PerfectCacheMemory<ENTRY>::printConfig(ostream& out)$/;"	f	class:PerfectCacheMemory
printConfig	system/PersistentArbiter.h	/^  static void printConfig(ostream& out) {}$/;"	f	class:PersistentArbiter
printConfig	system/PersistentTable.h	/^  static void printConfig(ostream& out) {}$/;"	f	class:PersistentTable
printConfig	system/Sequencer.C	/^void Sequencer::printConfig(ostream& out) {$/;"	f	class:Sequencer
printConfig	system/StoreBuffer.C	/^void StoreBuffer::printConfig(ostream& out)$/;"	f	class:StoreBuffer
printConfig	system/System.C	/^void System::printConfig(ostream& out) const$/;"	f	class:System
printConfig	system/TBETable.h	/^  static void printConfig(ostream& out) { out << "TBEs_per_TBETable: " << NUMBER_OF_TBES << endl; }$/;"	f	class:TBETable
printConfig	system/TCpredictor.C	/^void TCpredictorAddrfixed::printConfig(ostream& out) const$/;"	f	class:TCpredictorAddrfixed
printConfig	system/TCpredictor.C	/^void TCpredictorContainer::printConfig(ostream& out) const$/;"	f	class:TCpredictorContainer
printConfig	system/TCpredictor.C	/^void TCpredictorGlobal::printConfig(ostream& out) const$/;"	f	class:TCpredictorGlobal
printConfig	system/TCpredictor.C	/^void TCpredictorPCAdaptive::printConfig(ostream& out) const$/;"	f	class:TCpredictorPCAdaptive
printConfig	system/TCpredictor.C	/^void TCpredictorPCSampler::printConfig(ostream& out) const$/;"	f	class:TCpredictorPCSampler
printConfig	system/TCpredictor.C	/^void TCpredictorPCfixed::printConfig(ostream& out) const$/;"	f	class:TCpredictorPCfixed
printConfig	system/TCpredictor.C	/^void TCpredictorPerL2::printConfig(ostream& out) const$/;"	f	class:TCpredictorPerL2
printConfig	system/TimerTable.h	/^  static void printConfig(ostream& out) {}$/;"	f	class:TimerTable
printConfig	tester/DeterministicDriver.h	/^  void printConfig(ostream& out) const {}$/;"	f	class:DeterministicDriver
printConfig	tester/RaceyDriver.h	/^  void printConfig(ostream& out) const {}$/;"	f	class:RaceyDriver
printConfig	tester/SyntheticDriver.h	/^  void printConfig(ostream& out) const {}$/;"	f	class:SyntheticDriver
printConfig	tester/Tester.h	/^  void printConfig(ostream& out) const {}$/;"	f	class:Tester
printConfiguration	config/RubyConfig.C	/^void RubyConfig::printConfiguration(ostream& out) {$/;"	f	class:RubyConfig
printData	system/CacheMemory.h	/^void CacheMemory<ENTRY>::printData(ostream& out) const$/;"	f	class:CacheMemory
printDebug	common/Driver.h	/^  virtual void printDebug(){}  \/\/called by Sequencer$/;"	f	class:Driver
printDebug	interfaces/GpusimInterface.C	/^void GpusimInterface::printDebug(){$/;"	f	class:GpusimInterface
printDebug	interfaces/OpalInterface.C	/^void OpalInterface::printDebug(){$/;"	f	class:OpalInterface
printDebug	interfaces/mf_api.h	/^  void (*printDebug)();$/;"	m	struct:mf_opal_api
printDebug	system/Sequencer.C	/^void Sequencer::printDebug(){$/;"	f	class:Sequencer
printPcStack	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::printPcStack(int depth) {$/;"	f	class:XactRequestGenerator
printPercent	common/Histogram.C	/^void Histogram::printPercent(ostream& out) const$/;"	f	class:Histogram
printProgress	interfaces/GpusimInterface.C	/^void GpusimInterface::printProgress(int cpuNumber){$/;"	f	class:GpusimInterface
printProgress	interfaces/OpalInterface.C	/^void OpalInterface::printProgress(int cpuNumber){$/;"	f	class:OpalInterface
printProgress	interfaces/mf_api.h	/^  void (*printProgress)(int cpuNumber);$/;"	m	struct:mf_ruby_api
printProgress	system/Sequencer.C	/^void Sequencer::printProgress(ostream& out) const{$/;"	f	class:Sequencer
printResourceUsage	profiler/Profiler.C	/^void Profiler::printResourceUsage(ostream& out) const$/;"	f	class:Profiler
printShortStats	profiler/Profiler.h	/^  void printShortStats(ostream& out) { printStats(out, true); }$/;"	f	class:Profiler
printSorted	profiler/AddressProfiler.C	/^static void printSorted(ostream& out, const Map<Address, AccessTraceForAddress>* record_map, string description)$/;"	f	file:
printStats	buffers/MessageBuffer.C	/^void MessageBuffer::printStats(ostream& out)$/;"	f	class:MessageBuffer
printStats	generated/MI_example/Chip.C	/^void Chip::printStats(ostream& out)$/;"	f	class:Chip
printStats	interfaces/GpusimInterface.C	/^void GpusimInterface::printStats(ostream& out) const {$/;"	f	class:GpusimInterface
printStats	interfaces/OpalInterface.C	/^void OpalInterface::printStats(ostream& out) const {$/;"	f	class:OpalInterface
printStats	network/garnet-fixed-pipeline/GarnetNetwork_d.C	/^void GarnetNetwork_d::printStats(ostream& out) const$/;"	f	class:GarnetNetwork_d
printStats	network/garnet-fixed-pipeline/NetworkLink_d.C	/^void NetworkLink_d::printStats(ostream& out)$/;"	f	class:NetworkLink_d
printStats	network/garnet-fixed-pipeline/Router_d.C	/^void Router_d::printStats(ostream& out)$/;"	f	class:Router_d
printStats	network/garnet-flexible-pipeline/GarnetNetwork.C	/^void GarnetNetwork::printStats(ostream& out) const$/;"	f	class:GarnetNetwork
printStats	network/simple/PerfectSwitch.C	/^void PerfectSwitch::printStats(ostream& out) const$/;"	f	class:PerfectSwitch
printStats	network/simple/SimpleNetwork.C	/^void SimpleNetwork::printStats(ostream& out) const$/;"	f	class:SimpleNetwork
printStats	network/simple/Switch.C	/^void Switch::printStats(ostream& out) const$/;"	f	class:Switch
printStats	network/simple/Throttle.C	/^void Throttle::printStats(ostream& out) const$/;"	f	class:Throttle
printStats	network/simple/Topology.h	/^  void printStats(ostream& out) const {}$/;"	f	class:Topology
printStats	profiler/AddressProfiler.C	/^void AddressProfiler::printStats(ostream& out) const$/;"	f	class:AddressProfiler
printStats	profiler/CacheProfiler.C	/^void CacheProfiler::printStats(ostream& out) const$/;"	f	class:CacheProfiler
printStats	profiler/LifetimeTrace.C	/^void LifetimeTrace::printStats(ostream& out, bool short_stats)$/;"	f	class:LifetimeTrace
printStats	profiler/Profiler.C	/^void Profiler::printStats(ostream& out, bool short_stats)$/;"	f	class:Profiler
printStats	simics/depreceated/SimicsDriver.C	/^void SimicsDriver::printStats(ostream& out) const {$/;"	f	class:SimicsDriver
printStats	system/System.C	/^void System::printStats(ostream& out)$/;"	f	class:System
printStats	system/TCpredictor.C	/^void TCpredictorAddrfixed::printStats(ostream& out, bool short_stats)$/;"	f	class:TCpredictorAddrfixed
printStats	system/TCpredictor.C	/^void TCpredictorContainer::printStats(ostream& out, bool short_stats)$/;"	f	class:TCpredictorContainer
printStats	system/TCpredictor.C	/^void TCpredictorGlobal::printStats(ostream& out, bool short_stats)$/;"	f	class:TCpredictorGlobal
printStats	system/TCpredictor.C	/^void TCpredictorPCAdaptive::printStats(ostream& out, bool short_stats)$/;"	f	class:TCpredictorPCAdaptive
printStats	system/TCpredictor.C	/^void TCpredictorPCSampler::printStats(ostream& out, bool short_stats)$/;"	f	class:TCpredictorPCSampler
printStats	system/TCpredictor.C	/^void TCpredictorPCfixed::printStats(ostream& out, bool short_stats)$/;"	f	class:TCpredictorPCfixed
printStats	system/TCpredictor.C	/^void TCpredictorPerL2::printStats(ostream& out, bool short_stats)$/;"	f	class:TCpredictorPerL2
printStats	tester/DeterministicDriver.C	/^void DeterministicDriver::printStats(ostream& out) const$/;"	f	class:DeterministicDriver
printStats	tester/RaceyDriver.C	/^void RaceyDriver::printStats(ostream& out) const$/;"	f	class:RaceyDriver
printStats	tester/SyntheticDriver.C	/^void SyntheticDriver::printStats(ostream& out) const$/;"	f	class:SyntheticDriver
printStats	tester/Tester.h	/^  void printStats(ostream& out) const {}$/;"	f	class:Tester
printSummary	profiler/StoreTrace.C	/^void StoreTrace::printSummary(ostream& out)$/;"	f	class:StoreTrace
printVerbosity	common/Debug.C	/^void Debug::printVerbosity(ostream& out) const$/;"	f	class:Debug
printWithMultiplier	common/Histogram.C	/^void Histogram::printWithMultiplier(ostream& out, double multiplier) const$/;"	f	class:Histogram
print_parameters	config/RubyConfig.C	/^static void print_parameters(ostream& out)$/;"	f	file:
print_stats	gpusim_ruby/gpusim_ruby.C	/^void gpusim_ruby::print_stats() {$/;"	f	class:gpusim_ruby
printf	generated/MI_example/attrlex.c	592;"	d	file:
proc_counter	tester/BarrierGenerator.h	/^  int proc_counter;$/;"	m	class:BarrierGenerator
processHeadOfQueue	system/StoreBuffer.C	/^void StoreBuffer::processHeadOfQueue()$/;"	f	class:StoreBuffer
process_memory_resident	profiler/Profiler.C	/^static double process_memory_resident()$/;"	f	file:
process_memory_total	profiler/Profiler.C	/^static double process_memory_total()$/;"	f	file:
processor_t	simics/simics_api_dummy.c	/^typedef int processor_t;$/;"	t	file:
procsPerChipBits	config/RubyConfig.h	/^  static int procsPerChipBits() { return g_PROCS_PER_CHIP_BITS; }$/;"	f	class:RubyConfig
profileAbortDelayConstants	profiler/Profiler.C	/^void Profiler::profileAbortDelayConstants(int startupDelay, int perBlock){$/;"	f	class:Profiler
profileAverageLatencyEstimate	profiler/Profiler.h	/^  void profileAverageLatencyEstimate(int latency) { m_average_latency_estimate.add(latency); }$/;"	f	class:Profiler
profileBandwidth	profiler/Profiler.C	/^void Profiler::profileBandwidth(string type, MessageSizeType size) {$/;"	f	class:Profiler
profileBandwidth	slicc_interface/RubySlicc_Profiler_interface.C	/^void profileBandwidth(string type, MessageSizeType size)$/;"	f
profileBandwidthBytes	profiler/Profiler.C	/^void Profiler::profileBandwidthBytes(string type, int bytes, bool round_up) {$/;"	f	class:Profiler
profileBandwidthBytes	slicc_interface/RubySlicc_Profiler_interface.C	/^void profileBandwidthBytes(string type, int bytes, bool round_up) {$/;"	f
profileCLStallEvict	profiler/Profiler.C	/^void Profiler::profileCLStallEvict(Time stall_cycles) {$/;"	f	class:Profiler
profileCLStallEvict	slicc_interface/RubySlicc_Profiler_interface.C	/^void profileCLStallEvict(Time stall_cycles){$/;"	f
profileCLStallFence	profiler/Profiler.C	/^void Profiler::profileCLStallFence(Time stall_cycles) {$/;"	f	class:Profiler
profileCLStallFence	slicc_interface/RubySlicc_Profiler_interface.C	/^void profileCLStallFence(Time stall_cycles){$/;"	f
profileConflictingRequests	profiler/Profiler.C	/^void Profiler::profileConflictingRequests(const Address& addr)$/;"	f	class:Profiler
profileExposedConflict	profiler/Profiler.C	/^void Profiler::profileExposedConflict(NodeID id, int xid, int thread, Address addr, Address pc){$/;"	f	class:Profiler
profileExtraWB	profiler/Profiler.C	/^void Profiler::profileExtraWB(){$/;"	f	class:Profiler
profileFilterAction	profiler/Profiler.C	/^void Profiler::profileFilterAction(int action)$/;"	f	class:Profiler
profileGetS	profiler/AddressProfiler.C	/^void AddressProfiler::profileGetS(const Address& datablock, const Address& PC, const Set& owner, const Set& sharers, NodeID requestor)$/;"	f	class:AddressProfiler
profileGetS	slicc_interface/RubySlicc_Profiler_interface.C	/^void profileGetS(const Address& datablock, const Address& PC, const Set& owner, const Set& sharers, NodeID requestor)$/;"	f
profileGetSMaskPrediction	profiler/Profiler.C	/^void Profiler::profileGetSMaskPrediction(const Set& pred_set)$/;"	f	class:Profiler
profileGetX	profiler/AddressProfiler.C	/^void AddressProfiler::profileGetX(const Address& datablock, const Address& PC, const Set& owner, const Set& sharers, NodeID requestor)$/;"	f	class:AddressProfiler
profileGetX	slicc_interface/RubySlicc_Profiler_interface.C	/^void profileGetX(const Address& datablock, const Address& PC, const Set& owner, const Set& sharers, NodeID requestor)$/;"	f
profileGetXMaskPrediction	profiler/Profiler.C	/^void Profiler::profileGetXMaskPrediction(const Set& pred_set)$/;"	f	class:Profiler
profileInferredAbort	profiler/Profiler.C	/^void Profiler::profileInferredAbort(){$/;"	f	class:Profiler
profileLifetime	profiler/Profiler.C	/^void Profiler::profileLifetime(Time lifetime, IntSet SharerPCs, int addr, string event) {$/;"	f	class:Profiler
profileLifetime	slicc_interface/RubySlicc_Profiler_interface.C	/^void profileLifetime(Time lifetime, IntSet SharerPCs, int addr, string event) {$/;"	f
profileLoad	profiler/Profiler.C	/^void Profiler::profileLoad(NodeID id, int tid, int xid, int thread, Address addr, Address logicalAddress, Address pc){$/;"	f	class:Profiler
profileLoadOverflow	profiler/Profiler.C	/^void Profiler::profileLoadOverflow(NodeID id, int tid, int xid, int thread, Address addr, bool l1_overflow){$/;"	f	class:Profiler
profileMemArbWait	profiler/Profiler.C	/^void Profiler::profileMemArbWait(int cycles) { m_memArbWait += cycles; }$/;"	f	class:Profiler
profileMemBankBusy	profiler/Profiler.C	/^void Profiler::profileMemBankBusy() { m_memBankBusy++; }$/;"	f	class:Profiler
profileMemBankQ	profiler/Profiler.C	/^void Profiler::profileMemBankQ(int cycles) { m_memBankQ += cycles; }$/;"	f	class:Profiler
profileMemBusBusy	profiler/Profiler.C	/^void Profiler::profileMemBusBusy() { m_memBusBusy++; }$/;"	f	class:Profiler
profileMemDataBusBusy	profiler/Profiler.C	/^void Profiler::profileMemDataBusBusy() { m_memDataBusBusy++; }$/;"	f	class:Profiler
profileMemInputQ	profiler/Profiler.C	/^void Profiler::profileMemInputQ(int cycles) { m_memInputQ += cycles; }$/;"	f	class:Profiler
profileMemNotOld	profiler/Profiler.C	/^void Profiler::profileMemNotOld() { m_memNotOld++; }$/;"	f	class:Profiler
profileMemRandBusy	profiler/Profiler.C	/^void Profiler::profileMemRandBusy() { m_memRandBusy++; }$/;"	f	class:Profiler
profileMemRead	profiler/Profiler.C	/^void Profiler::profileMemRead() { m_memRead++; }$/;"	f	class:Profiler
profileMemReadWriteBusy	profiler/Profiler.C	/^void Profiler::profileMemReadWriteBusy() { m_memReadWriteBusy++; }$/;"	f	class:Profiler
profileMemRefresh	profiler/Profiler.C	/^void Profiler::profileMemRefresh() { m_memRefresh++; }$/;"	f	class:Profiler
profileMemReq	profiler/Profiler.C	/^void Profiler::profileMemReq(int bank) {$/;"	f	class:Profiler
profileMemTfawBusy	profiler/Profiler.C	/^void Profiler::profileMemTfawBusy() { m_memTfawBusy++; }$/;"	f	class:Profiler
profileMemWaitCycles	profiler/Profiler.C	/^void Profiler::profileMemWaitCycles(int cycles) { m_memWaitCycles += cycles; }$/;"	f	class:Profiler
profileMemWrite	profiler/Profiler.C	/^void Profiler::profileMemWrite() { m_memWrite++; }$/;"	f	class:Profiler
profileMsgDelay	profiler/Profiler.C	/^void Profiler::profileMsgDelay(int virtualNetwork, int delayCycles) {$/;"	f	class:Profiler
profileMsgDelay	slicc_interface/RubySlicc_Profiler_interface.C	/^void profileMsgDelay(int virtualNetwork, int delayCycles)$/;"	f
profileMulticastRetry	profiler/Profiler.C	/^void Profiler::profileMulticastRetry(const Address& addr, int count)$/;"	f	class:Profiler
profileOutstandingPersistentRequest	profiler/Profiler.h	/^  void profileOutstandingPersistentRequest(int outstanding) { m_outstanding_persistent_requests.add(outstanding); }$/;"	f	class:Profiler
profileOutstandingRequest	profiler/Profiler.h	/^  void profileOutstandingRequest(int outstanding) { m_outstanding_requests.add(outstanding); }$/;"	f	class:Profiler
profileOverflow	slicc_interface/RubySlicc_Profiler_interface.C	/^void profileOverflow(const Address & addr, MachineID mach)$/;"	f
profilePFWait	profiler/Profiler.C	/^void Profiler::profilePFWait(Time waitTime)$/;"	f	class:Profiler
profilePersistentPrediction	profiler/AddressProfiler.C	/^void AddressProfiler::profilePersistentPrediction(const Address& data_addr, AccessType type)$/;"	f	class:AddressProfiler
profilePrivateL1Eviction	profiler/Profiler.C	/^void Profiler::profilePrivateL1Eviction() {$/;"	f	class:Profiler
profilePrivateL1Eviction	slicc_interface/RubySlicc_Profiler_interface.C	/^void profilePrivateL1Eviction() {$/;"	f
profileReadFilterBitsSet	profiler/Profiler.C	/^void Profiler::profileReadFilterBitsSet(int xid, int bits, bool isCommit) {$/;"	f	class:Profiler
profileReadSet	profiler/Profiler.C	/^void Profiler::profileReadSet(Address addr, bool bf_filter_result, bool perfect_filter_result, NodeID id, int thread){$/;"	f	class:Profiler
profileRemoteReadSet	profiler/Profiler.C	/^void Profiler::profileRemoteReadSet(Address addr, bool bf_filter_result, bool perfect_filter_result, NodeID id, int thread){$/;"	f	class:Profiler
profileRemoteWriteSet	profiler/Profiler.C	/^void Profiler::profileRemoteWriteSet(Address addr, bool bf_filter_result, bool perfect_filter_result, NodeID id, int thread){$/;"	f	class:Profiler
profileRequest	profiler/Profiler.C	/^void Profiler::profileRequest(const string& requestStr)$/;"	f	class:Profiler
profileRetry	profiler/AddressProfiler.C	/^void AddressProfiler::profileRetry(const Address& data_addr, AccessType type, int count)$/;"	f	class:AddressProfiler
profileSharing	profiler/Profiler.C	/^void Profiler::profileSharing(const Address& addr, AccessType type, NodeID requestor, const Set& sharers, const Set& owner)$/;"	f	class:Profiler
profileStore	profiler/Profiler.C	/^void Profiler::profileStore(NodeID id, int tid, int xid, int thread, Address addr, Address logicalAddress, Address pc){$/;"	f	class:Profiler
profileStoreOverflow	profiler/Profiler.C	/^void Profiler::profileStoreOverflow(NodeID id, int tid, int xid, int thread, Address addr, bool l1_overflow){$/;"	f	class:Profiler
profileTrainingMask	profiler/Profiler.C	/^void Profiler::profileTrainingMask(const Set& pred_set)$/;"	f	class:Profiler
profileTransWB	profiler/Profiler.C	/^void Profiler::profileTransWB(){$/;"	f	class:Profiler
profileTransaction	profiler/Profiler.C	/^void Profiler::profileTransaction(int size, int logSize, int readS, int writeS, int overflow_readS, int overflow_writeS, int retries, int useful_cycles, bool nacked, int loadMisses, int storeMisses, int instrCount, int xid){$/;"	f	class:Profiler
profileTransition	profiler/Profiler.C	/^void Profiler::profileTransition(const string& component, NodeID id, NodeID version, Address addr,$/;"	f	class:Profiler
profileWriteFilterBitsSet	profiler/Profiler.C	/^void Profiler::profileWriteFilterBitsSet(int xid, int bits, bool isCommit) {$/;"	f	class:Profiler
profileWriteSet	profiler/Profiler.C	/^void Profiler::profileWriteSet(Address addr, bool bf_filter_result, bool perfect_filter_result, NodeID id, int thread){$/;"	f	class:Profiler
profileXactChange	profiler/Profiler.C	/^void Profiler::profileXactChange(int procs, int cycles){$/;"	f	class:Profiler
profile_L1Cache_request_g	slicc_interface/RubySlicc_Profiler_interface.C	/^void profile_L1Cache_request_g(const CacheMsg& msg, NodeID id, bool miss)$/;"	f
profile_L2Cache_request_g	slicc_interface/RubySlicc_Profiler_interface.C	/^void profile_L2Cache_request_g(const GenericRequestType& type, MessageSizeType size, NodeID id, bool miss)$/;"	f
profile_average_latency_estimate	slicc_interface/RubySlicc_Profiler_interface.C	/^void profile_average_latency_estimate(int latency)$/;"	f
profile_filter_action	slicc_interface/RubySlicc_Profiler_interface.C	/^void profile_filter_action(int action)$/;"	f
profile_multicast_retry	slicc_interface/RubySlicc_Profiler_interface.C	/^void profile_multicast_retry(const Address& addr, int count)$/;"	f
profile_outstanding_persistent_request	slicc_interface/RubySlicc_Profiler_interface.C	/^void profile_outstanding_persistent_request(int outstanding)$/;"	f
profile_outstanding_request	slicc_interface/RubySlicc_Profiler_interface.C	/^void profile_outstanding_request(int outstanding)$/;"	f
profile_persistent_prediction	slicc_interface/RubySlicc_Profiler_interface.C	/^void profile_persistent_prediction(const Address& addr, AccessType type)$/;"	f
profile_request	slicc_interface/RubySlicc_Profiler_interface.C	/^void profile_request(const string& L1CacheState, const string& L2CacheState, const string& directoryState, const string& requestType)$/;"	f
profile_request	slicc_interface/RubySlicc_Profiler_interface.C	/^void profile_request(int cache_state, Directory_State directory_state, GenericRequestType request_type)$/;"	f
profile_sharing	slicc_interface/RubySlicc_Profiler_interface.C	/^void profile_sharing(const Address& addr, AccessType type, NodeID requestor, const Set& sharers, const Set& owner)$/;"	f
profile_token_retry	slicc_interface/RubySlicc_Profiler_interface.C	/^void profile_token_retry(const Address& addr, AccessType type, int count)$/;"	f
programEndTrace	profiler/LifetimeTrace.C	/^void LifetimeTrace::programEndTrace() {$/;"	f	class:LifetimeTrace
protocol_is_ideal_coherence	slicc_interface/RubySlicc_Util2.C	/^bool protocol_is_ideal_coherence() {$/;"	f
pushResponseRequest	system/GpusimDramInterface.h	/^   void pushResponseRequest(MsgPtr* msg_ptr) {$/;"	f	class:GpusimDramInterface
queryOpalInterface	interfaces/OpalInterface.C	/^void OpalInterface::queryOpalInterface( void ) {$/;"	f	class:OpalInterface
queue	network/orion/SIM_arbiter.h	/^	SIM_array_t queue;$/;"	m	struct:__anon7
queue	network/orion_old/power_arbiter.h	/^	power_array queue; \/\/request queue$/;"	m	struct:__anon58
queueReady	system/MemoryControl.C	/^bool MemoryControl::queueReady (int bank) {$/;"	f	class:MemoryControl
r_load_hit	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::r_load_hit(const Address& addr)$/;"	f	class:L1Cache_Controller
random	slicc_interface/RubySlicc_Util.h	/^extern inline int random(int n)$/;"	f
random_time	buffers/MessageBuffer.C	/^int random_time() $/;"	f
rankBit0	config/RubyConfig.h	/^  static int rankBit0 () { return RANK_BIT_0; }$/;"	f	class:RubyConfig
rankRankDelay	config/RubyConfig.h	/^  static int rankRankDelay () { return RANK_RANK_DELAY; }$/;"	f	class:RubyConfig
ranksPerDimm	config/RubyConfig.h	/^  static int ranksPerDimm () { return RANKS_PER_DIMM; }$/;"	f	class:RubyConfig
re	network/simple/Network_Files/GarnetFileMaker.py	/^import sys, os, string, re, math$/;"	i
re	network/simple/Network_Files/NetworkFileMaker.py	/^import sys, os, string, re, math$/;"	i
readBit	system/BlockBloomFilter.C	/^int BlockBloomFilter::readBit(const int index) {$/;"	f	class:BlockBloomFilter
readBit	system/BulkBloomFilter.C	/^int BulkBloomFilter::readBit(const int index) {$/;"	f	class:BulkBloomFilter
readBit	system/GenericBloomFilter.C	/^int GenericBloomFilter::readBit(const int index) {$/;"	f	class:GenericBloomFilter
readBit	system/H3BloomFilter.C	/^int H3BloomFilter::readBit(const int index) {$/;"	f	class:H3BloomFilter
readBit	system/LSB_CountingBloomFilter.C	/^int LSB_CountingBloomFilter::readBit(const int index) {$/;"	f	class:LSB_CountingBloomFilter
readBit	system/MultiBitSelBloomFilter.C	/^int MultiBitSelBloomFilter::readBit(const int index) {$/;"	f	class:MultiBitSelBloomFilter
readBit	system/MultiGrainBloomFilter.C	/^int MultiGrainBloomFilter::readBit(const int index) {$/;"	f	class:MultiGrainBloomFilter
readBit	system/NonCountingBloomFilter.C	/^int NonCountingBloomFilter::readBit(const int index) {$/;"	f	class:NonCountingBloomFilter
readByte	common/SubBlock.h	/^  uint8 readByte() const { return getByte(0); }$/;"	f	class:SubBlock
readCallback	system/Sequencer.C	/^void Sequencer::readCallback(const Address& address) {$/;"	f	class:Sequencer
readCallback	system/Sequencer.C	/^void Sequencer::readCallback(const Address& address, DataBlock& data) {$/;"	f	class:Sequencer
readCallback	system/Sequencer.C	/^void Sequencer::readCallback(const Address& address, DataBlock& data, GenericMachineType respondingMach, PrefetchBit pf, int thread) {$/;"	f	class:Sequencer
readCallback	system/Sequencer.C	/^void Sequencer::readCallback(const Address& address, DataBlock& data, GenericMachineType respondingMach, int thread) {$/;"	f	class:Sequencer
readCallback	system/Sequencer.C	/^void Sequencer::readCallback(const Address& address, MemfetchSet mfset) {$/;"	f	class:Sequencer
readCallback	system/Sequencer.C	/^void Sequencer::readCallback(const Address& address, uint64 memfetch) {$/;"	f	class:Sequencer
readConflictCallback	system/Sequencer.C	/^void Sequencer::readConflictCallback(const Address& address) {$/;"	f	class:Sequencer
readConflictCallback	system/Sequencer.C	/^void Sequencer::readConflictCallback(const Address& address, GenericMachineType respondingMach, int thread) {$/;"	f	class:Sequencer
readNetConfig	network/garnet-flexible-pipeline/NetworkConfig.h	/^		static void readNetConfig()$/;"	f	class:NetworkConfig
readPhysicalMemory	common/Driver.h	/^  virtual integer_t readPhysicalMemory(int procID, physical_address_t address,$/;"	f	class:Driver
readPhysicalMemory	interfaces/GpusimInterface.C	/^integer_t GpusimInterface::readPhysicalMemory(int procID,$/;"	f	class:GpusimInterface
readPhysicalMemory	interfaces/OpalInterface.C	/^integer_t OpalInterface::readPhysicalMemory(int procID, $/;"	f	class:OpalInterface
readPhysicalMemory	simics/depreceated/SimicsDriver.C	/^integer_t SimicsDriver::readPhysicalMemory(int procID, $/;"	f	class:SimicsDriver
readPhysicalMemory	tester/SyntheticDriver.C	/^integer_t  SyntheticDriver::readPhysicalMemory(int procID, physical_address_t address,$/;"	f	class:SyntheticDriver
readWriteDelay	config/RubyConfig.h	/^  static int readWriteDelay () { return READ_WRITE_DELAY; }$/;"	f	class:RubyConfig
read_or_write_t	simics/simics_api_dummy.c	/^typedef int read_or_write_t;$/;"	t	file:
read_ports	network/orion/SIM_array.h	/^	u_int read_ports;$/;"	m	struct:__anon9
read_ports	network/orion_old/power_array.h	/^	unsigned read_ports;$/;"	m	struct:__anon80
read_reg	simics/depreceated/commands.C	/^read_reg(conf_object_t *cpu, const char* reg_name)$/;"	f
readyAddress	system/TimerTable.C	/^const Address& TimerTable::readyAddress() const$/;"	f	class:TimerTable
recalcAllSummarySignatures	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::recalcAllSummarySignatures(PHEntry * proc_entry) {$/;"	f	class:SimicsHypervisor
recalcAllSummarySignatures	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::recalcAllSummarySignatures(TransactionInterfaceManager *xact_mgr) {$/;"	f	class:SimicsHypervisor
reconfigureOutPort	network/simple/PerfectSwitch.C	/^void PerfectSwitch::reconfigureOutPort(const NetDest& routing_table_entry)$/;"	f	class:PerfectSwitch
reconfigureOutPort	network/simple/Switch.C	/^void Switch::reconfigureOutPort(const NetDest& routing_table_entry)$/;"	f	class:Switch
recordCacheContents	generated/MI_example/Chip.C	/^void Chip::recordCacheContents(CacheRecorder& tr) const$/;"	f	class:Chip
recordCacheContents	system/CacheMemory.h	/^void CacheMemory<ENTRY>::recordCacheContents(CacheRecorder& tr) const$/;"	f	class:CacheMemory
recordCacheContents	system/System.C	/^void System::recordCacheContents(CacheRecorder& tr) const$/;"	f	class:System
recordLoadLatency	tester/DeterministicDriver.C	/^void DeterministicDriver::recordLoadLatency(Time time)$/;"	f	class:DeterministicDriver
recordPrediction	profiler/Profiler.C	/^void Profiler::recordPrediction(bool wasGood, bool wasPredicted)$/;"	f	class:Profiler
recordReleaseLatency	tester/SyntheticDriver.C	/^void SyntheticDriver::recordReleaseLatency(Time time)$/;"	f	class:SyntheticDriver
recordStoreLatency	tester/DeterministicDriver.C	/^void DeterministicDriver::recordStoreLatency(Time time)$/;"	f	class:DeterministicDriver
recordSwapLatency	tester/SyntheticDriver.C	/^void SyntheticDriver::recordSwapLatency(Time time)$/;"	f	class:SyntheticDriver
recordTestLatency	tester/SyntheticDriver.C	/^void SyntheticDriver::recordTestLatency(Time time)$/;"	f	class:SyntheticDriver
recordTransactionResultStats	simics/depreceated/SimicsDriver.C	/^void SimicsDriver::recordTransactionResultStats($/;"	f	class:SimicsDriver
recordTransactionStats	simics/depreceated/SimicsDriver.C	/^void SimicsDriver::recordTransactionStats(memory_transaction_t* mem_trans) {$/;"	f	class:SimicsDriver
recycle	buffers/MessageBuffer.C	/^void MessageBuffer::recycle()$/;"	f	class:MessageBuffer
refreshPeriod	config/RubyConfig.h	/^  static int refreshPeriod () { return REFRESH_PERIOD; }$/;"	f	class:RubyConfig
registerThread0Wakeup	tester/RaceyDriver.C	/^void RaceyDriver::registerThread0Wakeup()$/;"	f	class:RaceyDriver
registerThreadWithHypervisor	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::registerThreadWithHypervisor(int proc_no) {$/;"	f	class:SimicsHypervisor
release_vc	network/garnet-flexible-pipeline/FlexibleConsumer.h	/^     	virtual void release_vc(int out_port, int vc, Time release_time) {}$/;"	f	class:FlexibleConsumer
release_vc	network/garnet-flexible-pipeline/NetworkInterface.C	/^void NetworkInterface::release_vc(int out_port, int vc, Time release_time)$/;"	f	class:NetworkInterface
release_vc	network/garnet-flexible-pipeline/Router.C	/^void Router::release_vc(int out_port, int vc, Time release_time)$/;"	f	class:Router
release_vc_link	network/garnet-flexible-pipeline/NetworkLink.C	/^void NetworkLink::release_vc_link(int vc, Time release_time)$/;"	f	class:NetworkLink
remove	common/BigSet.C	/^void Set::remove(NodeID index)$/;"	f	class:Set
remove	common/NetDest.C	/^void NetDest::remove(MachineID oldElement)$/;"	f	class:NetDest
remove	common/OptBigSet.h	/^  inline void remove(NodeID index)$/;"	f	class:Set
remove	common/Set.C	/^void Set::remove(NodeID index)$/;"	f	class:Set
remove	system/StoreCache.C	/^void StoreCache::remove(const SubBlock& block)$/;"	f	class:StoreCache
removeFromSet	common/BigSet.h	/^  void removeFromSet(NodeID newElement) { remove(newElement); }  \/\/ Deprecated$/;"	f	class:Set
removeFromSet	common/OptBigSet.h	/^  void removeFromSet(NodeID newElement) { remove(newElement); }  \/\/ Deprecated$/;"	f	class:Set
removeFromSet	common/Set.h	/^  void removeFromSet(NodeID newElement) { remove(newElement); }  \/\/ Deprecated$/;"	f	class:Set
removeLocker	system/PersistentArbiter.C	/^void PersistentArbiter::removeLocker(NodeID id) {$/;"	f	class:PersistentArbiter
removeMatchingSecondElement	common/IntPairSet.C	/^IntPairSet removeMatchingSecondElement(IntPairSet set, int T2) {$/;"	f
removeNetDest	common/NetDest.C	/^void NetDest::removeNetDest(const NetDest& netDest)$/;"	f	class:NetDest
removeOpalInterface	interfaces/OpalInterface.C	/^void OpalInterface::removeOpalInterface( void ) {$/;"	f	class:OpalInterface
removeRequest	system/Sequencer.C	/^void Sequencer::removeRequest(const CacheMsg& request) {$/;"	f	class:Sequencer
removeSet	common/BigSet.C	/^void Set::removeSet(const Set& set)$/;"	f	class:Set
removeSet	common/OptBigSet.C	/^void Set::removeSet(const Set& set)$/;"	f	class:Set
removeSet	common/Set.C	/^void Set::removeSet(const Set& set)$/;"	f	class:Set
removeSkipL1Request	system/Sequencer.C	/^void Sequencer::removeSkipL1Request(const CacheMsg& request) {$/;"	f	class:Sequencer
reportDone	tester/DeterministicDriver.C	/^void DeterministicDriver::reportDone()$/;"	f	class:DeterministicDriver
reportDone	tester/SyntheticDriver.C	/^void SyntheticDriver::reportDone()$/;"	f	class:SyntheticDriver
req_width	network/orion/SIM_arbiter.h	/^	u_int req_width;$/;"	m	struct:__anon7
req_width	network/orion_old/power_arbiter.h	/^	unsigned req_width;$/;"	m	struct:__anon58
request_vc	network/garnet-flexible-pipeline/FlexibleConsumer.h	/^        virtual void request_vc(int vc, int in_port, NetDest destination, Time request_time) {}$/;"	f	class:FlexibleConsumer
request_vc	network/garnet-flexible-pipeline/NetworkInterface.C	/^void NetworkInterface::request_vc(int in_vc, int in_port, NetDest destination, Time request_time)$/;"	f	class:NetworkInterface
request_vc	network/garnet-flexible-pipeline/Router.C	/^void Router::request_vc(int in_vc, int in_port, NetDest destination, Time request_time)$/;"	f	class:Router
request_vc_link	network/garnet-flexible-pipeline/NetworkLink.C	/^void NetworkLink::request_vc_link(int vc, NetDest destination, Time request_time)$/;"	f	class:NetworkLink
required_argument	tester/getopt.h	94;"	d
reset	network/garnet-fixed-pipeline/GarnetNetwork_d.C	/^void GarnetNetwork_d::reset()$/;"	f	class:GarnetNetwork_d
reset	network/garnet-flexible-pipeline/GarnetNetwork.C	/^void GarnetNetwork::reset()$/;"	f	class:GarnetNetwork
reset	network/simple/SimpleNetwork.C	/^void SimpleNetwork::reset()$/;"	f	class:SimpleNetwork
resetIC	tester/RaceyDriver.h	/^  void resetIC(int cpu_id) {$/;"	f	class:RaceyDriver
resetRequestTime	system/Sequencer.C	/^void Sequencer::resetRequestTime(const Address& addr, int thread){$/;"	f	class:Sequencer
resolveSummarySignatureConflict	simics/depreceated/SimicsHypervisor.C	/^void SimicsHypervisor::resolveSummarySignatureConflict(int proc_no){$/;"	f	class:SimicsHypervisor
restoreCheckpoint	simics/depreceated/SimicsProcessor.C	/^void SimicsProcessor::restoreCheckpoint(){$/;"	f	class:SimicsProcessor
result	simics/depreceated/SimicsDriver.h	/^typedef struct { MemoryTransactionResult result; int cycles; } StallCycle;$/;"	m	struct:__anon92
rin	network/orion/SIM_permu.h	/^	u_int rin[N_ONEHOT];$/;"	m	struct:__anon41
route	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	int route;$/;"	m	class:VirtualChannel_d
routeCompute	network/garnet-fixed-pipeline/RoutingUnit_d.C	/^int RoutingUnit_d::routeCompute(flit_d *t_flit)$/;"	f	class:RoutingUnit_d
routeCompute	network/garnet-flexible-pipeline/Router.C	/^void Router::routeCompute(flit *m_flit, int inport)$/;"	f	class:Router
route_req	network/garnet-fixed-pipeline/Router_d.C	/^void Router_d::route_req(flit_d *t_flit, InputUnit_d *in_unit, int invc)$/;"	f	class:Router_d
router_diagonal	network/orion/SIM_router.h	/^	double router_diagonal;$/;"	m	struct:__anon48
row	network/simple/Network_Files/GarnetFileMaker.py	/^    row = 1$/;"	v
row	network/simple/Network_Files/GarnetFileMaker.py	/^row = 0$/;"	v
row	network/simple/Network_Files/NetworkFileMaker.py	/^    row = 1$/;"	v
row	network/simple/Network_Files/NetworkFileMaker.py	/^row = 0$/;"	v
row_addr	network/orion/SIM_array.h	/^	LIB_Type_max_uint row_addr;$/;"	m	struct:__anon10
row_addr	network/orion/SIM_reg.h	/^	LIB_Type_max_uint row_addr;$/;"	m	struct:__anon45
row_addr	network/orion_old/power_array.h	/^	unsigned long int row_addr;$/;"	m	struct:__anon77
row_dec	network/orion/SIM_array.h	/^	SIM_array_dec_t row_dec;$/;"	m	struct:__anon8
row_dec	network/orion_old/power_array.h	/^	power_decoder row_dec;$/;"	m	struct:__anon79
row_dec_model	network/orion/SIM_array.h	/^	int row_dec_model;$/;"	m	struct:__anon9
row_dec_model	network/orion_old/power_array.h	/^	int row_dec_model;$/;"	m	struct:__anon80
row_dec_pre	network/orion/SIM_array.h	/^	SIM_array_pre_t row_dec_pre;$/;"	m	struct:__anon8
row_dec_pre	network/orion_old/power_array.h	/^	power_arr_pre row_dec_pre;$/;"	m	struct:__anon79
row_dec_pre_model	network/orion/SIM_array.h	/^	int row_dec_pre_model;$/;"	m	struct:__anon9
row_dec_pre_model	network/orion_old/power_array.h	/^	int row_dec_pre_model;$/;"	m	struct:__anon80
rows	network/simple/Network_Files/GarnetFileMaker.py	/^    rows = int(sys.argv[1])$/;"	v
rows	network/simple/Network_Files/GarnetFileMaker.py	/^rows = 0$/;"	v
rows	network/simple/Network_Files/NetworkFileMaker.py	/^    rows = int(sys.argv[1])$/;"	v
rows	network/simple/Network_Files/NetworkFileMaker.py	/^rows = 0$/;"	v
rr_arbiter_carry_cap	network/orion_old/power_arbiter.C	/^static double rr_arbiter_carry_cap()$/;"	f	file:
rr_arbiter_carry_in_cap	network/orion_old/power_arbiter.C	/^static double rr_arbiter_carry_in_cap()$/;"	f	file:
rr_arbiter_grant_cap	network/orion_old/power_arbiter.C	/^static double rr_arbiter_grant_cap()$/;"	f	file:
rr_arbiter_pri_cap	network/orion_old/power_arbiter.C	/^static double rr_arbiter_pri_cap()$/;"	f	file:
rr_arbiter_req_cap	network/orion_old/power_arbiter.C	/^static double rr_arbiter_req_cap(double length)$/;"	f	file:
ruby_abort_all	depreceated/module/commands.py	/^def ruby_abort_all(obj):$/;"	f
ruby_advance_time	tester/test_framework.C	/^void ruby_advance_time()$/;"	f
ruby_atomic_type	gpusim_ruby/gpusim_ruby.h	/^    ruby_atomic_type,$/;"	e	enum:ruby_memory_type_t
ruby_change_debug_filter	simics/depreceated/commands.C	/^void ruby_change_debug_filter(char* new_filter_str)$/;"	f
ruby_change_debug_verbosity	simics/depreceated/commands.C	/^void ruby_change_debug_verbosity(char* new_verbosity_str)$/;"	f
ruby_clear_stats	depreceated/module/commands.py	/^def ruby_clear_stats(obj):$/;"	f
ruby_clear_stats	simics/depreceated/commands.C	/^void ruby_clear_stats()$/;"	f
ruby_command	depreceated/module/commands.py	/^    def ruby_command( obj, arg=1, attr=ruby_cmd[0] ):$/;"	f
ruby_command_list	depreceated/module/commands.py	/^ruby_command_list = [$/;"	v
ruby_continue_execution	simics/depreceated/interface.C	/^void ruby_continue_execution(conf_object_t *cpu, lang_void *parameter){$/;"	f
ruby_debug_filter	depreceated/module/commands.py	/^def ruby_debug_filter(obj, new_debug_filter):$/;"	f
ruby_debug_output_file	depreceated/module/commands.py	/^def ruby_debug_output_file (obj, new_filename):$/;"	f
ruby_debug_start_time	depreceated/module/commands.py	/^def ruby_debug_start_time (obj, new_start_time):$/;"	f
ruby_debug_verb	depreceated/module/commands.py	/^def ruby_debug_verb(obj, new_verbosity):$/;"	f
ruby_disable_processor	simics/depreceated/interface.C	/^void ruby_disable_processor(conf_object_t *cpu, lang_void *parameter){$/;"	f
ruby_dram_req_info	gpusim_ruby/gpusim_ruby.h	/^struct ruby_dram_req_info {$/;"	s
ruby_dump_cache	depreceated/module/commands.py	/^def ruby_dump_cache(obj, cpuNumber):$/;"	f
ruby_dump_cache	simics/depreceated/commands.C	/^void ruby_dump_cache(int cpuNumber)$/;"	f
ruby_dump_cache_data	depreceated/module/commands.py	/^def ruby_dump_cache_data(obj, cpuNumber, filename):$/;"	f
ruby_dump_cache_data	simics/depreceated/commands.C	/^void ruby_dump_cache_data(int cpuNumber, char* tag)$/;"	f
ruby_dump_short_stats	depreceated/module/commands.py	/^def ruby_dump_short_stats(obj, filename):$/;"	f
ruby_dump_short_stats	simics/depreceated/commands.C	/^void ruby_dump_short_stats(char* filename)$/;"	f
ruby_dump_stats	depreceated/module/commands.py	/^def ruby_dump_stats(obj, filename):$/;"	f
ruby_dump_stats	simics/depreceated/commands.C	/^void ruby_dump_stats(char* filename)$/;"	f
ruby_global_space	gpusim_ruby/gpusim_ruby.h	/^   ruby_global_space,$/;"	e	enum:ruby_memory_space_t
ruby_initvar_obj	init.C	/^static  initvar_t  *ruby_initvar_obj = NULL;$/;"	v	file:
ruby_list_param	depreceated/module/commands.py	/^def ruby_list_param(obj):$/;"	f
ruby_load_caches	depreceated/module/commands.py	/^def ruby_load_caches(obj, filename):$/;"	f
ruby_load_caches	simics/depreceated/commands.C	/^void ruby_load_caches(char* name)$/;"	f
ruby_load_type	gpusim_ruby/gpusim_ruby.h	/^    ruby_load_type,$/;"	e	enum:ruby_memory_type_t
ruby_local_space	gpusim_ruby/gpusim_ruby.h	/^   ruby_local_space,$/;"	e	enum:ruby_memory_space_t
ruby_mem_access_byte_mask_t	common/Global.h	/^typedef std::bitset<MAX_RUBY_BLOCK_SIZE> ruby_mem_access_byte_mask_t;$/;"	t
ruby_membar_type	gpusim_ruby/gpusim_ruby.h	/^    ruby_membar_type,$/;"	e	enum:ruby_memory_type_t
ruby_memory_space_num	gpusim_ruby/gpusim_ruby.h	/^   ruby_memory_space_num,$/;"	e	enum:ruby_memory_space_t
ruby_memory_space_t	gpusim_ruby/gpusim_ruby.h	/^enum ruby_memory_space_t{$/;"	g
ruby_memory_type_num	gpusim_ruby/gpusim_ruby.h	/^    ruby_memory_type_num,$/;"	e	enum:ruby_memory_type_t
ruby_memory_type_t	gpusim_ruby/gpusim_ruby.h	/^enum ruby_memory_type_t{$/;"	g
ruby_new_instance	depreceated/module/ruby.c	/^conf_object_t *ruby_new_instance(parse_object_t *pa) {$/;"	f
ruby_object_t	depreceated/module/ruby.c	/^} ruby_object_t;$/;"	t	typeref:struct:__anon1	file:
ruby_observe	depreceated/module/ruby.c	/^cycles_t ruby_observe(conf_object_t *obj, conf_object_t *space,$/;"	f
ruby_observe_interface	depreceated/module/ruby.c	/^timing_model_interface_t *ruby_observe_interface;$/;"	v
ruby_operate	depreceated/module/ruby.c	/^cycles_t ruby_operate(conf_object_t *obj, conf_object_t *space,$/;"	f
ruby_periodic_stats_file	depreceated/module/commands.py	/^def ruby_periodic_stats_file(obj, filename):$/;"	f
ruby_periodic_stats_interval	depreceated/module/commands.py	/^def ruby_periodic_stats_interval(obj, interval):$/;"	f
ruby_restart_transaction	simics/depreceated/interface.C	/^void ruby_restart_transaction(conf_object_t *cpu, lang_void *parameter){  $/;"	f
ruby_save_caches	depreceated/module/commands.py	/^def ruby_save_caches(obj, filename):$/;"	f
ruby_save_caches	simics/depreceated/commands.C	/^void ruby_save_caches(char* name)$/;"	f
ruby_session_get	depreceated/module/ruby.c	/^attr_value_t ruby_session_get( void *id, conf_object_t *obj,$/;"	f
ruby_session_get	simics/simics_api_dummy.c	/^attr_value_t ruby_session_get( void *id, conf_object_t *obj,$/;"	f
ruby_session_set	depreceated/module/ruby.c	/^set_error_t ruby_session_set( void *id, conf_object_t *obj, $/;"	f
ruby_session_set	simics/simics_api_dummy.c	/^set_error_t ruby_session_set( void *id, conf_object_t *obj, $/;"	f
ruby_set_checkpoint_interval	depreceated/module/commands.py	/^def ruby_set_checkpoint_interval(obj, interval):$/;"	f
ruby_set_debug_output_file	simics/depreceated/commands.C	/^void ruby_set_debug_output_file (const char * new_filename)$/;"	f
ruby_set_debug_start_time	simics/depreceated/commands.C	/^void ruby_set_debug_start_time(char* start_time_str)$/;"	f
ruby_set_g3_reg	simics/depreceated/commands.C	/^void ruby_set_g3_reg(conf_object_t *cpu, lang_void *parameter){$/;"	f
ruby_set_npc	simics/depreceated/interface.C	/^void ruby_set_npc(conf_object_t *cpu, lang_void *parameter){$/;"	f
ruby_set_param	depreceated/module/commands.py	/^def ruby_set_param(obj, name, value):$/;"	f
ruby_set_param_str	depreceated/module/commands.py	/^def ruby_set_param_str(obj, name, value):$/;"	f
ruby_set_pc	simics/depreceated/interface.C	/^void ruby_set_pc(conf_object_t *cpu, lang_void *parameter){$/;"	f
ruby_set_periodic_stats_file	simics/depreceated/commands.C	/^void ruby_set_periodic_stats_file(char* filename)$/;"	f
ruby_set_periodic_stats_interval	simics/depreceated/commands.C	/^void ruby_set_periodic_stats_interval(int interval)$/;"	f
ruby_set_program_counter	simics/depreceated/interface.C	/^void ruby_set_program_counter(conf_object_t *cpu, lang_void *parameter){$/;"	f
ruby_set_tracer_output_file	simics/depreceated/commands.C	/^void ruby_set_tracer_output_file (const char * new_filename)$/;"	f
ruby_stall_proc	simics/depreceated/interface.C	/^void ruby_stall_proc(conf_object_t *cpu, lang_void *parameter){$/;"	f
ruby_store_type	gpusim_ruby/gpusim_ruby.h	/^    ruby_store_type,$/;"	e	enum:ruby_memory_type_t
ruby_system_recovery	depreceated/module/commands.py	/^def ruby_system_recovery(obj):$/;"	f
ruby_timing_interface	depreceated/module/ruby.c	/^timing_model_interface_t *ruby_timing_interface;$/;"	v
ruby_tracer_output_file	depreceated/module/commands.py	/^def ruby_tracer_output_file (obj, new_filename):$/;"	f
ruby_xact_visualizer_file	depreceated/module/commands.py	/^def ruby_xact_visualizer_file(obj, filename):$/;"	f
ruby_xact_visualizer_file	simics/depreceated/commands.C	/^void ruby_xact_visualizer_file (char * new_filename)$/;"	f
runRubyEventQueue	simics/depreceated/interface.C	/^static void runRubyEventQueue(conf_object_t* obj, lang_void* arg)$/;"	f	file:
runningThreads	tester/RaceyDriver.C	/^int RaceyDriver::runningThreads()$/;"	f	class:RaceyDriver
s_advance_counter	interfaces/OpalInterface.C	/^int OpalInterface::s_advance_counter = 0;$/;"	m	class:OpalInterface	file:
s_advance_counter	interfaces/OpalInterface.h	/^  static int      s_advance_counter;$/;"	m	class:OpalInterface
s_allocator_ptr	generated/MI_example/CacheMsg.C	/^Allocator<CacheMsg>* CacheMsg::s_allocator_ptr = NULL;$/;"	m	class:CacheMsg	file:
s_allocator_ptr	generated/MI_example/CacheMsg.h	/^  static Allocator<CacheMsg>* s_allocator_ptr;$/;"	m	class:CacheMsg
s_allocator_ptr	generated/MI_example/MemoryMsg.C	/^Allocator<MemoryMsg>* MemoryMsg::s_allocator_ptr = NULL;$/;"	m	class:MemoryMsg	file:
s_allocator_ptr	generated/MI_example/MemoryMsg.h	/^  static Allocator<MemoryMsg>* s_allocator_ptr;$/;"	m	class:MemoryMsg
s_allocator_ptr	generated/MI_example/RequestMsg.C	/^Allocator<RequestMsg>* RequestMsg::s_allocator_ptr = NULL;$/;"	m	class:RequestMsg	file:
s_allocator_ptr	generated/MI_example/RequestMsg.h	/^  static Allocator<RequestMsg>* s_allocator_ptr;$/;"	m	class:RequestMsg
s_allocator_ptr	generated/MI_example/ResponseMsg.C	/^Allocator<ResponseMsg>* ResponseMsg::s_allocator_ptr = NULL;$/;"	m	class:ResponseMsg	file:
s_allocator_ptr	generated/MI_example/ResponseMsg.h	/^  static Allocator<ResponseMsg>* s_allocator_ptr;$/;"	m	class:ResponseMsg
s_allocator_ptr	generated/MI_example/TriggerMsg.C	/^Allocator<TriggerMsg>* TriggerMsg::s_allocator_ptr = NULL;$/;"	m	class:TriggerMsg	file:
s_allocator_ptr	generated/MI_example/TriggerMsg.h	/^  static Allocator<TriggerMsg>* s_allocator_ptr;$/;"	m	class:TriggerMsg
s_exception_hap_handle	simics/depreceated/interface.C	/^static hap_handle_t s_exception_hap_handle;$/;"	v	file:
s_init	profiler/StoreTrace.C	/^bool StoreTrace::s_init = false; \/\/ Total number of store lifetimes of all lines$/;"	m	class:StoreTrace	file:
s_init	profiler/StoreTrace.h	/^  static bool s_init;$/;"	m	class:StoreTrace
s_profiler	generated/MI_example/Directory_Controller.C	/^Directory_Profiler Directory_Controller::s_profiler;$/;"	m	class:Directory_Controller	file:
s_profiler	generated/MI_example/Directory_Controller.h	/^  static Directory_Profiler s_profiler;$/;"	m	class:Directory_Controller
s_profiler	generated/MI_example/L1Cache_Controller.C	/^L1Cache_Profiler L1Cache_Controller::s_profiler;$/;"	m	class:L1Cache_Controller	file:
s_profiler	generated/MI_example/L1Cache_Controller.h	/^  static L1Cache_Profiler s_profiler;$/;"	m	class:L1Cache_Controller
s_stallCycleMap	simics/depreceated/SimicsDriver.h	/^static StallCycle s_stallCycleMap[] = {$/;"	v
s_store_count_ptr	profiler/StoreTrace.C	/^Histogram* StoreTrace::s_store_count_ptr = NULL;$/;"	m	class:StoreTrace	file:
s_store_count_ptr	profiler/StoreTrace.h	/^  static Histogram* s_store_count_ptr;$/;"	m	class:StoreTrace
s_store_first_to_last_ptr	profiler/StoreTrace.C	/^Histogram* StoreTrace::s_store_first_to_last_ptr = NULL;$/;"	m	class:StoreTrace	file:
s_store_first_to_last_ptr	profiler/StoreTrace.h	/^  static Histogram* s_store_first_to_last_ptr;$/;"	m	class:StoreTrace
s_store_first_to_stolen_ptr	profiler/StoreTrace.C	/^Histogram* StoreTrace::s_store_first_to_stolen_ptr = NULL;$/;"	m	class:StoreTrace	file:
s_store_first_to_stolen_ptr	profiler/StoreTrace.h	/^  static Histogram* s_store_first_to_stolen_ptr;$/;"	m	class:StoreTrace
s_store_hit	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::s_store_hit(const Address& addr)$/;"	f	class:L1Cache_Controller
s_store_last_to_stolen_ptr	profiler/StoreTrace.C	/^Histogram* StoreTrace::s_store_last_to_stolen_ptr = NULL;$/;"	m	class:StoreTrace	file:
s_store_last_to_stolen_ptr	profiler/StoreTrace.h	/^  static Histogram* s_store_last_to_stolen_ptr;$/;"	m	class:StoreTrace
s_total_samples	profiler/StoreTrace.C	/^int64 StoreTrace::s_total_samples = 0; \/\/ Total number of store lifetimes of all lines$/;"	m	class:StoreTrace	file:
s_total_samples	profiler/StoreTrace.h	/^  static int64 s_total_samples; \/\/ Total number of store lifetimes of all lines$/;"	m	class:StoreTrace
saveCPUStates	tester/RaceyDriver.h	/^  void saveCPUStates(int cpu_id, string filename) {$/;"	f	class:RaceyDriver
scheduleEvent	eventqueue/EventQueue.h	/^  void scheduleEvent(Consumer* consumer, Time timeDelta) { scheduleEventAbsolute(consumer, timeDelta + m_globalTime); }$/;"	f	class:EventQueue
scheduleEventAbsolute	eventqueue/EventQueue.C	/^void EventQueue::scheduleEventAbsolute(Consumer* consumer, Time timeAbs)$/;"	f	class:EventQueue
scheduleOutputLink	network/garnet-fixed-pipeline/NetworkInterface_d.C	/^void NetworkInterface_d::scheduleOutputLink()$/;"	f	class:NetworkInterface_d
scheduleOutputLink	network/garnet-flexible-pipeline/NetworkInterface.C	/^void NetworkInterface::scheduleOutputLink()$/;"	f	class:NetworkInterface
scheduleOutputLinks	network/garnet-flexible-pipeline/Router.C	/^void Router::scheduleOutputLinks()$/;"	f	class:Router
selb_delay	network/orion/SIM_array_internal.h	/^	double selb_delay;$/;"	m	struct:__anon13
select_outvc	network/garnet-fixed-pipeline/VCallocator_d.C	/^void VCallocator_d::select_outvc(int inport_iter, int invc_iter)$/;"	f	class:VCallocator_d
send_memfence_request	gpusim_ruby/gpusim_ruby.C	/^  void gpusim_ruby::send_memfence_request( unsigned long long addr, unsigned req_size, unsigned sid, unsigned tid, unsigned pc,$/;"	f	class:gpusim_ruby
send_request	gpusim_ruby/gpusim_ruby.C	/^void gpusim_ruby::send_request( unsigned long long addr, unsigned req_size, unsigned sid, unsigned tid, unsigned pc,$/;"	f	class:gpusim_ruby
sendruby_request	tester/test_framework.C	/^void sendruby_request( unsigned long long addr, unsigned req_size, unsigned sid, unsigned tid, bool is_write, bool isPriv, class mem_fetch * mf )$/;"	f
sense_amp_delay_data	network/orion/SIM_array_internal.h	/^	double sense_amp_delay_data,sense_amp_delay_tag;$/;"	m	struct:__anon13
sense_amp_delay_tag	network/orion/SIM_array_internal.h	/^	double sense_amp_delay_data,sense_amp_delay_tag;$/;"	m	struct:__anon13
senseext_driver_delay_data	network/orion/SIM_array_internal.h	/^	double senseext_driver_delay_data;$/;"	m	struct:__anon13
sequencer	tester/BarrierGenerator.C	/^Sequencer* BarrierGenerator::sequencer() const$/;"	f	class:BarrierGenerator
sequencer	tester/DetermGETXGenerator.C	/^Sequencer* DetermGETXGenerator::sequencer() const$/;"	f	class:DetermGETXGenerator
sequencer	tester/DetermInvGenerator.C	/^Sequencer* DetermInvGenerator::sequencer() const$/;"	f	class:DetermInvGenerator
sequencer	tester/DetermSeriesGETSGenerator.C	/^Sequencer* DetermSeriesGETSGenerator::sequencer() const$/;"	f	class:DetermSeriesGETSGenerator
sequencer	tester/RequestGenerator.C	/^Sequencer* RequestGenerator::sequencer() const$/;"	f	class:RequestGenerator
sequencer	tester/depreceated/XactAbortRequestGenerator.C	/^Sequencer* XactAbortRequestGenerator::sequencer() const$/;"	f	class:XactAbortRequestGenerator
sequencer	tester/depreceated/XactRequestGenerator.C	/^Sequencer* XactRequestGenerator::sequencer() const$/;"	f	class:XactRequestGenerator
sequencerRequests	profiler/Profiler.h	/^  void sequencerRequests(int num) { m_sequencer_requests.add(num); }$/;"	f	class:Profiler
set	system/BlockBloomFilter.C	/^void BlockBloomFilter::set(const Address& addr)$/;"	f	class:BlockBloomFilter
set	system/BulkBloomFilter.C	/^void BulkBloomFilter::set(const Address& addr)$/;"	f	class:BulkBloomFilter
set	system/GenericBloomFilter.C	/^void GenericBloomFilter::set(const Address& addr)$/;"	f	class:GenericBloomFilter
set	system/GlobalWriteVector.C	/^void GlobalWriteVector::set(int threadId, Time writeTime) {$/;"	f	class:GlobalWriteVector
set	system/H3BloomFilter.C	/^void H3BloomFilter::set(const Address& addr)$/;"	f	class:H3BloomFilter
set	system/LSB_CountingBloomFilter.C	/^void LSB_CountingBloomFilter::set(const Address& addr)$/;"	f	class:LSB_CountingBloomFilter
set	system/MultiBitSelBloomFilter.C	/^void MultiBitSelBloomFilter::set(const Address& addr)$/;"	f	class:MultiBitSelBloomFilter
set	system/MultiGrainBloomFilter.C	/^void MultiGrainBloomFilter::set(const Address& addr)$/;"	f	class:MultiGrainBloomFilter
set	system/NonCountingBloomFilter.C	/^void NonCountingBloomFilter::set(const Address& addr)$/;"	f	class:NonCountingBloomFilter
set	system/TimerTable.C	/^void TimerTable::set(const Address& address, Time relative_latency)$/;"	f	class:TimerTable
setAccessMask	generated/MI_example/CacheMsg.h	/^  void setAccessMask(const ruby_mem_access_byte_mask_t& local_AccessMask) { m_AccessMask = local_AccessMask; }$/;"	f	class:CacheMsg
setAccessMode	generated/MI_example/CacheMsg.h	/^  void setAccessMode(const AccessModeType& local_AccessMode) { m_AccessMode = local_AccessMode; }$/;"	f	class:CacheMsg
setAcks	generated/MI_example/MemoryMsg.h	/^  void setAcks(const int& local_Acks) { m_Acks = local_Acks; }$/;"	f	class:MemoryMsg
setAcks	generated/MI_example/RequestMsg.h	/^  void setAcks(const int& local_Acks) { m_Acks = local_Acks; }$/;"	f	class:RequestMsg
setAcks	generated/MI_example/ResponseMsg.h	/^  void setAcks(const int& local_Acks) { m_Acks = local_Acks; }$/;"	f	class:ResponseMsg
setAddress	common/Address.h	/^  void setAddress(physical_address_t address) { m_address = address; }$/;"	f	class:Address
setAddress	common/SubBlock.h	/^  void setAddress(const Address& addr) { m_address = addr; }$/;"	f	class:SubBlock
setAddress	generated/MI_example/CacheMsg.h	/^  void setAddress(const Address& local_Address) { m_Address = local_Address; }$/;"	f	class:CacheMsg
setAddress	generated/MI_example/MemoryMsg.h	/^  void setAddress(const Address& local_Address) { m_Address = local_Address; }$/;"	f	class:MemoryMsg
setAddress	generated/MI_example/RequestMsg.h	/^  void setAddress(const Address& local_Address) { m_Address = local_Address; }$/;"	f	class:RequestMsg
setAddress	generated/MI_example/ResponseMsg.h	/^  void setAddress(const Address& local_Address) { m_Address = local_Address; }$/;"	f	class:ResponseMsg
setAddress	generated/MI_example/TriggerMsg.h	/^  void setAddress(const Address& local_Address) { m_Address = local_Address; }$/;"	f	class:TriggerMsg
setAndReturnDelayCycles	buffers/MessageBuffer.C	/^int MessageBuffer::setAndReturnDelayCycles(MsgPtr& message)$/;"	f	class:MessageBuffer
setAsInstructionCache	system/CacheMemory.h	/^  void setAsInstructionCache(bool is_icache) { m_is_instruction_cache = is_icache; }$/;"	f	class:CacheMemory
setBroadcast	common/BigSet.h	/^  void setBroadcast() { broadcast(); }   \/\/ Deprecated$/;"	f	class:Set
setBroadcast	common/OptBigSet.h	/^  void setBroadcast() { broadcast(); }   \/\/ Deprecated$/;"	f	class:Set
setBroadcast	common/Set.h	/^  void setBroadcast() { broadcast(); }   \/\/ Deprecated$/;"	f	class:Set
setByte	common/DataBlock.C	/^void DataBlock::setByte(int whichByte, uint8 data)$/;"	f	class:DataBlock
setByte	common/SubBlock.h	/^  void setByte(int offset, uint8 data) { m_data[offset] = data; }$/;"	f	class:SubBlock
setCacheState	generated/MI_example/L1Cache_Entry.h	/^  void setCacheState(const L1Cache_State& local_CacheState) { m_CacheState = local_CacheState; }$/;"	f	class:L1Cache_Entry
setConsumer	buffers/MessageBuffer.h	/^  void setConsumer(Consumer* consumer_ptr) { ASSERT(m_consumer_ptr==NULL); m_consumer_ptr = consumer_ptr; }$/;"	f	class:MessageBuffer
setConsumer	system/GpusimDramInterface.C	/^void GpusimDramInterface::setConsumer (Consumer* consumer_ptr) {$/;"	f	class:GpusimDramInterface
setConsumer	system/MemoryControl.C	/^void MemoryControl::setConsumer (Consumer* consumer_ptr) {$/;"	f	class:MemoryControl
setConsumer	system/TimerTable.h	/^  void setConsumer(Consumer* consumer_ptr) { ASSERT(m_consumer_ptr==NULL); m_consumer_ptr = consumer_ptr; }$/;"	f	class:TimerTable
setDataBlk	generated/MI_example/Directory_Entry.h	/^  void setDataBlk(const DataBlock& local_DataBlk) { m_DataBlk = local_DataBlk; }$/;"	f	class:Directory_Entry
setDataBlk	generated/MI_example/L1Cache_Entry.h	/^  void setDataBlk(const DataBlock& local_DataBlk) { m_DataBlk = local_DataBlk; }$/;"	f	class:L1Cache_Entry
setDataBlk	generated/MI_example/L1Cache_TBE.h	/^  void setDataBlk(const DataBlock& local_DataBlk) { m_DataBlk = local_DataBlk; }$/;"	f	class:L1Cache_TBE
setDataBlk	generated/MI_example/MemoryMsg.h	/^  void setDataBlk(const DataBlock& local_DataBlk) { m_DataBlk = local_DataBlk; }$/;"	f	class:MemoryMsg
setDataBlk	generated/MI_example/RequestMsg.h	/^  void setDataBlk(const DataBlock& local_DataBlk) { m_DataBlk = local_DataBlk; }$/;"	f	class:RequestMsg
setDataBlk	generated/MI_example/ResponseMsg.h	/^  void setDataBlk(const DataBlock& local_DataBlk) { m_DataBlk = local_DataBlk; }$/;"	f	class:ResponseMsg
setDebug	system/GpusimDramInterface.C	/^void GpusimDramInterface::setDebug (int debugFlag) {$/;"	f	class:GpusimDramInterface
setDebug	system/MemoryControl.C	/^void MemoryControl::setDebug (int debugFlag) {$/;"	f	class:MemoryControl
setDebugOutputFile	common/Debug.C	/^void Debug::setDebugOutputFile (const char * filename)$/;"	f	class:Debug
setDebugTime	common/Debug.C	/^void Debug::setDebugTime(Time t)$/;"	f	class:Debug
setDelayedCycles	slicc_interface/Message.h	/^  void setDelayedCycles(const int& cycles) { m_DelayedCycles = cycles; }$/;"	f	class:Message
setDescription	buffers/MessageBuffer.h	/^  void setDescription(const string& name) { m_name = name; }$/;"	f	class:MessageBuffer
setDescription	system/GpusimDramInterface.h	/^   void setDescription (const string& name) { m_name = name; };$/;"	f	class:GpusimDramInterface
setDescription	system/MemoryControl.h	/^  void setDescription (const string& name) { m_name = name; };$/;"	f	class:MemoryControl
setDescription	system/TimerTable.h	/^  void setDescription(const string& name) { m_name = name; }$/;"	f	class:TimerTable
setDestination	generated/MI_example/RequestMsg.h	/^  void setDestination(const NetDest& local_Destination) { m_Destination = local_Destination; }$/;"	f	class:RequestMsg
setDestination	generated/MI_example/ResponseMsg.h	/^  void setDestination(const NetDest& local_Destination) { m_Destination = local_Destination; }$/;"	f	class:ResponseMsg
setDirectoryState	generated/MI_example/Directory_Entry.h	/^  void setDirectoryState(const Directory_State& local_DirectoryState) { m_DirectoryState = local_DirectoryState; }$/;"	f	class:Directory_Entry
setDirty	generated/MI_example/L1Cache_Entry.h	/^  void setDirty(const bool& local_Dirty) { m_Dirty = local_Dirty; }$/;"	f	class:L1Cache_Entry
setDirty	generated/MI_example/ResponseMsg.h	/^  void setDirty(const bool& local_Dirty) { m_Dirty = local_Dirty; }$/;"	f	class:ResponseMsg
setEndOfLifetime	profiler/LifetimeTrace.h	/^    void setEndOfLifetime(Time lifetime, LifetimeEndReason_t reason) {$/;"	f	struct:LifetimeAccess
setExposedAction	generated/MI_example/CacheMsg.h	/^  void setExposedAction(const bool& local_ExposedAction) { m_ExposedAction = local_ExposedAction; }$/;"	f	class:CacheMsg
setFilter	common/Debug.C	/^void Debug::setFilter(int filter)$/;"	f	class:Debug
setFilterString	common/Debug.C	/^bool Debug::setFilterString(const char *filter_str)$/;"	f	class:Debug
setInPort	network/garnet-flexible-pipeline/NetworkLink.C	/^void NetworkLink::setInPort(int port)$/;"	f	class:NetworkLink
setIssuedAddress	system/PersistentArbiter.C	/^void PersistentArbiter::setIssuedAddress(Address addr) {$/;"	f	class:PersistentArbiter
setLastEnqueueTime	slicc_interface/Message.h	/^  void setLastEnqueueTime(const Time& time) { m_LastEnqueueTime = time; }$/;"	f	class:Message
setLastScheduledWakeup	common/Consumer.h	/^  void setLastScheduledWakeup(const Time& time) { m_last_scheduled_wakeup = time; }$/;"	f	class:Consumer
setLinkConsumer	network/garnet-fixed-pipeline/NetworkLink_d.C	/^void NetworkLink_d::setLinkConsumer(Consumer *consumer)$/;"	f	class:NetworkLink_d
setLinkConsumer	network/garnet-flexible-pipeline/NetworkLink.C	/^void NetworkLink::setLinkConsumer(FlexibleConsumer *consumer)$/;"	f	class:NetworkLink
setLogged	generated/MI_example/L1Cache_TBE.h	/^  void setLogged(const bool& local_Logged) { m_Logged = local_Logged; }$/;"	f	class:L1Cache_TBE
setLogicalAddress	common/SubBlock.h	/^  void setLogicalAddress(const Address& addr) { m_logicalAddress = addr; }$/;"	f	class:SubBlock
setLogicalAddress	generated/MI_example/CacheMsg.h	/^  void setLogicalAddress(const Address& local_LogicalAddress) { m_LogicalAddress = local_LogicalAddress; }$/;"	f	class:CacheMsg
setMRU	system/CacheMemory.h	/^void CacheMemory<ENTRY>::setMRU(const Address& address)$/;"	f	class:CacheMemory
setMaxSize	network/garnet-fixed-pipeline/flitBuffer_d.C	/^void flitBuffer_d::setMaxSize(int maximum)$/;"	f	class:flitBuffer_d
setMaxSize	network/garnet-flexible-pipeline/flitBuffer.C	/^void flitBuffer::setMaxSize(int maximum)$/;"	f	class:flitBuffer
setMemoryValue	system/CacheMemory.h	/^void CacheMemory<ENTRY>::setMemoryValue(const Address& addr, char* value,$/;"	f	class:CacheMemory
setMessageSize	generated/MI_example/MemoryMsg.h	/^  void setMessageSize(const MessageSizeType& local_MessageSize) { m_MessageSize = local_MessageSize; }$/;"	f	class:MemoryMsg
setMessageSize	generated/MI_example/RequestMsg.h	/^  void setMessageSize(const MessageSizeType& local_MessageSize) { m_MessageSize = local_MessageSize; }$/;"	f	class:RequestMsg
setMessageSize	generated/MI_example/ResponseMsg.h	/^  void setMessageSize(const MessageSizeType& local_MessageSize) { m_MessageSize = local_MessageSize; }$/;"	f	class:ResponseMsg
setNetDest	common/NetDest.C	/^void NetDest::setNetDest(MachineType machine, const Set& set)$/;"	f	class:NetDest
setNextAddr	tester/DeterministicDriver.C	/^void DeterministicDriver::setNextAddr(NodeID node, Address addr, Vector<NodeID>& addr_vector)$/;"	f	class:DeterministicDriver
setOffset	common/Address.h	/^  void setOffset( int offset ){$/;"	f	class:Address
setOffset	slicc_interface/RubySlicc_Util.h	/^extern inline Address setOffset(Address addr, int offset)$/;"	f
setOpalInterface	interfaces/OpalInterface.h	/^  void setOpalInterface( mf_opal_api_t *opal_intf ) {$/;"	f	class:OpalInterface
setOrdering	buffers/MessageBuffer.h	/^  void setOrdering(bool order) { m_strict_fifo = order; m_ordering_set = true; }$/;"	f	class:MessageBuffer
setOriginalRequestorMachId	generated/MI_example/MemoryMsg.h	/^  void setOriginalRequestorMachId(const MachineID& local_OriginalRequestorMachId) { m_OriginalRequestorMachId = local_OriginalRequestorMachId; }$/;"	f	class:MemoryMsg
setOutPort	network/garnet-flexible-pipeline/NetworkLink.C	/^void NetworkLink::setOutPort(int port)$/;"	f	class:NetworkLink
setOwner	generated/MI_example/Directory_Entry.h	/^  void setOwner(const NetDest& local_Owner) { m_Owner = local_Owner; }$/;"	f	class:Directory_Entry
setPeriodicStatsFile	profiler/Profiler.C	/^void Profiler::setPeriodicStatsFile(const string& filename)$/;"	f	class:Profiler
setPeriodicStatsInterval	profiler/Profiler.C	/^void Profiler::setPeriodicStatsInterval(integer_t period)$/;"	f	class:Profiler
setPhysicalAddress	generated/MI_example/CacheMsg.h	/^  void setPhysicalAddress(const Address& local_PhysicalAddress) { m_PhysicalAddress = local_PhysicalAddress; }$/;"	f	class:CacheMsg
setPrefetch	generated/MI_example/CacheMsg.h	/^  void setPrefetch(const PrefetchBit& local_Prefetch) { m_Prefetch = local_Prefetch; }$/;"	f	class:CacheMsg
setPrefetch	generated/MI_example/MemoryMsg.h	/^  void setPrefetch(const PrefetchBit& local_Prefetch) { m_Prefetch = local_Prefetch; }$/;"	f	class:MemoryMsg
setPriority	buffers/MessageBuffer.h	/^  void setPriority(int rank) { m_priority_rank = rank; }$/;"	f	class:MessageBuffer
setProgramCounter	generated/MI_example/CacheMsg.h	/^  void setProgramCounter(const Address& local_ProgramCounter) { m_ProgramCounter = local_ProgramCounter; }$/;"	f	class:CacheMsg
setRandomization	buffers/MessageBuffer.h	/^  void setRandomization(bool random_flag) { m_randomization = random_flag; }$/;"	f	class:MessageBuffer
setReadX	generated/MI_example/MemoryMsg.h	/^  void setReadX(const bool& local_ReadX) { m_ReadX = local_ReadX; }$/;"	f	class:MemoryMsg
setRequestor	generated/MI_example/RequestMsg.h	/^  void setRequestor(const MachineID& local_Requestor) { m_Requestor = local_Requestor; }$/;"	f	class:RequestMsg
setRoute	network/garnet-flexible-pipeline/InVcState.C	/^void InVcState::setRoute(int route)$/;"	f	class:InVcState
setRubyMemoryValue	system/Sequencer.C	/^bool Sequencer::setRubyMemoryValue(const Address& addr, char *value,$/;"	f	class:Sequencer
setSender	generated/MI_example/MemoryMsg.h	/^  void setSender(const MachineID& local_Sender) { m_Sender = local_Sender; }$/;"	f	class:MemoryMsg
setSender	generated/MI_example/ResponseMsg.h	/^  void setSender(const MachineID& local_Sender) { m_Sender = local_Sender; }$/;"	f	class:ResponseMsg
setSharers	generated/MI_example/Directory_Entry.h	/^  void setSharers(const NetDest& local_Sharers) { m_Sharers = local_Sharers; }$/;"	f	class:Directory_Entry
setSize	buffers/MessageBuffer.h	/^  void setSize(int size) {m_max_size = size;}$/;"	f	class:MessageBuffer
setSize	common/BigSet.C	/^void Set::setSize(int size) $/;"	f	class:Set
setSize	common/NetDest.C	/^void NetDest::setSize()$/;"	f	class:NetDest
setSize	common/OptBigSet.C	/^void Set::setSize(int size) $/;"	f	class:Set
setSize	common/Set.C	/^void Set::setSize(int size) $/;"	f	class:Set
setSize	common/SubBlock.h	/^  void setSize(int size) {  m_data.setSize(size); }$/;"	f	class:SubBlock
setSize	generated/MI_example/CacheMsg.h	/^  void setSize(const int& local_Size) { m_Size = local_Size; }$/;"	f	class:CacheMsg
setSource	network/garnet-flexible-pipeline/NetworkLink.C	/^void NetworkLink::setSource(FlexibleConsumer *source)$/;"	f	class:NetworkLink
setSourceQueue	network/garnet-fixed-pipeline/NetworkLink_d.C	/^void NetworkLink_d::setSourceQueue(flitBuffer_d *srcQueue)$/;"	f	class:NetworkLink_d
setSourceQueue	network/garnet-flexible-pipeline/NetworkLink.C	/^void NetworkLink::setSourceQueue(flitBuffer *srcQueue)$/;"	f	class:NetworkLink
setSpace	generated/MI_example/CacheMsg.h	/^  void setSpace(const MemorySpaceType& local_Space) { m_Space = local_Space; }$/;"	f	class:CacheMsg
setState	network/garnet-fixed-pipeline/OutVcState_d.h	/^	inline void setState(VC_state_type state, Time time)$/;"	f	class:OutVcState_d
setState	network/garnet-flexible-pipeline/InVcState.C	/^void InVcState::setState(VC_state_type state, Time time)$/;"	f	class:InVcState
setState	network/garnet-flexible-pipeline/OutVcState.C	/^void OutVcState::setState(VC_state_type state, Time time)$/;"	f	class:OutVcState
setTBEState	generated/MI_example/L1Cache_TBE.h	/^  void setTBEState(const L1Cache_State& local_TBEState) { m_TBEState = local_TBEState; }$/;"	f	class:L1Cache_TBE
setThreadID	generated/MI_example/CacheMsg.h	/^  void setThreadID(const int& local_ThreadID) { m_ThreadID = local_ThreadID; }$/;"	f	class:CacheMsg
setTime	slicc_interface/Message.h	/^  void setTime(const Time& new_time) { m_time = new_time; }$/;"	f	class:Message
setTimeOfLastRecovery	eventqueue/EventQueue.h	/^  void setTimeOfLastRecovery(Time t) {m_timeOfLastRecovery = t;}$/;"	f	class:EventQueue
setTimestamp	generated/MI_example/CacheMsg.h	/^  void setTimestamp(const uint64& local_Timestamp) { m_Timestamp = local_Timestamp; }$/;"	f	class:CacheMsg
setTrans	generated/MI_example/L1Cache_TBE.h	/^  void setTrans(const bool& local_Trans) { m_Trans = local_Trans; }$/;"	f	class:L1Cache_TBE
setTransactionInterfaceManager	simics/depreceated/SimicsProcessor.C	/^void SimicsProcessor::setTransactionInterfaceManager(TransactionInterfaceManager* xact_mgr) {$/;"	f	class:SimicsProcessor
setType	generated/MI_example/CacheMsg.h	/^  void setType(const CacheRequestType& local_Type) { m_Type = local_Type; }$/;"	f	class:CacheMsg
setType	generated/MI_example/MemoryMsg.h	/^  void setType(const MemoryRequestType& local_Type) { m_Type = local_Type; }$/;"	f	class:MemoryMsg
setType	generated/MI_example/RequestMsg.h	/^  void setType(const CoherenceRequestType& local_Type) { m_Type = local_Type; }$/;"	f	class:RequestMsg
setType	generated/MI_example/ResponseMsg.h	/^  void setType(const CoherenceResponseType& local_Type) { m_Type = local_Type; }$/;"	f	class:ResponseMsg
setType	generated/MI_example/TriggerMsg.h	/^  void setType(const TriggerType& local_Type) { m_Type = local_Type; }$/;"	f	class:TriggerMsg
setVerbosity	common/Debug.C	/^void Debug::setVerbosity(VerbosityLevel vb)$/;"	f	class:Debug
setVerbosityString	common/Debug.C	/^bool Debug::setVerbosityString(const char *verb_str)$/;"	f	class:Debug
setVersion	generated/MI_example/CacheMsg.h	/^  void setVersion(const int& local_Version) { m_Version = local_Version; }$/;"	f	class:CacheMsg
set_benchmark_contains_membar	gpusim_ruby/gpusim_ruby.C	/^void gpusim_ruby::set_benchmark_contains_membar(bool flag) {$/;"	f	class:gpusim_ruby
set_credit_link	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline void set_credit_link(CreditLink_d *credit_link)$/;"	f	class:InputUnit_d
set_credit_link	network/garnet-fixed-pipeline/OutputUnit_d.C	/^void OutputUnit_d::set_credit_link(CreditLink_d *credit_link)$/;"	f	class:OutputUnit_d
set_delay	network/garnet-fixed-pipeline/flit_d.h	/^	inline void set_delay(int delay)$/;"	f	class:flit_d
set_enqueue_time	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline void set_enqueue_time(int invc, Time time)$/;"	f	class:InputUnit_d
set_enqueue_time	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	inline void set_enqueue_time(Time time)$/;"	f	class:VirtualChannel_d
set_error_t	simics/simics_api_dummy.c	/^typedef int set_error_t;$/;"	t	file:
set_in_link	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline void set_in_link(NetworkLink_d *link)$/;"	f	class:InputUnit_d
set_inport	network/garnet-fixed-pipeline/OutVcState_d.h	/^	void set_inport(int port) {m_in_port = port; }$/;"	f	class:OutVcState_d
set_invc	network/garnet-fixed-pipeline/OutVcState_d.h	/^	void set_invc(int vc) {m_in_vc = vc; }$/;"	f	class:OutVcState_d
set_out_link	network/garnet-fixed-pipeline/OutputUnit_d.C	/^void OutputUnit_d::set_out_link(NetworkLink_d *link)$/;"	f	class:OutputUnit_d
set_outport	network/garnet-fixed-pipeline/VirtualChannel_d.C	/^void VirtualChannel_d::set_outport(int outport)$/;"	f	class:VirtualChannel_d
set_outport	network/garnet-fixed-pipeline/flit_d.h	/^	void set_outport(int port) { m_outport = port; }$/;"	f	class:flit_d
set_state	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	inline void set_state(VC_state_type m_state)$/;"	f	class:VirtualChannel_d
set_time	network/garnet-fixed-pipeline/flit_d.h	/^	inline void set_time(Time time)$/;"	f	class:flit_d
set_time	network/garnet-flexible-pipeline/flit.C	/^void flit::set_time(Time time)$/;"	f	class:flit
set_vc	network/garnet-fixed-pipeline/flit_d.h	/^	inline void set_vc(int vc)$/;"	f	class:flit_d
set_vc	network/garnet-flexible-pipeline/flit.C	/^void flit::set_vc(int vc)$/;"	f	class:flit
set_vc_state	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline void set_vc_state(VC_state_type state, int vc)$/;"	f	class:InputUnit_d
set_vc_state	network/garnet-fixed-pipeline/OutputUnit_d.h	/^	inline void set_vc_state(VC_state_type state, int vc)$/;"	f	class:OutputUnit_d
setmemfetch	generated/MI_example/CacheMsg.h	/^  void setmemfetch(const uint64& local_memfetch) { m_memfetch = local_memfetch; }$/;"	f	class:CacheMsg
setprofiled	generated/MI_example/CacheMsg.h	/^  void setprofiled(const bool& local_profiled) { m_profiled = local_profiled; }$/;"	f	class:CacheMsg
share_rw	network/orion/SIM_array.h	/^	int share_rw;$/;"	m	struct:__anon9
share_rw	network/orion/SIM_array_internal.h	/^	int share_rw;$/;"	m	struct:__anon15
share_rw	network/orion/SIM_array_internal.h	/^	int share_rw;$/;"	m	struct:__anon16
share_rw	network/orion_old/power_array.h	/^	int share_rw;$/;"	m	struct:__anon69
share_rw	network/orion_old/power_array.h	/^	int share_rw;$/;"	m	struct:__anon70
share_rw	network/orion_old/power_array.h	/^	int share_rw;$/;"	m	struct:__anon80
shiftLowOrderBits	common/Address.h	/^physical_address_t Address::shiftLowOrderBits(int number) const $/;"	f	class:Address
short	generated/MI_example/attrparse.c	189;"	d	file:
shortest_path	network/simple/Topology.C	/^static Matrix shortest_path(const Matrix& weights, Matrix& latencies, Matrix& inter_switches)$/;"	f	file:
shortest_path_to_node	network/simple/Topology.C	/^static NetDest shortest_path_to_node(SwitchID src, SwitchID next,$/;"	f	file:
sim_exception_t	simics/simics_api_dummy.c	/^typedef int sim_exception_t;$/;"	t	file:
simtime_t	common/Global.h	/^typedef integer_t simtime_t;$/;"	t
size	common/Histogram.h	/^  int64 size() const { return m_count; }$/;"	f	class:Histogram
size	network/garnet-fixed-pipeline/flitBuffer_d.h	/^	int size, max_size;$/;"	m	class:flitBuffer_d
size	network/garnet-flexible-pipeline/flitBuffer.h	/^	int size, max_size;$/;"	m	class:flitBuffer
size	simics/depreceated/SimicsProcessor.h	/^    int                size;$/;"	m	struct:SimicsProcessor::CacheRequest
size	system/StoreCache.C	/^int StoreCache::size() const { return m_internal_cache_ptr->size(); }$/;"	f	class:StoreCache
skipL1CallbackQueueEmpty	gpusim_ruby/gpusim_ruby.C	/^bool gpusim_ruby::skipL1CallbackQueueEmpty(unsigned core_id)$/;"	f	class:gpusim_ruby
skipL1CallbackQueueEmpty	interfaces/GpusimInterface.h	/^  bool skipL1CallbackQueueEmpty(unsigned core_id) {$/;"	f	class:GpusimInterface
skipL1CallbackQueuePop	gpusim_ruby/gpusim_ruby.C	/^void gpusim_ruby::skipL1CallbackQueuePop(unsigned core_id)$/;"	f	class:gpusim_ruby
skipL1CallbackQueuePop	interfaces/GpusimInterface.h	/^  void skipL1CallbackQueuePop(unsigned core_id) {$/;"	f	class:GpusimInterface
skipL1CallbackQueueTop	gpusim_ruby/gpusim_ruby.C	/^void gpusim_ruby::skipL1CallbackQueueTop(unsigned core_id, unsigned long long& addr, void** memfetch)$/;"	f	class:gpusim_ruby
skipL1CallbackQueueTop	interfaces/GpusimInterface.h	/^  void skipL1CallbackQueueTop(unsigned core_id, unsigned long long& addr, void** memfetch) {$/;"	f	class:GpusimInterface
skipL1_callback_queue	interfaces/GpusimInterface.h	/^  typedef std::list<skipL1_request_t> skipL1_callback_queue;$/;"	t	class:GpusimInterface
skipL1_request_t	interfaces/GpusimInterface.h	/^  typedef std::pair<unsigned long long, void*> skipL1_request_t;$/;"	t	class:GpusimInterface
smallestElement	common/BigSet.C	/^NodeID Set::smallestElement() const$/;"	f	class:Set
smallestElement	common/NetDest.C	/^MachineID NetDest::smallestElement(MachineType machine) const$/;"	f	class:NetDest
smallestElement	common/NetDest.C	/^NodeID NetDest::smallestElement() const$/;"	f	class:NetDest
smallestElement	common/OptBigSet.C	/^NodeID Set::smallestElement() const$/;"	f	class:Set
smallestElement	common/Set.C	/^NodeID Set::smallestElement() const$/;"	f	class:Set
src_delay	network/garnet-fixed-pipeline/flit_d.h	/^	int src_delay;$/;"	m	class:flit_d
staleDataRequest	interfaces/OpalInterface.C	/^int OpalInterface::staleDataRequest( int cpuNumber, pa_t physicalAddr,$/;"	f	class:OpalInterface
staleDataRequest	interfaces/mf_api.h	/^  int (*staleDataRequest)( int cpuNumber, pa_t physicalAddr,$/;"	m	struct:mf_ruby_api
startTrace	recorder/Tracer.C	/^void Tracer::startTrace(string filename)$/;"	f	class:Tracer
startTransaction	profiler/Profiler.C	/^void Profiler::startTransaction(int cpu)$/;"	f	class:Profiler
status	simics/depreceated/SimicsProcessor.h	/^    CacheRequestStatus status;$/;"	m	struct:SimicsProcessor::CacheRequest
std	common/Address.h	/^namespace std {$/;"	n
std	generated/MI_example/attrlex.c	/^using namespace std;$/;"	v
std	generated/MI_example/attrparse.c	/^using namespace std;$/;"	v
stg	network/orion/SIM_permu.h	/^	LIB_Type_max_uint stg[3];$/;"	m	struct:__anon40
stopTableUsageSample	profiler/Profiler.h	/^  void stopTableUsageSample(int num) { m_stopTableProfile.add(num); }$/;"	f	class:Profiler
stopTrace	recorder/Tracer.C	/^void Tracer::stopTrace()$/;"	f	class:Tracer
store	profiler/StoreTrace.C	/^void StoreTrace::store(NodeID node)$/;"	f	class:StoreTrace
storeBuffer	profiler/Profiler.h	/^  void storeBuffer(int size, int blocks) { m_store_buffer_size.add(size); m_store_buffer_blocks.add(blocks);}$/;"	f	class:Profiler
storeCompleted	tester/DeterministicDriver.C	/^void DeterministicDriver::storeCompleted(NodeID node, Address addr)$/;"	f	class:DeterministicDriver
str_hap_func_t	simics/simics_api_dummy.c	/^typedef int str_hap_func_t;$/;"	t	file:
string	network/simple/Network_Files/GarnetFileMaker.py	/^import sys, os, string, re, math$/;"	i
string	network/simple/Network_Files/NetworkFileMaker.py	/^import sys, os, string, re, math$/;"	i
string_to_AccessModeType	generated/MI_example/AccessModeType.C	/^AccessModeType string_to_AccessModeType(const string& str)$/;"	f
string_to_AccessPermission	generated/MI_example/AccessPermission.C	/^AccessPermission string_to_AccessPermission(const string& str)$/;"	f
string_to_AccessType	generated/MI_example/AccessType.C	/^AccessType string_to_AccessType(const string& str)$/;"	f
string_to_AllocationStrategy	generated/MI_example/AllocationStrategy.C	/^AllocationStrategy string_to_AllocationStrategy(const string& str)$/;"	f
string_to_CacheRequestStatus	simics/depreceated/SimicsProcessor.C	/^SimicsProcessor::CacheRequestStatus SimicsProcessor::string_to_CacheRequestStatus(const string& str) {$/;"	f	class:SimicsProcessor
string_to_CacheRequestType	generated/MI_example/CacheRequestType.C	/^CacheRequestType string_to_CacheRequestType(const string& str)$/;"	f
string_to_CoherenceRequestType	generated/MI_example/CoherenceRequestType.C	/^CoherenceRequestType string_to_CoherenceRequestType(const string& str)$/;"	f
string_to_CoherenceResponseType	generated/MI_example/CoherenceResponseType.C	/^CoherenceResponseType string_to_CoherenceResponseType(const string& str)$/;"	f
string_to_DetermGETXGeneratorStatus	generated/MI_example/DetermGETXGeneratorStatus.C	/^DetermGETXGeneratorStatus string_to_DetermGETXGeneratorStatus(const string& str)$/;"	f
string_to_DetermInvGeneratorStatus	generated/MI_example/DetermInvGeneratorStatus.C	/^DetermInvGeneratorStatus string_to_DetermInvGeneratorStatus(const string& str)$/;"	f
string_to_DetermSeriesGETSGeneratorStatus	generated/MI_example/DetermSeriesGETSGeneratorStatus.C	/^DetermSeriesGETSGeneratorStatus string_to_DetermSeriesGETSGeneratorStatus(const string& str)$/;"	f
string_to_Directory_Event	generated/MI_example/Directory_Event.C	/^Directory_Event string_to_Directory_Event(const string& str)$/;"	f
string_to_Directory_State	generated/MI_example/Directory_State.C	/^Directory_State string_to_Directory_State(const string& str)$/;"	f
string_to_GenericMachineType	generated/MI_example/GenericMachineType.C	/^GenericMachineType string_to_GenericMachineType(const string& str)$/;"	f
string_to_GenericRequestType	generated/MI_example/GenericRequestType.C	/^GenericRequestType string_to_GenericRequestType(const string& str)$/;"	f
string_to_L1Cache_Event	generated/MI_example/L1Cache_Event.C	/^L1Cache_Event string_to_L1Cache_Event(const string& str)$/;"	f
string_to_L1Cache_State	generated/MI_example/L1Cache_State.C	/^L1Cache_State string_to_L1Cache_State(const string& str)$/;"	f
string_to_LinkType	generated/MI_example/LinkType.C	/^LinkType string_to_LinkType(const string& str)$/;"	f
string_to_LockStatus	generated/MI_example/LockStatus.C	/^LockStatus string_to_LockStatus(const string& str)$/;"	f
string_to_MachineType	generated/MI_example/MachineType.C	/^MachineType string_to_MachineType(const string& str)$/;"	f
string_to_MaskPredictorIndex	generated/MI_example/MaskPredictorIndex.C	/^MaskPredictorIndex string_to_MaskPredictorIndex(const string& str)$/;"	f
string_to_MaskPredictorTraining	generated/MI_example/MaskPredictorTraining.C	/^MaskPredictorTraining string_to_MaskPredictorTraining(const string& str)$/;"	f
string_to_MaskPredictorType	generated/MI_example/MaskPredictorType.C	/^MaskPredictorType string_to_MaskPredictorType(const string& str)$/;"	f
string_to_MemoryRequestType	generated/MI_example/MemoryRequestType.C	/^MemoryRequestType string_to_MemoryRequestType(const string& str)$/;"	f
string_to_MemorySpaceType	generated/MI_example/MemorySpaceType.C	/^MemorySpaceType string_to_MemorySpaceType(const string& str)$/;"	f
string_to_MemoryTransactionResult	simics/depreceated/SimicsDriver.C	/^MemoryTransactionResult string_to_MemoryTransactionResult(const string& str) {$/;"	f
string_to_MessageSizeType	generated/MI_example/MessageSizeType.C	/^MessageSizeType string_to_MessageSizeType(const string& str)$/;"	f
string_to_PrefetchBit	generated/MI_example/PrefetchBit.C	/^PrefetchBit string_to_PrefetchBit(const string& str)$/;"	f
string_to_RequestGeneratorStatus	generated/MI_example/RequestGeneratorStatus.C	/^RequestGeneratorStatus string_to_RequestGeneratorStatus(const string& str)$/;"	f
string_to_SearchMechanism	generated/MI_example/SearchMechanism.C	/^SearchMechanism string_to_SearchMechanism(const string& str)$/;"	f
string_to_SequencerStatus	generated/MI_example/SequencerStatus.C	/^SequencerStatus string_to_SequencerStatus(const string& str)$/;"	f
string_to_SpecifiedGeneratorType	generated/MI_example/SpecifiedGeneratorType.C	/^SpecifiedGeneratorType string_to_SpecifiedGeneratorType(const string& str)$/;"	f
string_to_TesterStatus	generated/MI_example/TesterStatus.C	/^TesterStatus string_to_TesterStatus(const string& str)$/;"	f
string_to_TopologyType	generated/MI_example/TopologyType.C	/^TopologyType string_to_TopologyType(const string& str)$/;"	f
string_to_TransientRequestType	generated/MI_example/TransientRequestType.C	/^TransientRequestType string_to_TransientRequestType(const string& str)$/;"	f
string_to_TransitionResult	generated/MI_example/TransitionResult.C	/^TransitionResult string_to_TransitionResult(const string& str)$/;"	f
string_to_TriggerType	generated/MI_example/TriggerType.C	/^TriggerType string_to_TriggerType(const string& str)$/;"	f
success	simics/depreceated/SimicsProcessor.h	/^    bool               success;$/;"	m	struct:SimicsProcessor::CacheRequest
successorRequestPresent	system/PersistentArbiter.C	/^bool PersistentArbiter::successorRequestPresent(Address addr, NodeID id) {$/;"	f	class:PersistentArbiter
swPrefetchLatency	profiler/Profiler.C	/^void Profiler::swPrefetchLatency(Time t, CacheRequestType type, GenericMachineType respondingMach)$/;"	f	class:Profiler
sw_allocator	network/orion/SIM_router.h	/^	double sw_allocator;$/;"	m	struct:__anon46
sw_global_arbit_count	network/garnet-fixed-pipeline/Router_d.h	/^	double buf_read_count, buf_write_count, crossbar_count, vc_local_arbit_count, vc_global_arbit_count, sw_local_arbit_count, sw_global_arbit_count;$/;"	m	class:Router_d
sw_in_arb	network/orion/SIM_router.h	/^	SIM_arbiter_t sw_in_arb;$/;"	m	struct:__anon47
sw_in_arb	network/orion_old/power_router_init.h	/^	power_arbiter sw_in_arb;$/;"	m	struct:__anon89
sw_in_arb_ff_model	network/orion/SIM_router.h	/^	int sw_in_arb_ff_model;$/;"	m	struct:__anon48
sw_in_arb_ff_model	network/orion_old/power_router_init.h	/^	int sw_in_arb_ff_model;$/;"	m	struct:__anon90
sw_in_arb_model	network/orion/SIM_router.h	/^	int sw_in_arb_model;$/;"	m	struct:__anon48
sw_in_arb_model	network/orion_old/power_router_init.h	/^	int sw_in_arb_model;$/;"	m	struct:__anon90
sw_in_arb_queue_info	network/orion/SIM_router.h	/^	SIM_array_info_t sw_in_arb_queue_info;$/;"	m	struct:__anon48
sw_in_arb_queue_info	network/orion_old/power_router_init.h	/^	power_array_info sw_in_arb_queue_info;$/;"	m	struct:__anon90
sw_local_arbit_count	network/garnet-fixed-pipeline/Router_d.h	/^	double buf_read_count, buf_write_count, crossbar_count, vc_local_arbit_count, vc_global_arbit_count, sw_local_arbit_count, sw_global_arbit_count;$/;"	m	class:Router_d
sw_out_arb	network/orion/SIM_router.h	/^	SIM_arbiter_t sw_out_arb;$/;"	m	struct:__anon47
sw_out_arb	network/orion_old/power_router_init.h	/^	power_arbiter sw_out_arb;$/;"	m	struct:__anon89
sw_out_arb_ff_model	network/orion/SIM_router.h	/^	int sw_out_arb_ff_model;$/;"	m	struct:__anon48
sw_out_arb_ff_model	network/orion_old/power_router_init.h	/^	int sw_out_arb_ff_model;$/;"	m	struct:__anon90
sw_out_arb_model	network/orion/SIM_router.h	/^	int sw_out_arb_model;$/;"	m	struct:__anon48
sw_out_arb_model	network/orion_old/power_router_init.h	/^	int sw_out_arb_model;$/;"	m	struct:__anon90
sw_out_arb_queue_info	network/orion/SIM_router.h	/^	SIM_array_info_t sw_out_arb_queue_info;$/;"	m	struct:__anon48
sw_out_arb_queue_info	network/orion_old/power_router_init.h	/^	power_array_info sw_out_arb_queue_info;$/;"	m	struct:__anon90
swarb_req	network/garnet-fixed-pipeline/Router_d.C	/^void Router_d::swarb_req()$/;"	f	class:Router_d
sync_t	simics/simics_api_dummy.c	/^typedef int sync_t;$/;"	t	file:
sys	network/simple/Network_Files/GarnetFileMaker.py	/^import sys, os, string, re, math$/;"	i
sys	network/simple/Network_Files/NetworkFileMaker.py	/^import sys, os, string, re, math$/;"	i
tFaw	config/RubyConfig.h	/^  static int tFaw () { return TFAW; }$/;"	f	class:RubyConfig
tag_addr	network/orion/SIM_array.h	/^	LIB_Type_max_uint tag_addr;$/;"	m	struct:__anon10
tag_addr	network/orion/SIM_reg.h	/^	LIB_Type_max_uint tag_addr;$/;"	m	struct:__anon45
tag_addr	network/orion_old/power_array.h	/^	unsigned long int tag_addr;$/;"	m	struct:__anon77
tag_addr_width	network/orion/SIM_array.h	/^	u_int tag_addr_width;$/;"	m	struct:__anon9
tag_addr_width	network/orion_old/power_array.h	/^	unsigned tag_addr_width;$/;"	m	struct:__anon80
tag_amp	network/orion/SIM_array.h	/^	SIM_array_amp_t tag_amp;$/;"	m	struct:__anon8
tag_amp	network/orion_old/power_array.h	/^	power_amp tag_amp;$/;"	m	struct:__anon79
tag_amp_model	network/orion/SIM_array.h	/^	int tag_amp_model;$/;"	m	struct:__anon9
tag_amp_model	network/orion_old/power_array.h	/^	unsigned tag_amp_model;$/;"	m	struct:__anon80
tag_arr_height	network/orion/SIM_array.h	/^	double tag_arr_height;$/;"	m	struct:__anon9
tag_arr_height	network/orion_old/power_array.h	/^	double tag_arr_height;$/;"	m	struct:__anon80
tag_arr_width	network/orion/SIM_array.h	/^	double tag_arr_width;$/;"	m	struct:__anon9
tag_arr_width	network/orion_old/power_array.h	/^	double tag_arr_width;$/;"	m	struct:__anon80
tag_attach_mem	network/orion/SIM_array.h	/^	SIM_array_mem_t tag_attach_mem;$/;"	m	struct:__anon8
tag_attach_mem	network/orion_old/power_array.h	/^	power_mem tag_attach_mem;$/;"	m	struct:__anon79
tag_attach_mem_model	network/orion/SIM_array.h	/^	int tag_attach_mem_model;$/;"	m	struct:__anon9
tag_attach_mem_model	network/orion_old/power_array.h	/^	unsigned tag_attach_mem_model;$/;"	m	struct:__anon80
tag_bak	network/orion/SIM_array.h	/^	LIB_Type_max_uint tag_bak;$/;"	m	struct:__anon11
tag_bak	network/orion_old/power_array.h	/^	unsigned long int tag_bak;$/;"	m	struct:__anon78
tag_bitline	network/orion/SIM_array.h	/^	SIM_array_bitline_t tag_bitline;$/;"	m	struct:__anon8
tag_bitline	network/orion_old/power_array.h	/^	power_bitline tag_bitline;$/;"	m	struct:__anon79
tag_bitline_model	network/orion/SIM_array.h	/^	int tag_bitline_model;$/;"	m	struct:__anon9
tag_bitline_model	network/orion_old/power_array.h	/^	unsigned tag_bitline_model;$/;"	m	struct:__anon80
tag_bitline_pre	network/orion/SIM_array.h	/^	SIM_array_pre_t tag_bitline_pre;$/;"	m	struct:__anon8
tag_bitline_pre	network/orion_old/power_array.h	/^	power_arr_pre tag_bitline_pre;$/;"	m	struct:__anon79
tag_bitline_pre_model	network/orion/SIM_array.h	/^	int tag_bitline_pre_model;$/;"	m	struct:__anon9
tag_bitline_pre_model	network/orion_old/power_array.h	/^	int tag_bitline_pre_model;$/;"	m	struct:__anon80
tag_colsel_pre	network/orion/SIM_array.h	/^	SIM_array_pre_t tag_colsel_pre;$/;"	m	struct:__anon8
tag_colsel_pre	network/orion_old/power_array.h	/^	power_arr_pre tag_colsel_pre;$/;"	m	struct:__anon79
tag_colsel_pre_model	network/orion/SIM_array.h	/^	int tag_colsel_pre_model;$/;"	m	struct:__anon9
tag_colsel_pre_model	network/orion_old/power_array.h	/^	int tag_colsel_pre_model;$/;"	m	struct:__anon80
tag_end	network/orion/SIM_array.h	/^	u_int tag_end;$/;"	m	struct:__anon9
tag_end	network/orion_old/power_array.h	/^	unsigned tag_end;$/;"	m	struct:__anon80
tag_line	network/orion/SIM_array.h	/^	LIB_Type_max_uint tag_line;$/;"	m	struct:__anon10
tag_line	network/orion/SIM_reg.h	/^	LIB_Type_max_uint tag_line;$/;"	m	struct:__anon45
tag_line	network/orion_old/power_array.h	/^	unsigned long int tag_line;$/;"	m	struct:__anon77
tag_line_width	network/orion/SIM_array.h	/^	u_int tag_line_width;$/;"	m	struct:__anon9
tag_line_width	network/orion_old/power_array.h	/^	unsigned tag_line_width;$/;"	m	struct:__anon80
tag_mem	network/orion/SIM_array.h	/^	SIM_array_mem_t tag_mem;$/;"	m	struct:__anon8
tag_mem	network/orion_old/power_array.h	/^	power_mem tag_mem;$/;"	m	struct:__anon79
tag_mem_model	network/orion/SIM_array.h	/^	int tag_mem_model;$/;"	m	struct:__anon9
tag_mem_model	network/orion_old/power_array.h	/^	unsigned tag_mem_model;$/;"	m	struct:__anon80
tag_n_share_amp	network/orion/SIM_array.h	/^	u_int tag_n_share_amp;$/;"	m	struct:__anon9
tag_n_share_amp	network/orion_old/power_array.h	/^	unsigned tag_n_share_amp;$/;"	m	struct:__anon80
tag_ndbl	network/orion/SIM_array.h	/^	u_int tag_ndbl;$/;"	m	struct:__anon9
tag_ndbl	network/orion_old/power_array.h	/^	unsigned tag_ndbl;$/;"	m	struct:__anon80
tag_ndwl	network/orion/SIM_array.h	/^	u_int tag_ndwl;$/;"	m	struct:__anon9
tag_ndwl	network/orion_old/power_array.h	/^	unsigned tag_ndwl;$/;"	m	struct:__anon80
tag_nspd	network/orion/SIM_array.h	/^	u_int tag_nspd;$/;"	m	struct:__anon9
tag_nspd	network/orion_old/power_array.h	/^	unsigned tag_nspd;$/;"	m	struct:__anon80
tag_wordline	network/orion/SIM_array.h	/^	SIM_array_wordline_t tag_wordline;$/;"	m	struct:__anon8
tag_wordline	network/orion_old/power_array.h	/^	power_wordline tag_wordline;$/;"	m	struct:__anon79
tag_wordline_model	network/orion/SIM_array.h	/^	int tag_wordline_model;$/;"	m	struct:__anon9
tag_wordline_model	network/orion_old/power_array.h	/^	unsigned tag_wordline_model;$/;"	m	struct:__anon80
tbeQueryProfile	profiler/Profiler.C	/^void Profiler::tbeQueryProfile(bool available)$/;"	f	class:Profiler
testArray	tester/depreceated/XactAbortRequestGenerator.C	/^Vector<uint8> XactAbortRequestGenerator::testArray;$/;"	m	class:XactAbortRequestGenerator	file:
testArray	tester/depreceated/XactAbortRequestGenerator.h	/^  static Vector<uint8> testArray;$/;"	m	class:XactAbortRequestGenerator
testArray	tester/depreceated/XactRequestGenerator.h	/^  uint8 * testArray;$/;"	m	class:XactRequestGenerator
testCacheAccess	system/CacheMemory.h	/^bool CacheMemory<ENTRY>::testCacheAccess(const Address& address,$/;"	f	class:CacheMemory
tester_allocate	tester/test_framework.C	/^static void tester_allocate( void )$/;"	f	file:
tester_destroy	tester/test_framework.C	/^void tester_destroy()$/;"	f
tester_generate_values	tester/test_framework.C	/^static void tester_generate_values( void )$/;"	f	file:
tester_initialize	tester/test_framework.C	/^void tester_initialize(int argc, char **argv)$/;"	f
tester_main	tester/test_framework.C	/^void tester_main(int argc, char **argv)$/;"	f
tester_playback_trace	tester/test_framework.C	/^void tester_playback_trace()$/;"	f
tester_record_cache	tester/test_framework.C	/^void tester_record_cache()$/;"	f
tfalldata	network/orion/SIM_technology_v1.h	181;"	d
tfalldata	network/orion/SIM_technology_v2.h	433;"	d
tfalldata	network/orion/SIM_technology_v2.h	765;"	d
tfalldata	network/orion_old/SIM_power.h	241;"	d
tfalldata	network/orion_old/parm_technology.h	418;"	d
tfalltag	network/orion/SIM_technology_v1.h	182;"	d
tfalltag	network/orion/SIM_technology_v2.h	434;"	d
tfalltag	network/orion/SIM_technology_v2.h	766;"	d
tfalltag	network/orion_old/SIM_power.h	242;"	d
tfalltag	network/orion_old/parm_technology.h	419;"	d
thinkTime	tester/BarrierGenerator.C	/^int BarrierGenerator::thinkTime() $/;"	f	class:BarrierGenerator
thinkTime	tester/DetermGETXGenerator.C	/^int DetermGETXGenerator::thinkTime() const$/;"	f	class:DetermGETXGenerator
thinkTime	tester/DetermInvGenerator.C	/^int DetermInvGenerator::thinkTime() const$/;"	f	class:DetermInvGenerator
thinkTime	tester/DetermSeriesGETSGenerator.C	/^int DetermSeriesGETSGenerator::thinkTime() const$/;"	f	class:DetermSeriesGETSGenerator
thinkTime	tester/RequestGenerator.C	/^int RequestGenerator::thinkTime() const$/;"	f	class:RequestGenerator
thinkTime	tester/depreceated/XactAbortRequestGenerator.C	/^int XactAbortRequestGenerator::thinkTime() const$/;"	f	class:XactAbortRequestGenerator
thinkTime	tester/depreceated/XactRequestGenerator.C	/^int XactRequestGenerator::thinkTime() const$/;"	f	class:XactRequestGenerator
time_parameter_type	network/orion/SIM_array_internal.h	/^} time_parameter_type;$/;"	t	typeref:struct:__anon12
time_result_type	network/orion/SIM_array_internal.h	/^} time_result_type;$/;"	t	typeref:struct:__anon13
time_to_int	slicc_interface/RubySlicc_Util.h	/^extern inline Time time_to_int(Time time) $/;"	f
timing_interface	depreceated/module/ruby.c	/^  timing_model_interface_t *timing_interface;$/;"	m	struct:__anon1	file:
touch	system/LRUPolicy.h	/^void LRUPolicy::touch(Index set, Index index, Time time){$/;"	f	class:LRUPolicy
touch	system/PseudoLRUPolicy.h	/^void PseudoLRUPolicy::touch(Index set, Index index, Time time){$/;"	f	class:PseudoLRUPolicy
traceEnabled	recorder/Tracer.h	/^  bool traceEnabled() { return m_enabled; }$/;"	f	class:Tracer
traceRequest	recorder/Tracer.C	/^void Tracer::traceRequest(NodeID id, const Address& data_addr, const Address& pc_addr, CacheRequestType type, Time time)$/;"	f	class:Tracer
trace_filename	tester/test_framework.C	/^static string trace_filename;$/;"	v	file:
trans_type	network/orion/SIM_crossbar.h	/^	int trans_type;	\/* only used by transmission gate connection *\/$/;"	m	struct:__anon32
trans_type	network/orion/SIM_router.h	/^	int trans_type;	\/* only used by transmission gate connection *\/$/;"	m	struct:__anon48
trans_type	network/orion_old/power_crossbar.h	/^	unsigned trans_type;$/;"	m	struct:__anon87
trans_type	network/orion_old/power_router_init.h	/^	int trans_type;$/;"	m	struct:__anon90
transactionManager	tester/depreceated/XactAbortRequestGenerator.C	/^TransactionManager* XactAbortRequestGenerator::transactionManager() const$/;"	f	class:XactAbortRequestGenerator
transactionManager	tester/depreceated/XactRequestGenerator.C	/^TransactionManager* XactRequestGenerator::transactionManager() const$/;"	f	class:XactRequestGenerator
translateASI	simics/depreceated/SimicsProcessor.C	/^int SimicsProcessor::translateASI(const memory_transaction_t* mem_trans) {$/;"	f	class:SimicsProcessor
triggerAllEvents	eventqueue/EventQueue.C	/^void EventQueue::triggerAllEvents()$/;"	f	class:EventQueue
triggerEvents	eventqueue/EventQueue.C	/^void EventQueue::triggerEvents(Time t) $/;"	f	class:EventQueue
triggerWakeup	common/Consumer.h	/^  void triggerWakeup() { Time time = g_eventQueue_ptr->getTime(); if (m_last_wakeup != time) { wakeup(); m_last_wakeup = time; }}$/;"	f	class:Consumer
tryCacheAccess	system/CacheMemory.h	/^bool CacheMemory<ENTRY>::tryCacheAccess(const Address& address,$/;"	f	class:CacheMemory
tryCacheAccess	system/PerfectCacheMemory.h	/^bool PerfectCacheMemory<ENTRY>::tryCacheAccess(const CacheMsg& msg, bool& block_stc, ENTRY*& entry)$/;"	f	class:PerfectCacheMemory
tryCacheAccess	system/Sequencer.C	/^bool Sequencer::tryCacheAccess(const Address& addr, CacheRequestType type,$/;"	f	class:Sequencer
trySubBlock	system/StoreBuffer.h	/^  bool trySubBlock(const SubBlock& sub_block) const { assert(isReady()); return m_store_cache.check(sub_block); }$/;"	f	class:StoreBuffer
tsensedata	network/orion/SIM_technology_v1.h	179;"	d
tsensedata	network/orion/SIM_technology_v2.h	431;"	d
tsensedata	network/orion/SIM_technology_v2.h	763;"	d
tsensedata	network/orion_old/SIM_power.h	239;"	d
tsensedata	network/orion_old/parm_technology.h	416;"	d
tsensetag	network/orion/SIM_technology_v1.h	180;"	d
tsensetag	network/orion/SIM_technology_v2.h	432;"	d
tsensetag	network/orion/SIM_technology_v2.h	764;"	d
tsensetag	network/orion_old/SIM_power.h	240;"	d
tsensetag	network/orion_old/parm_technology.h	417;"	d
type	network/orion/SIM_ALU.h	/^	u_int type;$/;"	m	struct:__anon4
type	simics/depreceated/SimicsProcessor.h	/^    CacheRequestType   type;$/;"	m	struct:SimicsProcessor::CacheRequest
type	system/MachineID.h	/^  MachineType type;  $/;"	m	struct:MachineID
type	system/PersistentArbiter.h	/^  AccessType type;$/;"	m	struct:ArbiterEntry
typeOfSmallest	system/NodePersistentTable.C	/^AccessType NodePersistentTable::typeOfSmallest(const Address& address) const$/;"	f	class:NodePersistentTable
typeOfSmallest	system/PersistentTable.C	/^AccessType PersistentTable::typeOfSmallest(const Address& address) const$/;"	f	class:PersistentTable
u	network/orion/SIM_permu.h	/^	} u;$/;"	m	struct:__anon42	typeref:union:__anon42::__anon43
u_writeDataToCache	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::u_writeDataToCache(const Address& addr)$/;"	f	class:L1Cache_Controller
uint	common/Global.h	/^typedef unsigned int uint;$/;"	t
uint32	common/Global.h	/^typedef unsigned int uint32;$/;"	t
uint64	common/Global.h	/^typedef unsigned long long uint64;$/;"	t
uint64	simics/simics_api_dummy.c	/^typedef int uint64;$/;"	t	file:
uint8	common/Global.h	/^typedef unsigned char uint8;$/;"	t
uinteger_t	common/Global.h	/^typedef unsigned long long uinteger_t;$/;"	t
unexpiredatomic	system/TCpredictor.C	/^void TCpredictorPCAdaptive::unexpiredatomic(IntPairSet pcsharers, IntPair writer) {$/;"	f	class:TCpredictorPCAdaptive
unexpiredwrite	system/TCpredictor.C	/^void TCpredictorPCAdaptive::unexpiredwrite(IntPairSet pcsharers, IntPair writer) {$/;"	f	class:TCpredictorPCAdaptive
unput	generated/MI_example/attrlex.c	208;"	d	file:
unset	system/BlockBloomFilter.C	/^void BlockBloomFilter::unset(const Address& addr)$/;"	f	class:BlockBloomFilter
unset	system/BulkBloomFilter.C	/^void BulkBloomFilter::unset(const Address& addr)$/;"	f	class:BulkBloomFilter
unset	system/GenericBloomFilter.C	/^void GenericBloomFilter::unset(const Address& addr)$/;"	f	class:GenericBloomFilter
unset	system/H3BloomFilter.C	/^void H3BloomFilter::unset(const Address& addr)$/;"	f	class:H3BloomFilter
unset	system/LSB_CountingBloomFilter.C	/^void LSB_CountingBloomFilter::unset(const Address& addr)$/;"	f	class:LSB_CountingBloomFilter
unset	system/MultiBitSelBloomFilter.C	/^void MultiBitSelBloomFilter::unset(const Address& addr)$/;"	f	class:MultiBitSelBloomFilter
unset	system/MultiGrainBloomFilter.C	/^void MultiGrainBloomFilter::unset(const Address& addr)$/;"	f	class:MultiGrainBloomFilter
unset	system/NonCountingBloomFilter.C	/^void NonCountingBloomFilter::unset(const Address& addr)$/;"	f	class:NonCountingBloomFilter
unset	system/TimerTable.C	/^void TimerTable::unset(const Address& address)$/;"	f	class:TimerTable
update	profiler/AccessTraceForAddress.C	/^void AccessTraceForAddress::update(CacheRequestType type, AccessModeType access_mode, NodeID cpu, bool sharing_miss)$/;"	f	class:AccessTraceForAddress
update	system/StoreCache.C	/^void StoreCache::update(SubBlock& block) const$/;"	f	class:StoreCache
updateNext	system/TimerTable.C	/^void TimerTable::updateNext() const$/;"	f	class:TimerTable
updatePredictionTime	system/TCpredictor.C	/^void TCpredictorPCSampler::updatePredictionTime(int pc, Time lifetime) {$/;"	f	class:TCpredictorPCSampler
updatePredictorFromLifetimeEnd	system/TCpredictor.C	/^void TCpredictorPCSampler::updatePredictorFromLifetimeEnd(int pc, Time lifetime) {$/;"	f	class:TCpredictorPCSampler
updateRoute	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline void updateRoute(int vc, int outport)$/;"	f	class:InputUnit_d
updateSubBlock	system/StoreBuffer.h	/^  void updateSubBlock(SubBlock& sub_block) const { m_store_cache.update(sub_block); }$/;"	f	class:StoreBuffer
update_credit	network/garnet-fixed-pipeline/InputUnit_d.h	/^	inline void update_credit(int in_vc, int credit)$/;"	f	class:InputUnit_d
update_credit	network/garnet-fixed-pipeline/VirtualChannel_d.h	/^	inline void update_credit(int credit)$/;"	f	class:VirtualChannel_d
update_incredit	network/garnet-fixed-pipeline/Router_d.C	/^void Router_d::update_incredit(int in_port, int in_vc, int credit)$/;"	f	class:Router_d
update_sw_winner	network/garnet-fixed-pipeline/Router_d.C	/^void Router_d::update_sw_winner(int inport, flit_d *t_flit)$/;"	f	class:Router_d
update_sw_winner	network/garnet-fixed-pipeline/Switch_d.h	/^	inline void update_sw_winner(int inport, flit_d *t_flit)$/;"	f	class:Switch_d
update_vc	network/garnet-fixed-pipeline/OutputUnit_d.C	/^void OutputUnit_d::update_vc(int vc, int in_port, int in_vc)$/;"	f	class:OutputUnit_d
usageInstructions	common/Debug.C	/^void Debug::usageInstructions(void)$/;"	f	class:Debug
usageInstructions	tester/test_framework.C	/^static void usageInstructions()$/;"	f	file:
use_bak	network/orion/SIM_array.h	/^	u_int use_bak[0];$/;"	m	struct:__anon11
use_bak	network/orion_old/power_array.h	/^	unsigned use_bak[0];$/;"	m	struct:__anon78
use_bit_width	network/orion/SIM_array.h	/^	u_int use_bit_width;$/;"	m	struct:__anon9
use_bit_width	network/orion_old/power_array.h	/^	unsigned use_bit_width;$/;"	m	struct:__anon80
usingGpusimDram	slicc_interface/AbstractChip.h	/^  bool usingGpusimDram() {$/;"	f	class:AbstractChip
v_allocateTBE	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::v_allocateTBE(const Address& addr)$/;"	f	class:L1Cache_Controller
va_list	simics/simics_api_dummy.c	/^typedef int va_list;$/;"	t	file:
val	tester/getopt.h	/^  int val;$/;"	m	struct:option
valid	system/PersistentArbiter.h	/^  bool valid;$/;"	m	struct:ArbiterEntry
validDebug	common/Debug.C	/^bool Debug::validDebug(int module, PriorityLevel priority)$/;"	f	class:Debug
validVirtualNetwork	network/garnet-fixed-pipeline/GarnetNetwork_d.h	/^  	bool validVirtualNetwork(int vnet) { return m_in_use[vnet]; }$/;"	f	class:GarnetNetwork_d
validVirtualNetwork	network/garnet-flexible-pipeline/GarnetNetwork.h	/^  	bool validVirtualNetwork(int vnet) { return m_in_use[vnet]; }$/;"	f	class:GarnetNetwork
validVirtualNetwork	network/simple/SimpleNetwork.h	/^  bool validVirtualNetwork(int vnet) { return m_in_use[vnet]; }$/;"	f	class:SimpleNetwork
valid_bak	network/orion/SIM_array.h	/^	u_int valid_bak;$/;"	m	struct:__anon11
valid_bak	network/orion_old/power_array.h	/^	unsigned valid_bak;$/;"	m	struct:__anon78
valid_bit_width	network/orion/SIM_array.h	/^	u_int valid_bit_width;$/;"	m	struct:__anon9
valid_bit_width	network/orion_old/power_array.h	/^	unsigned valid_bit_width;$/;"	m	struct:__anon80
vc_allocator	network/orion/SIM_router.h	/^	double vc_allocator;$/;"	m	struct:__anon46
vc_allocator_type	network/orion/SIM_router.h	/^	int vc_allocator_type;$/;"	m	struct:__anon48
vc_arbitrate	network/garnet-flexible-pipeline/Router.C	/^void Router::vc_arbitrate()$/;"	f	class:Router
vc_global_arbit_count	network/garnet-fixed-pipeline/Router_d.h	/^	double buf_read_count, buf_write_count, crossbar_count, vc_local_arbit_count, vc_global_arbit_count, sw_local_arbit_count, sw_global_arbit_count;$/;"	m	class:Router_d
vc_in_arb	network/orion/SIM_router.h	/^	SIM_arbiter_t vc_in_arb;$/;"	m	struct:__anon47
vc_in_arb	network/orion_old/power_router_init.h	/^	power_arbiter vc_in_arb;$/;"	m	struct:__anon89
vc_in_arb_ff_model	network/orion/SIM_router.h	/^	int vc_in_arb_ff_model;$/;"	m	struct:__anon48
vc_in_arb_ff_model	network/orion_old/power_router_init.h	/^	int vc_in_arb_ff_model;$/;"	m	struct:__anon90
vc_in_arb_model	network/orion/SIM_router.h	/^	int vc_in_arb_model;$/;"	m	struct:__anon48
vc_in_arb_model	network/orion_old/power_router_init.h	/^	int vc_in_arb_model;$/;"	m	struct:__anon90
vc_in_arb_queue_info	network/orion/SIM_router.h	/^	SIM_array_info_t vc_in_arb_queue_info;$/;"	m	struct:__anon48
vc_in_arb_queue_info	network/orion_old/power_router_init.h	/^	power_array_info vc_in_arb_queue_info;$/;"	m	struct:__anon90
vc_local_arbit_count	network/garnet-fixed-pipeline/Router_d.h	/^	double buf_read_count, buf_write_count, crossbar_count, vc_local_arbit_count, vc_global_arbit_count, sw_local_arbit_count, sw_global_arbit_count;$/;"	m	class:Router_d
vc_out_arb	network/orion/SIM_router.h	/^	SIM_arbiter_t vc_out_arb;$/;"	m	struct:__anon47
vc_out_arb	network/orion_old/power_router_init.h	/^	power_arbiter vc_out_arb;$/;"	m	struct:__anon89
vc_out_arb_ff_model	network/orion/SIM_router.h	/^	int vc_out_arb_ff_model;$/;"	m	struct:__anon48
vc_out_arb_ff_model	network/orion_old/power_router_init.h	/^	int vc_out_arb_ff_model;$/;"	m	struct:__anon90
vc_out_arb_model	network/orion/SIM_router.h	/^	int vc_out_arb_model;$/;"	m	struct:__anon48
vc_out_arb_model	network/orion_old/power_router_init.h	/^	int vc_out_arb_model;$/;"	m	struct:__anon90
vc_out_arb_queue_info	network/orion/SIM_router.h	/^	SIM_array_info_t vc_out_arb_queue_info;$/;"	m	struct:__anon48
vc_out_arb_queue_info	network/orion_old/power_router_init.h	/^	power_array_info vc_out_arb_queue_info;$/;"	m	struct:__anon90
vc_select_buf	network/orion/SIM_router.h	/^	SIM_array_t vc_select_buf;$/;"	m	struct:__anon47
vc_select_buf_info	network/orion/SIM_router.h	/^	SIM_array_info_t vc_select_buf_info;$/;"	m	struct:__anon48
vc_select_buf_type	network/orion/SIM_router.h	/^	int vc_select_buf_type;$/;"	m	struct:__anon48
vcarb_req	network/garnet-fixed-pipeline/Router_d.C	/^void Router_d::vcarb_req()$/;"	f	class:Router_d
vecIndex	common/NetDest.h	/^  int vecIndex(MachineID m) const {$/;"	f	class:NetDest
w_deallocateTBE	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::w_deallocateTBE(const Address& addr)$/;"	f	class:L1Cache_Controller
waitTime	tester/BarrierGenerator.C	/^int BarrierGenerator::waitTime() const$/;"	f	class:BarrierGenerator
waitTime	tester/DetermGETXGenerator.C	/^int DetermGETXGenerator::waitTime() const$/;"	f	class:DetermGETXGenerator
waitTime	tester/DetermInvGenerator.C	/^int DetermInvGenerator::waitTime() const$/;"	f	class:DetermInvGenerator
waitTime	tester/DetermSeriesGETSGenerator.C	/^int DetermSeriesGETSGenerator::waitTime() const$/;"	f	class:DetermSeriesGETSGenerator
waitTime	tester/RequestGenerator.C	/^int RequestGenerator::waitTime() const$/;"	f	class:RequestGenerator
waitTime	tester/depreceated/XactAbortRequestGenerator.C	/^int XactAbortRequestGenerator::waitTime() const$/;"	f	class:XactAbortRequestGenerator
waitTime	tester/depreceated/XactRequestGenerator.C	/^int XactRequestGenerator::waitTime() const$/;"	f	class:XactRequestGenerator
wakeup	eventqueue/EventQueue_tester.C	/^  void wakeup() { cout << "Wakeup#1: " << m_description << endl; }$/;"	f	class:TestConsumer1
wakeup	eventqueue/EventQueue_tester.C	/^  void wakeup() { cout << "Wakeup#2: " << m_description << endl; }$/;"	f	class:TestConsumer2
wakeup	generated/MI_example/Directory_Wakeup.C	/^void Directory_Controller::wakeup()$/;"	f	class:Directory_Controller
wakeup	generated/MI_example/L1Cache_Wakeup.C	/^void L1Cache_Controller::wakeup()$/;"	f	class:L1Cache_Controller
wakeup	network/garnet-fixed-pipeline/InputUnit_d.C	/^void InputUnit_d::wakeup()$/;"	f	class:InputUnit_d
wakeup	network/garnet-fixed-pipeline/NetworkInterface_d.C	/^void NetworkInterface_d::wakeup()$/;"	f	class:NetworkInterface_d
wakeup	network/garnet-fixed-pipeline/NetworkLink_d.C	/^void NetworkLink_d::wakeup()$/;"	f	class:NetworkLink_d
wakeup	network/garnet-fixed-pipeline/OutputUnit_d.C	/^void OutputUnit_d::wakeup()$/;"	f	class:OutputUnit_d
wakeup	network/garnet-fixed-pipeline/SWallocator_d.C	/^void SWallocator_d::wakeup()$/;"	f	class:SWallocator_d
wakeup	network/garnet-fixed-pipeline/Switch_d.C	/^void Switch_d::wakeup()$/;"	f	class:Switch_d
wakeup	network/garnet-fixed-pipeline/VCallocator_d.C	/^void VCallocator_d::wakeup()$/;"	f	class:VCallocator_d
wakeup	network/garnet-flexible-pipeline/NetworkInterface.C	/^void NetworkInterface::wakeup()$/;"	f	class:NetworkInterface
wakeup	network/garnet-flexible-pipeline/NetworkLink.C	/^void NetworkLink::wakeup()$/;"	f	class:NetworkLink
wakeup	network/garnet-flexible-pipeline/Router.C	/^void Router::wakeup()$/;"	f	class:Router
wakeup	network/garnet-flexible-pipeline/VCarbiter.C	/^void VCarbiter::wakeup()$/;"	f	class:VCarbiter
wakeup	network/simple/PerfectSwitch.C	/^void PerfectSwitch::wakeup()$/;"	f	class:PerfectSwitch
wakeup	network/simple/Throttle.C	/^void Throttle::wakeup()$/;"	f	class:Throttle
wakeup	profiler/LifetimeTrace.C	/^void LifetimeTrace::wakeup()$/;"	f	class:LifetimeTrace
wakeup	profiler/Profiler.C	/^void Profiler::wakeup()$/;"	f	class:Profiler
wakeup	system/GpusimDramInterface.C	/^void GpusimDramInterface::wakeup () {$/;"	f	class:GpusimDramInterface
wakeup	system/MemoryControl.C	/^void MemoryControl::wakeup () {$/;"	f	class:MemoryControl
wakeup	system/Sequencer.C	/^void Sequencer::wakeup() {$/;"	f	class:Sequencer
wakeup	system/StoreBuffer.C	/^void StoreBuffer::wakeup()$/;"	f	class:StoreBuffer
wakeup	system/TCpredictor.C	/^void TCpredictorContainer::wakeup()$/;"	f	class:TCpredictorContainer
wakeup	system/TCpredictor.C	/^void TCpredictorPCSampler::wakeup() {$/;"	f	class:TCpredictorPCSampler
wakeup	system/TCpredictor.h	/^    void wakeup() { }$/;"	f	class:TCpredictorAddrfixed
wakeup	system/TCpredictor.h	/^    void wakeup() { }$/;"	f	class:TCpredictorGlobal
wakeup	system/TCpredictor.h	/^    void wakeup() { }$/;"	f	class:TCpredictorPCAdaptive
wakeup	system/TCpredictor.h	/^    void wakeup() { }$/;"	f	class:TCpredictorPCfixed
wakeup	system/TCpredictor.h	/^    void wakeup() { }$/;"	f	class:TCpredictorPerL2
wakeup	tester/BarrierGenerator.C	/^void BarrierGenerator::wakeup()$/;"	f	class:BarrierGenerator
wakeup	tester/DetermGETXGenerator.C	/^void DetermGETXGenerator::wakeup()$/;"	f	class:DetermGETXGenerator
wakeup	tester/DetermInvGenerator.C	/^void DetermInvGenerator::wakeup()$/;"	f	class:DetermInvGenerator
wakeup	tester/DetermSeriesGETSGenerator.C	/^void DetermSeriesGETSGenerator::wakeup()$/;"	f	class:DetermSeriesGETSGenerator
wakeup	tester/DeterministicDriver.C	/^void DeterministicDriver::wakeup()$/;"	f	class:DeterministicDriver
wakeup	tester/RaceyDriver.C	/^void RaceyDriver::wakeup()$/;"	f	class:RaceyDriver
wakeup	tester/RequestGenerator.C	/^void RequestGenerator::wakeup()$/;"	f	class:RequestGenerator
wakeup	tester/SyntheticDriver.C	/^void SyntheticDriver::wakeup()$/;"	f	class:SyntheticDriver
wakeup	tester/Tester.C	/^void Tester::wakeup()$/;"	f	class:Tester
wakeup	tester/depreceated/XactAbortRequestGenerator.C	/^void XactAbortRequestGenerator::wakeup()$/;"	f	class:XactAbortRequestGenerator
wakeup	tester/depreceated/XactRequestGenerator.C	/^void XactRequestGenerator::wakeup()$/;"	f	class:XactRequestGenerator
watchAddress	profiler/Profiler.C	/^bool Profiler::watchAddress(Address addr){$/;"	f	class:Profiler
watchpointsFalsePositiveTrigger	profiler/Profiler.C	/^void Profiler::watchpointsFalsePositiveTrigger()$/;"	f	class:Profiler
watchpointsTrueTrigger	profiler/Profiler.C	/^void Profiler::watchpointsTrueTrigger()$/;"	f	class:Profiler
width	network/orion/SIM_misc.h	/^	u_int width;$/;"	m	struct:__anon34
win	network/orion/SIM_permu.h	/^	LIB_Type_max_uint win[6];$/;"	m	struct:__anon41
woin	network/orion/SIM_permu.h	/^	LIB_Type_max_uint woin;$/;"	m	struct:__anon41
word	common/Global.h	/^typedef int word;               \/\/ one word of a cache line$/;"	t
wordline_delay_data	network/orion/SIM_array_internal.h	/^	double wordline_delay_data,wordline_delay_tag;$/;"	m	struct:__anon13
wordline_delay_tag	network/orion/SIM_array_internal.h	/^	double wordline_delay_data,wordline_delay_tag;$/;"	m	struct:__anon13
writeBit	system/BlockBloomFilter.C	/^void BlockBloomFilter::writeBit(const int index, const int value) {$/;"	f	class:BlockBloomFilter
writeBit	system/BulkBloomFilter.C	/^void BulkBloomFilter::writeBit(const int index, const int value) {$/;"	f	class:BulkBloomFilter
writeBit	system/GenericBloomFilter.C	/^void GenericBloomFilter::writeBit(const int index, const int value) {$/;"	f	class:GenericBloomFilter
writeBit	system/H3BloomFilter.C	/^void H3BloomFilter::writeBit(const int index, const int value) {$/;"	f	class:H3BloomFilter
writeBit	system/LSB_CountingBloomFilter.C	/^void LSB_CountingBloomFilter::writeBit(const int index, const int value) {$/;"	f	class:LSB_CountingBloomFilter
writeBit	system/MultiBitSelBloomFilter.C	/^void MultiBitSelBloomFilter::writeBit(const int index, const int value) {$/;"	f	class:MultiBitSelBloomFilter
writeBit	system/MultiGrainBloomFilter.C	/^void MultiGrainBloomFilter::writeBit(const int index, const int value) {$/;"	f	class:MultiGrainBloomFilter
writeBit	system/NonCountingBloomFilter.C	/^void NonCountingBloomFilter::writeBit(const int index, const int value) {$/;"	f	class:NonCountingBloomFilter
writeByte	common/SubBlock.h	/^  void writeByte(uint8 data) { setByte(0, data); }$/;"	f	class:SubBlock
writeCallback	system/Sequencer.C	/^void Sequencer::writeCallback(const Address& address) {$/;"	f	class:Sequencer
writeCallback	system/Sequencer.C	/^void Sequencer::writeCallback(const Address& address, DataBlock& data) {$/;"	f	class:Sequencer
writeCallback	system/Sequencer.C	/^void Sequencer::writeCallback(const Address& address, DataBlock& data, GenericMachineType respondingMach, PrefetchBit pf, int thread) {$/;"	f	class:Sequencer
writeCallback	system/Sequencer.C	/^void Sequencer::writeCallback(const Address& address, DataBlock& data, GenericMachineType respondingMach, int thread) {$/;"	f	class:Sequencer
writeCallback	system/Sequencer.C	/^void Sequencer::writeCallback(const Address& address, uint64 memfetch) {$/;"	f	class:Sequencer
writeConflictCallback	system/Sequencer.C	/^void Sequencer::writeConflictCallback(const Address& address) {$/;"	f	class:Sequencer
writeConflictCallback	system/Sequencer.C	/^void Sequencer::writeConflictCallback(const Address& address, GenericMachineType respondingMach, int thread) {$/;"	f	class:Sequencer
writePhysicalMemory	common/Driver.h	/^  virtual void writePhysicalMemory( int procID, physical_address_t address,$/;"	f	class:Driver
writePhysicalMemory	interfaces/GpusimInterface.C	/^void GpusimInterface::writePhysicalMemory( int procID,$/;"	f	class:GpusimInterface
writePhysicalMemory	interfaces/OpalInterface.C	/^void OpalInterface::writePhysicalMemory( int procID, $/;"	f	class:OpalInterface
writePhysicalMemory	simics/depreceated/SimicsDriver.C	/^void SimicsDriver::writePhysicalMemory( int procID, $/;"	f	class:SimicsDriver
writePhysicalMemory	tester/SyntheticDriver.C	/^void  SyntheticDriver::writePhysicalMemory( int procID, physical_address_t address,$/;"	f	class:SyntheticDriver
write_back_flag	network/orion/SIM_array.h	/^	int write_back_flag;$/;"	m	struct:__anon11
write_back_flag	network/orion_old/power_array.h	/^	int write_back_flag;$/;"	m	struct:__anon78
write_flag	network/orion/SIM_array.h	/^	int write_flag;$/;"	m	struct:__anon11
write_flag	network/orion_old/power_array.h	/^	int write_flag;$/;"	m	struct:__anon78
write_policy	network/orion/SIM_array.h	/^	int write_policy;	\/* 1 if write back (have dirty bits), 0 otherwise *\/$/;"	m	struct:__anon9
write_policy	network/orion_old/power_array.h	/^	int write_policy;$/;"	m	struct:__anon80
write_ports	network/orion/SIM_array.h	/^	u_int write_ports;$/;"	m	struct:__anon9
write_ports	network/orion_old/power_array.h	/^	unsigned write_ports;$/;"	m	struct:__anon80
x_copyDataFromCacheToTBE	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::x_copyDataFromCacheToTBE(const Address& addr)$/;"	f	class:L1Cache_Controller
xb_in_seg	network/orion/SIM_router.h	/^	u_int xb_in_seg;	\/* only used by segmented crossbar *\/$/;"	m	struct:__anon48
xb_out_seg	network/orion/SIM_router.h	/^	u_int xb_out_seg;	\/* only used by segmented crossbar *\/$/;"	m	struct:__anon48
yy_accept	generated/MI_example/attrlex.c	/^static yyconst flex_int16_t yy_accept[38] =$/;"	v	file:
yy_at_bol	generated/MI_example/attrlex.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_base	generated/MI_example/attrlex.c	/^static yyconst flex_int16_t yy_base[43] =$/;"	v	file:
yy_bs_column	generated/MI_example/attrlex.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	generated/MI_example/attrlex.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	generated/MI_example/attrlex.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	generated/MI_example/attrlex.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_stack	generated/MI_example/attrlex.c	/^static YY_BUFFER_STATE * yy_buffer_stack = 0; \/**< Stack as an array. *\/$/;"	v	file:
yy_buffer_stack_max	generated/MI_example/attrlex.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack_top	generated/MI_example/attrlex.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_state	generated/MI_example/attrlex.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	generated/MI_example/attrlex.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_c_buf_p	generated/MI_example/attrlex.c	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_ch_buf	generated/MI_example/attrlex.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_chk	generated/MI_example/attrlex.c	/^static yyconst flex_int16_t yy_chk[90] =$/;"	v	file:
yy_create_buffer	generated/MI_example/attrlex.c	9;"	d	file:
yy_def	generated/MI_example/attrlex.c	/^static yyconst flex_int16_t yy_def[43] =$/;"	v	file:
yy_delete_buffer	generated/MI_example/attrlex.c	10;"	d	file:
yy_did_buffer_switch_on_eof	generated/MI_example/attrlex.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	generated/MI_example/attrlex.c	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_fatal_error	generated/MI_example/attrlex.c	/^static void yy_fatal_error (yyconst char* msg )$/;"	f	file:
yy_fill_buffer	generated/MI_example/attrlex.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_flex_debug	generated/MI_example/attrlex.c	11;"	d	file:
yy_flex_strlen	generated/MI_example/attrlex.c	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:
yy_flex_strncpy	generated/MI_example/attrlex.c	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:
yy_flush_buffer	generated/MI_example/attrlex.c	13;"	d	file:
yy_get_next_buffer	generated/MI_example/attrlex.c	/^static int yy_get_next_buffer (void)$/;"	f	file:
yy_get_previous_state	generated/MI_example/attrlex.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:
yy_hold_char	generated/MI_example/attrlex.c	/^static char yy_hold_char;$/;"	v	file:
yy_init	generated/MI_example/attrlex.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init_buffer	generated/MI_example/attrlex.c	12;"	d	file:
yy_init_globals	generated/MI_example/attrlex.c	/^static int yy_init_globals (void)$/;"	f	file:
yy_input_file	generated/MI_example/attrlex.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	generated/MI_example/attrlex.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	generated/MI_example/attrlex.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_last_accepting_cpos	generated/MI_example/attrlex.c	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_state	generated/MI_example/attrlex.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_load_buffer_state	generated/MI_example/attrlex.c	14;"	d	file:
yy_meta	generated/MI_example/attrlex.c	/^static yyconst flex_int32_t yy_meta[19] =$/;"	v	file:
yy_n_chars	generated/MI_example/attrlex.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	generated/MI_example/attrlex.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	generated/MI_example/attrlex.c	337;"	d	file:
yy_nxt	generated/MI_example/attrlex.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	generated/MI_example/attrlex.c	/^static yyconst flex_int16_t yy_nxt[90] =$/;"	v	file:
yy_reduce_print	generated/MI_example/attrparse.c	/^yy_reduce_print (YYSTYPE *yyvsp, int yyrule)$/;"	f	file:
yy_set_bol	generated/MI_example/attrlex.c	349;"	d	file:
yy_set_interactive	generated/MI_example/attrlex.c	339;"	d	file:
yy_size_t	generated/MI_example/attrlex.c	/^typedef size_t yy_size_t;$/;"	t	file:
yy_stack_print	generated/MI_example/attrparse.c	/^yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)$/;"	f	file:
yy_start	generated/MI_example/attrlex.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_state_type	generated/MI_example/attrlex.c	/^typedef int yy_state_type;$/;"	t	file:
yy_switch_to_buffer	generated/MI_example/attrlex.c	15;"	d	file:
yy_symbol_print	generated/MI_example/attrparse.c	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_value_print	generated/MI_example/attrparse.c	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_trans_info	generated/MI_example/attrlex.c	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	generated/MI_example/attrlex.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:
yy_verify	generated/MI_example/attrlex.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yyalloc	generated/MI_example/attrlex.c	24;"	d	file:
yyalloc	generated/MI_example/attrparse.c	/^union yyalloc$/;"	u	file:
yychar	generated/MI_example/attrparse.c	/^int yychar;$/;"	v
yychar	generated/MI_example/attrparse.c	71;"	d	file:
yycheck	generated/MI_example/attrparse.c	/^static const yytype_uint8 yycheck[] =$/;"	v	file:
yyclearin	generated/MI_example/attrparse.c	564;"	d	file:
yyconst	generated/MI_example/attrlex.c	126;"	d	file:
yyconst	generated/MI_example/attrlex.c	128;"	d	file:
yydebug	generated/MI_example/attrparse.c	/^int yydebug;$/;"	v
yydebug	generated/MI_example/attrparse.c	72;"	d	file:
yydefact	generated/MI_example/attrparse.c	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefgoto	generated/MI_example/attrparse.c	/^static const yytype_int8 yydefgoto[] =$/;"	v	file:
yydestruct	generated/MI_example/attrparse.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:
yyerrok	generated/MI_example/attrparse.c	563;"	d	file:
yyerror	generated/MI_example/attrparse.c	69;"	d	file:
yyfree	generated/MI_example/attrlex.c	26;"	d	file:
yyin	generated/MI_example/attrlex.c	16;"	d	file:
yyinput	generated/MI_example/attrlex.c	/^    static int yyinput (void)$/;"	f	file:
yyleng	generated/MI_example/attrlex.c	17;"	d	file:
yyless	generated/MI_example/attrlex.c	1817;"	d	file:
yyless	generated/MI_example/attrlex.c	1818;"	d	file:
yyless	generated/MI_example/attrlex.c	195;"	d	file:
yylex	generated/MI_example/attrlex.c	18;"	d	file:
yylex	generated/MI_example/attrparse.c	68;"	d	file:
yylineno	generated/MI_example/attrlex.c	19;"	d	file:
yylval	generated/MI_example/attrparse.c	/^YYSTYPE yylval;$/;"	v
yylval	generated/MI_example/attrparse.c	70;"	d	file:
yymore	generated/MI_example/attrlex.c	503;"	d	file:
yynerrs	generated/MI_example/attrparse.c	/^int yynerrs;$/;"	v
yynerrs	generated/MI_example/attrparse.c	73;"	d	file:
yyout	generated/MI_example/attrlex.c	20;"	d	file:
yypact	generated/MI_example/attrparse.c	/^static const yytype_int8 yypact[] =$/;"	v	file:
yyparse	generated/MI_example/attrparse.c	/^yyparse (void *YYPARSE_PARAM)$/;"	f
yyparse	generated/MI_example/attrparse.c	67;"	d	file:
yypgoto	generated/MI_example/attrparse.c	/^static const yytype_int8 yypgoto[] =$/;"	v	file:
yyprhs	generated/MI_example/attrparse.c	/^static const yytype_uint8 yyprhs[] =$/;"	v	file:
yyr1	generated/MI_example/attrparse.c	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr2	generated/MI_example/attrparse.c	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyrealloc	generated/MI_example/attrlex.c	25;"	d	file:
yyrestart	generated/MI_example/attrlex.c	21;"	d	file:
yyrhs	generated/MI_example/attrparse.c	/^static const yytype_int8 yyrhs[] =$/;"	v	file:
yyrline	generated/MI_example/attrparse.c	/^static const yytype_uint8 yyrline[] =$/;"	v	file:
yyss_alloc	generated/MI_example/attrparse.c	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:
yystos	generated/MI_example/attrparse.c	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystpcpy	generated/MI_example/attrparse.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	generated/MI_example/attrparse.c	862;"	d	file:
yystrlen	generated/MI_example/attrparse.c	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	generated/MI_example/attrparse.c	839;"	d	file:
yystype	generated/MI_example/attrparse.c	177;"	d	file:
yystype	generated/MI_example/attrparse.h	67;"	d
yysyntax_error	generated/MI_example/attrparse.c	/^yysyntax_error (char *yyresult, int yystate, int yychar)$/;"	f	file:
yytable	generated/MI_example/attrparse.c	/^static const yytype_uint8 yytable[] =$/;"	v	file:
yyterminate	generated/MI_example/attrlex.c	752;"	d	file:
yytext	generated/MI_example/attrlex.c	22;"	d	file:
yytext_ptr	generated/MI_example/attrlex.c	377;"	d	file:
yytname	generated/MI_example/attrparse.c	/^static const char *const yytname[] =$/;"	v	file:
yytnamerr	generated/MI_example/attrparse.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytokentype	generated/MI_example/attrparse.c	/^   enum yytokentype {$/;"	g	file:
yytokentype	generated/MI_example/attrparse.h	/^   enum yytokentype {$/;"	g
yytoknum	generated/MI_example/attrparse.c	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytranslate	generated/MI_example/attrparse.c	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytype_int16	generated/MI_example/attrparse.c	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	generated/MI_example/attrparse.c	/^typedef short int yytype_int16;$/;"	t	file:
yytype_int8	generated/MI_example/attrparse.c	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	generated/MI_example/attrparse.c	/^typedef short int yytype_int8;$/;"	t	file:
yytype_int8	generated/MI_example/attrparse.c	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_uint16	generated/MI_example/attrparse.c	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	generated/MI_example/attrparse.c	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_uint8	generated/MI_example/attrparse.c	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	generated/MI_example/attrparse.c	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yyunput	generated/MI_example/attrlex.c	/^    static void yyunput (int c, register char * yy_bp )$/;"	f	file:
yyvs_alloc	generated/MI_example/attrparse.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:
yywrap	generated/MI_example/attrlex.c	23;"	d	file:
z_stall	generated/MI_example/L1Cache_Controller.C	/^void L1Cache_Controller::z_stall(const Address& addr)$/;"	f	class:L1Cache_Controller
zero_time	slicc_interface/RubySlicc_Util.h	/^extern inline Time zero_time() $/;"	f
zin	network/orion/SIM_permu.h	/^	LIB_Type_max_uint zin[6];$/;"	m	struct:__anon41
zoin	network/orion/SIM_permu.h	/^	LIB_Type_max_uint zoin;$/;"	m	struct:__anon41
~AbstractBloomFilter	system/AbstractBloomFilter.h	/^  virtual ~AbstractBloomFilter() {}; $/;"	f	class:AbstractBloomFilter
~AbstractCacheEntry	slicc_interface/AbstractCacheEntry.C	/^AbstractCacheEntry::~AbstractCacheEntry() {$/;"	f	class:AbstractCacheEntry
~AbstractChip	slicc_interface/AbstractChip.C	/^AbstractChip::~AbstractChip() {$/;"	f	class:AbstractChip
~AbstractMemOrCache	system/AbstractMemOrCache.h	/^  virtual ~AbstractMemOrCache() {};$/;"	f	class:AbstractMemOrCache
~AbstractReplacementPolicy	system/AbstractReplacementPolicy.h	/^AbstractReplacementPolicy::~AbstractReplacementPolicy()$/;"	f	class:AbstractReplacementPolicy
~AccessTraceForAddress	profiler/AccessTraceForAddress.C	/^AccessTraceForAddress::~AccessTraceForAddress()$/;"	f	class:AccessTraceForAddress
~AddressProfiler	profiler/AddressProfiler.C	/^AddressProfiler::~AddressProfiler()$/;"	f	class:AddressProfiler
~BarrierGenerator	tester/BarrierGenerator.C	/^BarrierGenerator::~BarrierGenerator()$/;"	f	class:BarrierGenerator
~BlockBloomFilter	system/BlockBloomFilter.C	/^BlockBloomFilter::~BlockBloomFilter(){$/;"	f	class:BlockBloomFilter
~BulkBloomFilter	system/BulkBloomFilter.C	/^BulkBloomFilter::~BulkBloomFilter(){$/;"	f	class:BulkBloomFilter
~CacheMemory	system/CacheMemory.h	/^CacheMemory<ENTRY>::~CacheMemory()$/;"	f	class:CacheMemory
~CacheMsg	generated/MI_example/CacheMsg.h	/^  ~CacheMsg() { };$/;"	f	class:CacheMsg
~CacheProfiler	profiler/CacheProfiler.C	/^CacheProfiler::~CacheProfiler()$/;"	f	class:CacheProfiler
~CacheRecorder	recorder/CacheRecorder.C	/^CacheRecorder::~CacheRecorder()$/;"	f	class:CacheRecorder
~CheckTable	tester/CheckTable.C	/^CheckTable::~CheckTable()$/;"	f	class:CheckTable
~Chip	generated/MI_example/Chip.C	/^Chip::~Chip()$/;"	f	class:Chip
~Consumer	common/Consumer.h	/^  virtual ~Consumer() { }$/;"	f	class:Consumer
~ContiguousAddressTranslator	simics/depreceated/ContiguousAddressTranslator.C	/^ContiguousAddressTranslator::~ContiguousAddressTranslator() {$/;"	f	class:ContiguousAddressTranslator
~DataBlock	common/DataBlock.C	/^DataBlock::~DataBlock()$/;"	f	class:DataBlock
~Debug	common/Debug.C	/^Debug::~Debug()$/;"	f	class:Debug
~DetermGETXGenerator	tester/DetermGETXGenerator.C	/^DetermGETXGenerator::~DetermGETXGenerator()$/;"	f	class:DetermGETXGenerator
~DetermInvGenerator	tester/DetermInvGenerator.C	/^DetermInvGenerator::~DetermInvGenerator()$/;"	f	class:DetermInvGenerator
~DetermSeriesGETSGenerator	tester/DetermSeriesGETSGenerator.C	/^DetermSeriesGETSGenerator::~DetermSeriesGETSGenerator()$/;"	f	class:DetermSeriesGETSGenerator
~DeterministicDriver	tester/DeterministicDriver.C	/^DeterministicDriver::~DeterministicDriver()$/;"	f	class:DeterministicDriver
~DirectoryMemory	system/DirectoryMemory.C	/^DirectoryMemory::~DirectoryMemory()$/;"	f	class:DirectoryMemory
~Directory_Entry	generated/MI_example/Directory_Entry.h	/^  ~Directory_Entry() { };$/;"	f	class:Directory_Entry
~Driver	common/Driver.C	/^Driver::~Driver() {$/;"	f	class:Driver
~EventQueue	eventqueue/EventQueue.C	/^EventQueue::~EventQueue()$/;"	f	class:EventQueue
~GarnetNetwork	network/garnet-flexible-pipeline/GarnetNetwork.C	/^GarnetNetwork::~GarnetNetwork()$/;"	f	class:GarnetNetwork
~GarnetNetwork_d	network/garnet-fixed-pipeline/GarnetNetwork_d.C	/^GarnetNetwork_d::~GarnetNetwork_d()$/;"	f	class:GarnetNetwork_d
~GenericBloomFilter	system/GenericBloomFilter.C	/^GenericBloomFilter::~GenericBloomFilter() $/;"	f	class:GenericBloomFilter
~GpusimDramInterface	system/GpusimDramInterface.C	/^GpusimDramInterface::~GpusimDramInterface () {$/;"	f	class:GpusimDramInterface
~H3BloomFilter	system/H3BloomFilter.C	/^H3BloomFilter::~H3BloomFilter(){$/;"	f	class:H3BloomFilter
~Histogram	common/Histogram.C	/^Histogram::~Histogram()$/;"	f	class:Histogram
~InputUnit_d	network/garnet-fixed-pipeline/InputUnit_d.C	/^InputUnit_d::~InputUnit_d()$/;"	f	class:InputUnit_d
~L1Cache_Entry	generated/MI_example/L1Cache_Entry.h	/^  ~L1Cache_Entry() { };$/;"	f	class:L1Cache_Entry
~L1Cache_TBE	generated/MI_example/L1Cache_TBE.h	/^  ~L1Cache_TBE() { };$/;"	f	class:L1Cache_TBE
~LRUPolicy	system/LRUPolicy.h	/^LRUPolicy::~LRUPolicy()$/;"	f	class:LRUPolicy
~LSB_CountingBloomFilter	system/LSB_CountingBloomFilter.C	/^LSB_CountingBloomFilter::~LSB_CountingBloomFilter(){$/;"	f	class:LSB_CountingBloomFilter
~LifetimeTrace	profiler/LifetimeTrace.C	/^LifetimeTrace::~LifetimeTrace()$/;"	f	class:LifetimeTrace
~MemoryControl	system/MemoryControl.C	/^MemoryControl::~MemoryControl () {$/;"	f	class:MemoryControl
~MemoryMsg	generated/MI_example/MemoryMsg.h	/^  ~MemoryMsg() { };$/;"	f	class:MemoryMsg
~MemoryNode	system/MemoryNode.h	/^  ~MemoryNode() {};$/;"	f	class:MemoryNode
~Message	slicc_interface/Message.h	/^  virtual ~Message() { }$/;"	f	class:Message
~MultiBitSelBloomFilter	system/MultiBitSelBloomFilter.C	/^MultiBitSelBloomFilter::~MultiBitSelBloomFilter(){$/;"	f	class:MultiBitSelBloomFilter
~MultiGrainBloomFilter	system/MultiGrainBloomFilter.C	/^MultiGrainBloomFilter::~MultiGrainBloomFilter(){$/;"	f	class:MultiGrainBloomFilter
~Network	network/Network.h	/^  virtual ~Network() {}$/;"	f	class:Network
~NetworkInterface	network/garnet-flexible-pipeline/NetworkInterface.C	/^NetworkInterface::~NetworkInterface()$/;"	f	class:NetworkInterface
~NetworkInterface_d	network/garnet-fixed-pipeline/NetworkInterface_d.C	/^NetworkInterface_d::~NetworkInterface_d()$/;"	f	class:NetworkInterface_d
~NetworkLink	network/garnet-flexible-pipeline/NetworkLink.C	/^NetworkLink::~NetworkLink()$/;"	f	class:NetworkLink
~NetworkLink_d	network/garnet-fixed-pipeline/NetworkLink_d.C	/^NetworkLink_d::~NetworkLink_d()$/;"	f	class:NetworkLink_d
~NetworkMessage	slicc_interface/NetworkMessage.h	/^  virtual ~NetworkMessage() { }$/;"	f	class:NetworkMessage
~NodePersistentTable	system/NodePersistentTable.C	/^NodePersistentTable::~NodePersistentTable()$/;"	f	class:NodePersistentTable
~NonCountingBloomFilter	system/NonCountingBloomFilter.C	/^NonCountingBloomFilter::~NonCountingBloomFilter(){$/;"	f	class:NonCountingBloomFilter
~OutputUnit_d	network/garnet-fixed-pipeline/OutputUnit_d.C	/^OutputUnit_d::~OutputUnit_d()$/;"	f	class:OutputUnit_d
~PerfectSwitch	network/simple/PerfectSwitch.C	/^PerfectSwitch::~PerfectSwitch()$/;"	f	class:PerfectSwitch
~PersistentArbiter	system/PersistentArbiter.C	/^PersistentArbiter::~PersistentArbiter()$/;"	f	class:PersistentArbiter
~PersistentTable	system/PersistentTable.C	/^PersistentTable::~PersistentTable()$/;"	f	class:PersistentTable
~Profiler	profiler/Profiler.C	/^Profiler::~Profiler()$/;"	f	class:Profiler
~Protocol	generated/MI_example/Protocol.h	/^  ~Protocol() { };$/;"	f	class:Protocol
~PseudoLRUPolicy	system/PseudoLRUPolicy.h	/^PseudoLRUPolicy::~PseudoLRUPolicy()$/;"	f	class:PseudoLRUPolicy
~RaceyDriver	tester/RaceyDriver.C	/^RaceyDriver::~RaceyDriver()$/;"	f	class:RaceyDriver
~RequestGenerator	tester/RequestGenerator.C	/^RequestGenerator::~RequestGenerator()$/;"	f	class:RequestGenerator
~RequestMsg	generated/MI_example/RequestMsg.h	/^  ~RequestMsg() { };$/;"	f	class:RequestMsg
~ResponseMsg	generated/MI_example/ResponseMsg.h	/^  ~ResponseMsg() { };$/;"	f	class:ResponseMsg
~Router	network/garnet-flexible-pipeline/Router.C	/^Router::~Router()$/;"	f	class:Router
~RouterPowerArea_d	network/orion/NetworkPowerArea.h	/^	~RouterPowerArea_d(){};$/;"	f	class:RouterPowerArea_d
~Router_d	network/garnet-fixed-pipeline/Router_d.C	/^Router_d::~Router_d()$/;"	f	class:Router_d
~Sequencer	system/Sequencer.C	/^Sequencer::~Sequencer() {$/;"	f	class:Sequencer
~Set	common/OptBigSet.C	/^Set::~Set() {$/;"	f	class:Set
~SimicsDriver	simics/depreceated/SimicsDriver.C	/^SimicsDriver::~SimicsDriver() {$/;"	f	class:SimicsDriver
~SimicsHypervisor	simics/depreceated/SimicsHypervisor.C	/^SimicsHypervisor::~SimicsHypervisor() {$/;"	f	class:SimicsHypervisor
~SimicsProcessor	simics/depreceated/SimicsProcessor.h	/^  ~SimicsProcessor() {};$/;"	f	class:SimicsProcessor
~SimpleNetwork	network/simple/SimpleNetwork.C	/^SimpleNetwork::~SimpleNetwork()$/;"	f	class:SimpleNetwork
~SpecifiedGenerator	tester/SpecifiedGenerator.C	/^SpecifiedGenerator::~SpecifiedGenerator()$/;"	f	class:SpecifiedGenerator
~StoreBuffer	system/StoreBuffer.C	/^StoreBuffer::~StoreBuffer()$/;"	f	class:StoreBuffer
~StoreCache	system/StoreCache.C	/^StoreCache::~StoreCache()$/;"	f	class:StoreCache
~StoreTrace	profiler/StoreTrace.C	/^StoreTrace::~StoreTrace()$/;"	f	class:StoreTrace
~SubBlock	common/SubBlock.h	/^  ~SubBlock() { }$/;"	f	class:SubBlock
~Switch	network/simple/Switch.C	/^Switch::~Switch()$/;"	f	class:Switch
~Switch_d	network/garnet-fixed-pipeline/Switch_d.C	/^Switch_d::~Switch_d()$/;"	f	class:Switch_d
~SyntheticDriver	tester/SyntheticDriver.C	/^SyntheticDriver::~SyntheticDriver()$/;"	f	class:SyntheticDriver
~System	system/System.C	/^System::~System()$/;"	f	class:System
~TCpredictorAddrfixed	system/TCpredictor.C	/^TCpredictorAddrfixed::~TCpredictorAddrfixed() { }$/;"	f	class:TCpredictorAddrfixed
~TCpredictorBase	system/TCpredictor.h	/^    ~TCpredictorBase(){};$/;"	f	class:TCpredictorBase
~TCpredictorContainer	system/TCpredictor.C	/^TCpredictorContainer::~TCpredictorContainer()$/;"	f	class:TCpredictorContainer
~TCpredictorGlobal	system/TCpredictor.C	/^TCpredictorGlobal::~TCpredictorGlobal() { }$/;"	f	class:TCpredictorGlobal
~TCpredictorPCAdaptive	system/TCpredictor.C	/^TCpredictorPCAdaptive::~TCpredictorPCAdaptive() { }$/;"	f	class:TCpredictorPCAdaptive
~TCpredictorPCSampler	system/TCpredictor.C	/^TCpredictorPCSampler::~TCpredictorPCSampler() { }$/;"	f	class:TCpredictorPCSampler
~TCpredictorPCfixed	system/TCpredictor.C	/^TCpredictorPCfixed::~TCpredictorPCfixed() { }$/;"	f	class:TCpredictorPCfixed
~TCpredictorPerL2	system/TCpredictor.C	/^TCpredictorPerL2::~TCpredictorPerL2() { }$/;"	f	class:TCpredictorPerL2
~TestConsumer1	eventqueue/EventQueue_tester.C	/^  ~TestConsumer1() { }$/;"	f	class:TestConsumer1
~TestConsumer2	eventqueue/EventQueue_tester.C	/^  ~TestConsumer2() { }$/;"	f	class:TestConsumer2
~Tester	tester/Tester.C	/^Tester::~Tester()$/;"	f	class:Tester
~Throttle	network/simple/Throttle.h	/^  ~Throttle() {}$/;"	f	class:Throttle
~Topology	network/simple/Topology.h	/^  ~Topology() {}$/;"	f	class:Topology
~Tracer	recorder/Tracer.C	/^Tracer::~Tracer()$/;"	f	class:Tracer
~TriggerMsg	generated/MI_example/TriggerMsg.h	/^  ~TriggerMsg() { };$/;"	f	class:TriggerMsg
~VCarbiter	network/garnet-flexible-pipeline/VCarbiter.h	/^	~VCarbiter() {}$/;"	f	class:VCarbiter
~VirtualChannel_d	network/garnet-fixed-pipeline/VirtualChannel_d.C	/^VirtualChannel_d::~VirtualChannel_d()$/;"	f	class:VirtualChannel_d
~XactAbortRequestGenerator	tester/depreceated/XactAbortRequestGenerator.C	/^XactAbortRequestGenerator::~XactAbortRequestGenerator()$/;"	f	class:XactAbortRequestGenerator
~XactRequestGenerator	tester/depreceated/XactRequestGenerator.C	/^XactRequestGenerator::~XactRequestGenerator()$/;"	f	class:XactRequestGenerator
~gpusim_ruby	gpusim_ruby/gpusim_ruby.C	/^gpusim_ruby::~gpusim_ruby() {$/;"	f	class:gpusim_ruby
